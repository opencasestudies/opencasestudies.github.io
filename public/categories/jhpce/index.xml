<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JHPCE | Academic</title>
    <link>/categories/jhpce/</link>
      <atom:link href="/categories/jhpce/index.xml" rel="self" type="application/rss+xml" />
    <description>JHPCE</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Sun, 11 Mar 2018 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/img/icon-192.png</url>
      <title>JHPCE</title>
      <link>/categories/jhpce/</link>
    </image>
    
    <item>
      <title>Edit your bashrc file for a nicer terminal experience</title>
      <link>/post/edit-your-bashrc-file-for-a-nicer-terminal-experience/</link>
      <pubDate>Sun, 11 Mar 2018 00:00:00 +0000</pubDate>
      <guid>/post/edit-your-bashrc-file-for-a-nicer-terminal-experience/</guid>
      <description>


&lt;p&gt;By &lt;a href=&#34;http://lcolladotor.github.io&#34;&gt;L. Collado-Torres&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are working at LIBD or with large data, it’s very likely that it won’t fit in your laptop and that you’ll be using the terminal to interact with a high performance computing cluster (like &lt;a href=&#34;http://www.jhpce.jhu.edu/&#34;&gt;JHPCE&lt;/a&gt;) or server. Some small edits to your bash configuration file can make your terminal experience much more enjoyable and hopefully boost your productivity. The edits described below work for any OS. On Windows, I’m assuming that you are using &lt;code&gt;git bash&lt;/code&gt; or a similar terminal program.&lt;/p&gt;
&lt;p&gt;The way we can control our terminal appearance and some behavior is through the &lt;code&gt;.bashrc&lt;/code&gt; file. That file typically gets read once when loading a new terminal window and that is where we can save some shortcuts we like to use, alter the colors of our terminal, change the behavior of the up and down arrow keys, etc.&lt;/p&gt;
&lt;div id=&#34;bashrc-file&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;code&gt;.bashrc&lt;/code&gt; file&lt;/h3&gt;
&lt;p&gt;First, we need to learn where to locate this file. On all OS (Mac, Windows, Linux) machines/servers, the &lt;code&gt;.bashrc&lt;/code&gt; file typically lives at &lt;code&gt;~/.bashrc&lt;/code&gt;. For my Mac for example that is &lt;code&gt;/home/lcollado/.bashrc&lt;/code&gt;. For my Windows machine, that’s &lt;code&gt;/c/Users/Leonardo/.bashrc&lt;/code&gt;. Now, the dot before the file makes it a &lt;em&gt;hidden file&lt;/em&gt;. &lt;a href=&#34;http://lmgtfy.com/?q=show+hidden+files&#34;&gt;A quick search can help you&lt;/a&gt; find the options for your computer that lets you see these hidden files. From a terminal window, I typically use this bash command to show all the hidden files (that’s from the &lt;code&gt;a&lt;/code&gt; option).&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;## List files in human readable format including hidden files
ls -lha&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;initial-files&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Initial files&lt;/h3&gt;
&lt;p&gt;You might have a &lt;code&gt;~/.bashrc&lt;/code&gt; and a &lt;code&gt;~/.bash_profile&lt;/code&gt; already. If not, lets create simple ones. You can use the &lt;code&gt;touch&lt;/code&gt; bash command for make a new file (&lt;code&gt;touch ~/.bashrc&lt;/code&gt;), or you could use this R code:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;file.create(&amp;#39;~/.bashrc&amp;#39;)
file.create(&amp;#39;~/.bash_profile&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next open them with your text editor (say Notepad++, TextMate 2, RStudio, among others) and paste the following contents.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;~/.bash_profile&lt;/code&gt; contents&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Get the aliases and functions
if [ -f ~/.bashrc ]; then
        . ~/.bashrc
fi

# In my Mac one I also have this:
if [ -f ~/.profile ]; then
        . ~/.profile
fi&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Minimal &lt;code&gt;~/.bashrc&lt;/code&gt; contents&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Source global definitions
if [ -f /etc/bashrc ]; then
    . /etc/bashrc
fi&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;control-your-bash-history&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Control your bash history&lt;/h3&gt;
&lt;p&gt;Lets start adding features to our terminal experience by editing the &lt;code&gt;~/.bashrc&lt;/code&gt; file. I typically include comments &lt;code&gt;#&lt;/code&gt; describing what the code is doing and where I learned how to do &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt;. The first part is controlling your bash history. I want to have a longer history than what is included by default and where duplicates are deleted.&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;# http://www.biostat.jhsph.edu/~afisher/ComputingClub/webfiles/KasperHansenPres/IntermediateUnix.pdf
# https://unix.stackexchange.com/questions/48713/how-can-i-remove-duplicates-in-my-bash-history-preserving-order
export HISTCONTROL=ignoreboth:erasedups
export HISTSIZE=10000
shopt -s histappend
shopt -s cmdhist&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;change-the-up-and-down-arrows&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Change the up and down arrows&lt;/h3&gt;
&lt;p&gt;The next change will save you a lot of time! Plus it goes nicely with the bash history changes we just made. Normally, the up and down arrow let you select previous commands from your bash history (up) or select one of your latest commands (down, after having used up). The following changes make it so that the up arrow searches only commands that start with exactly the letters you had already typed.&lt;/p&gt;
&lt;p&gt;Lets say that you just requested a compute node with &lt;code&gt;qrsh&lt;/code&gt; and you have an empty line.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-edit-your-bashrc-file-for-a-nicer-terminal-experience_files/Screen Shot 2018-03-11 at 7.38.34 PM.png&#34; alt=&#34;qrsh&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;If you use the &lt;code&gt;up&lt;/code&gt; arrow, you can navigate your command history. So far, this is the same as the default &lt;code&gt;up&lt;/code&gt; arrow behavior.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-edit-your-bashrc-file-for-a-nicer-terminal-experience_files/Screen Shot 2018-03-11 at 7.38.48 PM.png&#34; alt=&#34;empty up&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;Lets say that I want to change directory to one of my recent projects. So I type &lt;code&gt;cd /&lt;/code&gt; in the terminal window (without hitting enter).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-edit-your-bashrc-file-for-a-nicer-terminal-experience_files/Screen Shot 2018-03-11 at 7.39.16 PM.png&#34; alt=&#34;empty cd&#34; width=&#34;300&#34;/&gt;&lt;/p&gt;
&lt;p&gt;Next I use the &lt;code&gt;up&lt;/code&gt; arrow, and it only finds for me commands that start with &lt;code&gt;cd /&lt;/code&gt;, including this long one.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-edit-your-bashrc-file-for-a-nicer-terminal-experience_files/Screen Shot 2018-03-11 at 7.39.52 PM.png&#34; alt=&#34;cd and up&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;Did you like this? Well, add the following code to your &lt;code&gt;~/.bashrc&lt;/code&gt; file&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;# Auto-complete command from history
# http://lindesk.com/2009/04/customize-terminal-configuration-setting-bash-cli-power-user/
export INPUTRC=~/.inputrc&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;where &lt;code&gt;~/.inputrc&lt;/code&gt; file has the following contents:&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;#Page up/page down
&amp;quot;\e[B&amp;quot;: history-search-forward
&amp;quot;\e[A&amp;quot;: history-search-backward

$include /etc/inputrc&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As an added benefit, the up and down arrows will now have this improved behavior when you run &lt;code&gt;R&lt;/code&gt; inside a terminal, although it’s limited to your current R history: actually, I guess that you could change your .Rprofile to load the previous R history.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;interactive-deleting-of-files&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Interactive deleting of files&lt;/h3&gt;
&lt;p&gt;In a terminal, you normally delete files with &lt;code&gt;rm&lt;/code&gt;, but you can make an alias (shortcut) so that when you are deleting files with &lt;code&gt;rmi&lt;/code&gt; you will get asked to confirm whether you want to delete the file or not. This can be useful if you are using some patterns for finding the files that you are trying to delete but want to make sure that the pattern didn’t catch other files you want to keep.&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;# http://superuser.com/questions/384769/alias-rm-rm-i-considered-harmful
alias rmi=&amp;#39;rm -i&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;change-the-command-prompt&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Change the command prompt&lt;/h3&gt;
&lt;p&gt;You can also control the command prompt. That is, the parts that are shown before you start typing in your terminal. I like keeping it short, so it only shows me the parent directory instead of the full path, plus a small version for the time (hh:mm) in a 12 hour clock. This is sometimes useful if I run some commands and later on want to get a quick idea if any of them took a while to run (specially if I was not looking at the terminal).&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;# Change command prompt
# http://www.cyberciti.biz/tips/howto-linux-unix-bash-shell-setup-prompt.html
# http://www.cyberciti.biz/faq/bash-shell-change-the-color-of-my-shell-prompt-under-linux-or-unix/
# https://bbs.archlinux.org/viewtopic.php?id=48910
# previous in enigma2: &amp;quot;[\u@\h \W]\$ &amp;quot;
# previously in mac: &amp;quot;\h:\W \u\$ &amp;quot;
export PS1=&amp;quot;\[\e[0;33m\]\A \W \$ \[\e[m\]&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;colors&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Colors&lt;/h3&gt;
&lt;p&gt;You can change the colors of your terminal. For example, do you want directories to be shown in blue and/or bold font while executable files are shown in red. This goes in hand with the &lt;code&gt;ls --color=auto&lt;/code&gt; shortcut to make sure that the colors are used (Mac: you might need &lt;code&gt;brew install coreutils&lt;/code&gt; as described &lt;a href=&#34;https://superuser.com/questions/183876/how-do-i-get-ls-color-auto-to-work-on-mac-os-x&#34;&gt;in this blog post&lt;/a&gt;). The following lines of my &lt;code&gt;~/.bashrc&lt;/code&gt; file include some old history of the colors and how I use to have other options.&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;# colors
# http://norbauer.com/notebooks/code/notes/ls-colors-and-terminal-app
# used BSD pattern ExGxFxDxBxEgEdxbxgxhxd on http://geoff.greer.fm/lscolors/
# that tool does not specify the colors, which I did by looking manually at
# http://blog.twistedcode.org/2008/04/lscolors-explained.html
# and the norbauer.com site previously mentioned
alias ls=&amp;quot;ls --color=auto&amp;quot;
#export LS_COLORS=&amp;quot;di=1;34;40:ln=1;36;40:so=1;35;40:pi=1;93;40:ex=1;31;40:bd=1;34;46:cd=1;34;43:su=0;41:sg=0;46:tw=0;47:ow=0;43&amp;quot;
## After switching to RStudio:
# https://askubuntu.com/questions/466198/how-do-i-change-the-color-for-directories-with-ls-in-the-console
export LS_COLORS=&amp;quot;di=0;32:ln=0;36:so=0;35:pi=0;93:ex=0;31:bd=0;34;46:cd=0;34;43:su=0;41:sg=0;46:tw=0;47:ow=0;43:fi=0;33&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Mac extra lines:&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;# Uncomment below for Mac and comment the two previous commands
#export CLICOLOR=1
#export LSCOLORS=&amp;quot;ExGxFxDxBxEgEdxbxgxhxd&amp;quot;
## Actually from https://superuser.com/questions/183876/how-do-i-get-ls-color-auto-to-work-on-mac-os-x
# brew install coreutils
# then change the aliast to use gls instead of ls
# that way I can use the same config file =)

alias ls=&amp;quot;gls --color=auto&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I use the same &lt;code&gt;LS_COLORS&lt;/code&gt; now on my Mac too, but you don’t need to.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;UPDATE&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We got this note from Mark Miller, admin of &lt;a href=&#34;http://www.jhpce.jhu.edu/&#34;&gt;JHPCE&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One quick note on your page. You mention setting colors for the ls output, which is great. One thing we (and others) have found is that, for a directory on a Lustre filesystem (/dcl01 or /dcl02), using “ls –colors=auto” or “ls -al” on a directory with lots (thousands+) of files in it can be super slow. With these options, the ls command needs to iterate through each file in the directory, and query the lustre server for each and every file to retrieve information about the file in order to determine what color to display. So, if you’re regularly using directories on Lustre that have lots of files in them, and your “ls” command it taking too long, we recommend using “ls –color=none”. &lt;a href=&#34;https://wikis.nyu.edu/display/NYUHPC/Lustre+FAQ&#34; class=&#34;uri&#34;&gt;https://wikis.nyu.edu/display/NYUHPC/Lustre+FAQ&lt;/a&gt; &lt;a href=&#34;https://groups.google.com/forum/#!topic/lustre-discuss-list/3afjd4j2Q-g&#34; class=&#34;uri&#34;&gt;https://groups.google.com/forum/#!topic/lustre-discuss-list/3afjd4j2Q-g&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;shortcuts-for-main-project-directories&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Shortcuts for main project directories&lt;/h3&gt;
&lt;p&gt;We’ve seen several aliases (shortcuts) already such as the one for &lt;code&gt;ls --color=auto&lt;/code&gt; which is the one I use the most. But I also use aliases for changing to the root directories that I use &lt;em&gt;the&lt;/em&gt; most.&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;alias labold=&amp;quot;cd /dcl01/lieber/ajaffe/lab&amp;quot;
alias lab=&amp;quot;cd /dcl01/ajaffe/data/lab&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Actually, we were supposed to just use the new disk here and I should have probably chosen better names to differentiate the two.&lt;/p&gt;
&lt;p&gt;The next terminal window you open after editing the &lt;code&gt;~/.bashrc&lt;/code&gt; file will have all your new features enabled.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/10UeedrT5MIfPG/giphy.gif&#34;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://giphy.com/reactions/search/yay&#34;&gt;Source&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;extra&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Extra&lt;/h3&gt;
&lt;p&gt;Sometimes you might need to export other environment variables, such as &lt;code&gt;RMATE_PORT&lt;/code&gt; described in the &lt;code&gt;rmate&lt;/code&gt; setup &lt;a href=&#34;http://research.libd.org/rstatsclub/2018/03/11/textmate-setup-mac-only/&#34;&gt;post&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;repeat-this-process&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Repeat this process&lt;/h3&gt;
&lt;p&gt;You can/should repeat this process for other &lt;code&gt;~/.bashrc&lt;/code&gt; files you interact with. In my case, that would be:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;~/.bashrc&lt;/code&gt; in my Mac laptop&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~/.bashrc&lt;/code&gt; at my JHPCE home&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~/.bashrc&lt;/code&gt; in my Windows laptop&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;acknowledgements&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This blog post was made possible thanks to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;http://bioconductor.org/packages/BiocStyle&#34;&gt;BiocStyle&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Oles_2018&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/Bioconductor/BiocStyle&#39;&gt;Oleś, Morgan, and Huber, 2018&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Xie_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/rstudio/blogdown&#39;&gt;Xie, Hill, and Thomas, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=devtools&#34;&gt;devtools&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Wickham_2018&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=devtools&#39;&gt;Wickham, Hester, and Chang, 2018&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;knitcitations&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Boettiger_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=knitcitations&#39;&gt;Boettiger, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Boettiger_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Boettiger_2017&#34;&gt;[1]&lt;/a&gt;&lt;cite&gt; C. Boettiger. &lt;em&gt;knitcitations: Citations for ‘Knitr’ Markdown Files&lt;/em&gt;. R package version 1.0.8. 2017. URL: &lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;https://CRAN.R-project.org/package=knitcitations&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Oles_2018&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Oles_2018&#34;&gt;[2]&lt;/a&gt;&lt;cite&gt; A. Oleś, M. Morgan and W. Huber. &lt;em&gt;BiocStyle: Standard styles for vignettes and other Bioconductor documents&lt;/em&gt;. R package version 2.8.2. 2018. URL: &lt;a href=&#34;https://github.com/Bioconductor/BiocStyle&#34;&gt;https://github.com/Bioconductor/BiocStyle&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Wickham_2018&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Wickham_2018&#34;&gt;[3]&lt;/a&gt;&lt;cite&gt; H. Wickham, J. Hester and W. Chang. &lt;em&gt;devtools: Tools to Make Developing R Packages Easier&lt;/em&gt;. R package version 1.13.6. 2018. URL: &lt;a href=&#34;https://CRAN.R-project.org/package=devtools&#34;&gt;https://CRAN.R-project.org/package=devtools&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Xie_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Xie_2017&#34;&gt;[4]&lt;/a&gt;&lt;cite&gt; Y. Xie, A. P. Hill and A. Thomas. &lt;em&gt;blogdown: Creating Websites with R Markdown&lt;/em&gt;. ISBN 978-0815363729. Boca Raton, Florida: Chapman and Hall/CRC, 2017. URL: &lt;a href=&#34;https://github.com/rstudio/blogdown&#34;&gt;https://github.com/rstudio/blogdown&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;reproducibility&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Reproducibility&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;## Session info ----------------------------------------------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  setting  value                                      
##  version  R version 3.5.1 Patched (2018-10-14 r75439)
##  system   x86_64, darwin15.6.0                       
##  ui       X11                                        
##  language (EN)                                       
##  collate  en_US.UTF-8                                
##  tz       America/New_York                           
##  date     2018-10-26&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Packages --------------------------------------------------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  package       * version date       source                            
##  backports       1.1.2   2017-12-13 cran (@1.1.2)                     
##  base          * 3.5.1   2018-10-15 local                             
##  bibtex          0.4.2   2017-06-30 CRAN (R 3.5.0)                    
##  BiocStyle     * 2.8.2   2018-05-30 Bioconductor                      
##  blogdown        0.8     2018-07-15 CRAN (R 3.5.0)                    
##  bookdown        0.7     2018-02-18 CRAN (R 3.5.0)                    
##  colorout      * 1.2-0   2018-05-03 Github (jalvesaq/colorout@c42088d)
##  compiler        3.5.1   2018-10-15 local                             
##  datasets      * 3.5.1   2018-10-15 local                             
##  devtools      * 1.13.6  2018-06-27 cran (@1.13.6)                    
##  digest          0.6.18  2018-10-10 CRAN (R 3.5.0)                    
##  evaluate        0.12    2018-10-09 CRAN (R 3.5.0)                    
##  graphics      * 3.5.1   2018-10-15 local                             
##  grDevices     * 3.5.1   2018-10-15 local                             
##  htmltools       0.3.6   2017-04-28 cran (@0.3.6)                     
##  httr            1.3.1   2017-08-20 CRAN (R 3.5.0)                    
##  jsonlite        1.5     2017-06-01 CRAN (R 3.5.0)                    
##  knitcitations * 1.0.8   2017-07-04 CRAN (R 3.5.0)                    
##  knitr           1.20    2018-02-20 cran (@1.20)                      
##  lubridate       1.7.4   2018-04-11 CRAN (R 3.5.0)                    
##  magrittr        1.5     2014-11-22 cran (@1.5)                       
##  memoise         1.1.0   2017-04-21 CRAN (R 3.5.0)                    
##  methods       * 3.5.1   2018-10-15 local                             
##  plyr            1.8.4   2016-06-08 cran (@1.8.4)                     
##  R6              2.3.0   2018-10-04 CRAN (R 3.5.0)                    
##  Rcpp            0.12.19 2018-10-01 CRAN (R 3.5.1)                    
##  RefManageR      1.2.0   2018-04-25 CRAN (R 3.5.0)                    
##  rmarkdown       1.10    2018-06-11 CRAN (R 3.5.0)                    
##  rprojroot       1.3-2   2018-01-03 cran (@1.3-2)                     
##  stats         * 3.5.1   2018-10-15 local                             
##  stringi         1.2.4   2018-07-20 CRAN (R 3.5.0)                    
##  stringr         1.3.1   2018-05-10 CRAN (R 3.5.0)                    
##  tools           3.5.1   2018-10-15 local                             
##  utils         * 3.5.1   2018-10-15 local                             
##  withr           2.1.2   2018-03-15 CRAN (R 3.5.0)                    
##  xfun            0.3     2018-07-06 CRAN (R 3.5.0)                    
##  xml2            1.2.0   2018-01-24 CRAN (R 3.5.0)                    
##  yaml            2.2.0   2018-07-25 CRAN (R 3.5.0)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Textmate setup (Mac only)</title>
      <link>/post/textmate-setup-mac-only/</link>
      <pubDate>Sun, 11 Mar 2018 00:00:00 +0000</pubDate>
      <guid>/post/textmate-setup-mac-only/</guid>
      <description>


&lt;p&gt;By &lt;a href=&#34;http://lcolladotor.github.io&#34;&gt;L. Collado-Torres&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For the past 6-7 years I have been using &lt;em&gt;TextMate 2&lt;/em&gt; as my text editor which I’ve found useful for R code, bash, Markdown, etc. You could also look into &lt;em&gt;Sublime Text&lt;/em&gt; or use &lt;em&gt;RStudio&lt;/em&gt; (post about this setup coming soon).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 1.37.28 PM.png&#34; alt=&#34;textmate look&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;Sometimes students are interested in this setup, which is what I’ll document here. Though I want to highlight that you can get a very similar setup using other tools. Note that this setup only works for Mac computers.&lt;/p&gt;
&lt;div id=&#34;setup&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Setup&lt;/h3&gt;
&lt;p&gt;First, install &lt;a href=&#34;http://macromates.com/download&#34;&gt;TextMate 2&lt;/a&gt; for free. &lt;em&gt;TextMate&lt;/em&gt; allows users to contribute &lt;em&gt;bundles&lt;/em&gt; which are a set of tools that enhance the editor. For example, if you want to quickly insert an R code chunk in a &lt;code&gt;.Rmd&lt;/code&gt; file you can add a &lt;em&gt;command&lt;/em&gt; for it inside a bundle. You can also use a bundle to get the editor to recognize R code inside an R markdown code chunk. Probably the easiest way to get jump-started is to copy my exact setup.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;change-some-preferences&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Change some preferences&lt;/h3&gt;
&lt;p&gt;So next, go to the &lt;em&gt;preferences&lt;/em&gt; menu&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 1.41.05 PM.png&#34; alt=&#34;preferences&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;and under bundle, choose the R bundle as shown below.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 1.40.54 PM.png&#34; alt=&#34;bundle&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;As you can see, it hasn’t been updated in a while. I have made a few edits myself here and there which I’ll describe in the next section.&lt;/p&gt;
&lt;p&gt;You should also enable running &lt;em&gt;TextMate&lt;/em&gt; from the terminal.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 2.15.06 PM.png&#34; alt=&#34;enable terminal&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;Finally, here are my main file preferences: I want my files to be &lt;code&gt;.R&lt;/code&gt; files by default and to use linux line endings to avoid issues later on.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 2.39.09 PM.png&#34; alt=&#34;main prefs&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;adding-bundles-from-git&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Adding bundles from git&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;TextMate&lt;/em&gt; allows you to install bundles by adding the bundle files in a specific folder. The bundle files are most likely in a GitHub repository, so you just need to clone (download) them to where &lt;em&gt;TextMate&lt;/em&gt; expect them to be.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/lcolladotor/r.tmbundle&#34; class=&#34;uri&#34;&gt;https://github.com/lcolladotor/r.tmbundle&lt;/a&gt; for R and sending code to be evaluated in an iTerm2 terminal (setup explained later)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/noniq/Merge-Markers.tmbundle&#34; class=&#34;uri&#34;&gt;https://github.com/noniq/Merge-Markers.tmbundle&lt;/a&gt; for git merging&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/elia/base16-themes.tmbundle&#34; class=&#34;uri&#34;&gt;https://github.com/elia/base16-themes.tmbundle&lt;/a&gt; for theme colors&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/lcolladotor/criticmarkup.tmbundle&#34; class=&#34;uri&#34;&gt;https://github.com/lcolladotor/criticmarkup.tmbundle&lt;/a&gt; for CriticMarkup in Markdown files&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/lcolladotor/knitr.tmbundle&#34; class=&#34;uri&#34;&gt;https://github.com/lcolladotor/knitr.tmbundle&lt;/a&gt; for &lt;code&gt;knitr::knit()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/lcolladotor/markdown-redcarpet.tmbundle&#34; class=&#34;uri&#34;&gt;https://github.com/lcolladotor/markdown-redcarpet.tmbundle&lt;/a&gt; for basically running &lt;code&gt;rmarkdown::render()&lt;/code&gt; on the document at hand and previewing it live (if it’s an html doc). It also makes it so that R code inside code chunks will be recognized as such, enabling all the R code shortcuts.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;## Go to main bundle directory
cd ~/Library/Application\ Support/TextMate/

## Download Leonardo&amp;#39;s bundles (he uses the leo branch)
## For R, sendind code to iTerm2
git clone https://github.com/lcolladotor/r.tmbundle.git

## For merging
git clone https://github.com/noniq/Merge-Markers.tmbundle.git

## For more color themes
git clone https://github.com/elia/base16-themes.tmbundle.git

## For commenting Markdown files
git clone https://github.com/lcolladotor/criticmarkup.tmbundle.git

## For knitr::knit()
git clone https://github.com/lcolladotor/knitr.tmbundle.git

## For rmarkdown::render()
git clone https://github.com/lcolladotor/markdown-redcarpet.tmbundle.git&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As you can see, these bundles help adapt &lt;em&gt;TextMate2&lt;/em&gt; for working with R files of different flavors. But it’s not beginner friendly, hence the upcoming blog post about using RStudio.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;some-feature-highlights&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Some feature highlights&lt;/h3&gt;
&lt;p&gt;One of the features that I really like from &lt;em&gt;TextMate&lt;/em&gt; is searching/replacing (you can use regex) across all the files and sub-directories of a given directory. It’s very useful when trying to fix a common typo across different files or finding all the places where a function/argument was used. The latter one is handy when you are looking at someone else’s code. It’s basically like searching inside a GitHub repository: example, &lt;a href=&#34;https://github.com/rstudio/blogdown/search?utf8=%E2%9C%93&amp;amp;q=baseurl&amp;amp;type=&#34;&gt;search &lt;code&gt;baseurl&lt;/code&gt;&lt;/a&gt; in all of &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; for finding the code that reads it from a config file, which I did for this &lt;a href=&#34;https://github.com/rstudio/blogdown/pull/275&#34;&gt;PR&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 2.29.33 PM.png&#34; alt=&#34;search in dir&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;You can also comment all the lines of code you have selected fairly easily using the &lt;code&gt;Source&lt;/code&gt; bundle.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 2.41.31 PM.png&#34; alt=&#34;comment all lines&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;I’ve also used the &lt;code&gt;Text&lt;/code&gt;, &lt;code&gt;LaTeX&lt;/code&gt; and &lt;code&gt;Gist&lt;/code&gt; bundles, though not as frequently. Also, &lt;em&gt;TextMate&lt;/em&gt; automatically spell checks for you and knows to ignore R markdown code chunks.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;evaluating-code-in-r-console-or-iterm2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Evaluating code in R console or iTerm2&lt;/h3&gt;
&lt;p&gt;If you download and install the &lt;a href=&#34;https://www.iterm2.com/&#34;&gt;iTerm2&lt;/a&gt; terminal, you can configure &lt;em&gt;TextMate&lt;/em&gt; to evaluate the code in that terminal. The particular code I have for doing this is in the &lt;code&gt;leo&lt;/code&gt; branch of the following repo &lt;a href=&#34;https://github.com/lcolladotor/r.tmbundle/commits/leo&#34; class=&#34;uri&#34;&gt;https://github.com/lcolladotor/r.tmbundle/commits/leo&lt;/a&gt;. In total I use 3 different keyboard shortcuts depending on whether I want to evaluate the code:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;in an R console window;&lt;/li&gt;
&lt;li&gt;in an R console window after automatically running &lt;code&gt;setwd()&lt;/code&gt; to the directory that contains the files I’m looking at;&lt;/li&gt;
&lt;li&gt;to the &lt;em&gt;iTerm2&lt;/em&gt; terminal, which is useful when working with a computing cluster.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;getwd() ## run in terminal with cmd + enter shortcut

getwd() ## run in R console using backtip (`) shortcut

getwd() ## run in R console using cmd + R, runs setwd() first&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 2.13.32 PM.png&#34; alt=&#34;evaluating code&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;running-rmarkdownrender&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Running &lt;code&gt;rmarkdown::render()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;If I’m working with an R Markdown file (&lt;code&gt;.Rmd&lt;/code&gt; extension), I frequently use the &lt;code&gt;alt (option) + t&lt;/code&gt; shortcut for running &lt;code&gt;rmarkdown::render()&lt;/code&gt; and viewing the output file.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 2.19.30 PM.png&#34; alt=&#34;knit with rmarkdown&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;For example, if I’m working with the &lt;code&gt;recount-brain/index.Rmd&lt;/code&gt; file (you can get it &lt;a href=&#34;https://github.com/LieberInstitute/recount-brain/blob/master/index.Rmd&#34;&gt;here&lt;/a&gt;), my setup allows me to run all the R shortcuts. That’s because it recognizes the R code chunk syntax and uses the &lt;code&gt;source.r&lt;/code&gt; &lt;em&gt;scope&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 2.23.57 PM.png&#34; alt=&#34;rmd scope&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;Anyway, after using &lt;code&gt;alt (option) + t&lt;/code&gt; &lt;em&gt;TextMate&lt;/em&gt; shows me the final html.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 2.21.37 PM.png&#34; alt=&#34;rendered html&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;A lot of the bundles in TextMate are from the days when we run &lt;code&gt;Sweave()&lt;/code&gt;. So they work well with &lt;code&gt;.Rnw&lt;/code&gt; files and all the like. I did modify one of them to use &lt;code&gt;knitr::knit()&lt;/code&gt; instead of &lt;code&gt;Sweave()&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;mate-and-rmate&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;code&gt;mate&lt;/code&gt; and &lt;code&gt;rmate&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;If you enable the terminal preferences you can now use the &lt;code&gt;mate&lt;/code&gt; command in any directory in your laptop. &lt;em&gt;TextMate&lt;/em&gt; will open and show you all the tabs of files you had last opened in that same directory. This behavior is also a part of the &lt;code&gt;.Rproj&lt;/code&gt; files with RStudio.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 2.46.51 PM.png&#34; alt=&#34;run mate&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;The command I &lt;em&gt;really&lt;/em&gt; like is &lt;code&gt;rmate&lt;/code&gt; because it enables me to remotely open a file from the cluster in &lt;em&gt;TextMate&lt;/em&gt;, which combined with the &lt;em&gt;evaluate in iTerm2&lt;/em&gt; command makes it easy to work. Basically, I power up an &lt;em&gt;iTerm2&lt;/em&gt; terminal, log into the cluster, navigate to the directory that contains the files I’m working with, and then open them remotely with &lt;code&gt;rmate&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 2.52.21 PM.png&#34; alt=&#34;rmate&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;Setting up &lt;code&gt;rmate&lt;/code&gt; takes a bit of work but it’s definitely worth it.&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;In the cluster, install &lt;code&gt;rmate&lt;/code&gt; following the instructions at &lt;a href=&#34;https://github.com/textmate/rmate&#34; class=&#34;uri&#34;&gt;https://github.com/textmate/rmate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Find a port that works for doing the forwarding. The default one will likely be taken already by another user. Find more about this &lt;a href=&#34;https://www.ssh.com/ssh/tunneling/example&#34;&gt;here&lt;/a&gt;. There they use &lt;code&gt;ssh -R 8080:localhost:80 public.example.com&lt;/code&gt; for testing. Sadly, I don’t know of a quick and easy way to find a port for you to use :/&lt;/li&gt;
&lt;li&gt;Edit your cluster’s &lt;code&gt;~/.bashrc&lt;/code&gt; file with the port information. Mine includes these lines where &lt;code&gt;someSecretPortNumber&lt;/code&gt; is replaced by my port number.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;## rmate port
# https://github.com/textmate/rmate
export RMATE_PORT=&amp;quot;someSecretPortNumber&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;4&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Edit your laptop’s &lt;code&gt;~/.ssh/config&lt;/code&gt; file so you don’t have to specify the port every time you &lt;code&gt;ssh&lt;/code&gt; into the &lt;code&gt;JHPCE&lt;/code&gt; cluster:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;## Will work later as (aka, less typing):
## ssh j
## ssh cluster
Host j cluster
    User yourUsernameGoesHere
    Hostname jhpce01.jhsph.edu
    RemoteForward someSecretPortNumber localhost:someSecretPortNumber
    ForwardX11 yes
    ForwardX11Trusted yes&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;5&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Edit your cluster’s &lt;code&gt;~/.ssh/config&lt;/code&gt; file so the port gets forwarded also when you access a compute node with &lt;code&gt;qrsh&lt;/code&gt;. All of JHPCE’s compute nodes are named &lt;code&gt;compute&lt;/code&gt;something, so we can take advantage of that in the config file.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;# For rmate
Host compute*
    RemoteForward someSecretPortNumber localhost:someSecretPortNumber&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once you do these steps, &lt;code&gt;rmate&lt;/code&gt; should work on a new terminal window.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/3oeSAz6FqXCKuNFX6o/giphy.gif&#34;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://giphy.com/reactions/featured/good-luck&#34;&gt;Source&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;textmate-variables&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;em&gt;TextMate&lt;/em&gt; variables&lt;/h3&gt;
&lt;p&gt;I don’t remember right now if I manually edited the &lt;em&gt;TextMate&lt;/em&gt; variables, but just in case, here’s the info.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 2.34.38 PM.png&#34; alt=&#34;textmate vars&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;acknowledgements&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This blog post was made possible thanks to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;http://bioconductor.org/packages/BiocStyle&#34;&gt;BiocStyle&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Oles_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/Bioconductor/BiocStyle&#39;&gt;Oleś, Morgan, and Huber, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Xie_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/rstudio/blogdown&#39;&gt;Xie, Hill, and Thomas, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=devtools&#34;&gt;devtools&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Wickham_2018&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=devtools&#39;&gt;Wickham, Hester, and Chang, 2018&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;knitcitations&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Boettiger_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=knitcitations&#39;&gt;Boettiger, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Boettiger_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Boettiger_2017&#34;&gt;[1]&lt;/a&gt;&lt;cite&gt; C. Boettiger. &lt;em&gt;knitcitations: Citations for ‘Knitr’ Markdown Files&lt;/em&gt;. R package version 1.0.8. 2017. URL: &lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;https://CRAN.R-project.org/package=knitcitations&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Oles_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Oles_2017&#34;&gt;[2]&lt;/a&gt;&lt;cite&gt; A. Oleś, M. Morgan and W. Huber. &lt;em&gt;BiocStyle: Standard styles for vignettes and other Bioconductor documents&lt;/em&gt;. R package version 2.6.1. 2017. URL: &lt;a href=&#34;https://github.com/Bioconductor/BiocStyle&#34;&gt;https://github.com/Bioconductor/BiocStyle&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Wickham_2018&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Wickham_2018&#34;&gt;[3]&lt;/a&gt;&lt;cite&gt; H. Wickham, J. Hester and W. Chang. &lt;em&gt;devtools: Tools to Make Developing R Packages Easier&lt;/em&gt;. R package version 1.13.5. 2018. URL: &lt;a href=&#34;https://CRAN.R-project.org/package=devtools&#34;&gt;https://CRAN.R-project.org/package=devtools&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Xie_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Xie_2017&#34;&gt;[4]&lt;/a&gt;&lt;cite&gt; Y. Xie, A. P. Hill and A. Thomas. &lt;em&gt;blogdown: Creating Websites with R Markdown&lt;/em&gt;. ISBN 978-0815363729. Boca Raton, Florida: Chapman and Hall/CRC, 2017. URL: &lt;a href=&#34;https://github.com/rstudio/blogdown&#34;&gt;https://github.com/rstudio/blogdown&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;reproducibility&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Reproducibility&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;## Session info ----------------------------------------------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  setting  value                       
##  version  R version 3.4.3 (2017-11-30)
##  system   x86_64, darwin15.6.0        
##  ui       X11                         
##  language (EN)                        
##  collate  en_US.UTF-8                 
##  tz       America/New_York            
##  date     2018-03-11&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Packages --------------------------------------------------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  package       * version date       source                               
##  backports       1.1.2   2017-12-13 CRAN (R 3.4.3)                       
##  base          * 3.4.3   2017-12-07 local                                
##  bibtex          0.4.2   2017-06-30 CRAN (R 3.4.1)                       
##  BiocStyle     * 2.6.1   2017-11-30 Bioconductor                         
##  blogdown        0.5.10  2018-03-10 Github (lcolladotor/blogdown@471b086)
##  bookdown        0.7     2018-02-18 cran (@0.7)                          
##  colorout      * 1.2-0   2018-02-19 Github (jalvesaq/colorout@2f01173)   
##  compiler        3.4.3   2017-12-07 local                                
##  datasets      * 3.4.3   2017-12-07 local                                
##  devtools      * 1.13.5  2018-02-18 CRAN (R 3.4.3)                       
##  digest          0.6.15  2018-01-28 CRAN (R 3.4.3)                       
##  evaluate        0.10.1  2017-06-24 CRAN (R 3.4.1)                       
##  graphics      * 3.4.3   2017-12-07 local                                
##  grDevices     * 3.4.3   2017-12-07 local                                
##  htmltools       0.3.6   2017-04-28 CRAN (R 3.4.0)                       
##  httr            1.3.1   2017-08-20 CRAN (R 3.4.1)                       
##  jsonlite        1.5     2017-06-01 CRAN (R 3.4.0)                       
##  knitcitations * 1.0.8   2017-07-04 CRAN (R 3.4.1)                       
##  knitr           1.20    2018-02-20 cran (@1.20)                         
##  lubridate       1.7.3   2018-02-27 CRAN (R 3.4.3)                       
##  magrittr        1.5     2014-11-22 CRAN (R 3.4.0)                       
##  memoise         1.1.0   2017-04-21 CRAN (R 3.4.0)                       
##  methods       * 3.4.3   2017-12-07 local                                
##  plyr            1.8.4   2016-06-08 CRAN (R 3.4.0)                       
##  R6              2.2.2   2017-06-17 CRAN (R 3.4.0)                       
##  Rcpp            0.12.15 2018-01-20 CRAN (R 3.4.3)                       
##  RefManageR      0.14.20 2017-08-17 CRAN (R 3.4.1)                       
##  rmarkdown       1.9     2018-03-01 cran (@1.9)                          
##  rprojroot       1.3-2   2018-01-03 CRAN (R 3.4.3)                       
##  stats         * 3.4.3   2017-12-07 local                                
##  stringi         1.1.6   2017-11-17 CRAN (R 3.4.2)                       
##  stringr         1.3.0   2018-02-19 cran (@1.3.0)                        
##  tools           3.4.3   2017-12-07 local                                
##  utils         * 3.4.3   2017-12-07 local                                
##  withr           2.1.1   2017-12-19 CRAN (R 3.4.3)                       
##  xfun            0.1     2018-01-22 CRAN (R 3.4.3)                       
##  xml2            1.2.0   2018-01-24 CRAN (R 3.4.3)                       
##  yaml            2.1.18  2018-03-08 cran (@2.1.18)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
