<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>setup | Academic</title>
    <link>/categories/setup/</link>
      <atom:link href="/categories/setup/index.xml" rel="self" type="application/rss+xml" />
    <description>setup</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Tue, 17 Apr 2018 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/img/icon-192.png</url>
      <title>setup</title>
      <link>/categories/setup/</link>
    </image>
    
    <item>
      <title>git to know git: an 8 minute introduction</title>
      <link>/post/git-to-know-git/</link>
      <pubDate>Tue, 17 Apr 2018 00:00:00 +0000</pubDate>
      <guid>/post/git-to-know-git/</guid>
      <description>


&lt;p&gt;By &lt;a href=&#34;http://amy-peterson.github.io&#34;&gt;Amy Peterson&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;using-git&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Using Git&lt;/h3&gt;
&lt;p&gt;Git is a version control system that allows you to track changes made to files while working on a project, either independently or in collaboration with others. It provides a way to save many different components of a project in progress, including the source code, but also the figures and data that the code produces. The importance of understanding and using Git lies in its ability to maintain an organized record of a project, also referred to as a &lt;strong&gt;repository&lt;/strong&gt; or &lt;strong&gt;repo&lt;/strong&gt;, as it evolves. While setting up and learning to use Git may seem intimidating, the majority of the work is in the initial setup.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;github&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;GitHub&lt;/h3&gt;
&lt;p&gt;GitHub is one of the hosting services that provides an interface for using Git, and can be thought of as Dropbox for version control projects. GitHub is one of the ways to store &lt;strong&gt;repositories&lt;/strong&gt; using Git, and is an easy way to routinely back-up your work as you make progress on a project. It is also helpful for tracking changes, demonstrating who contributed to which projects, when they contributed, and what their contributions were.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;why-i-use-git&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Why I Use Git&lt;/h3&gt;
&lt;p&gt;When I started as an Intern at the &lt;a href=&#34;http://www.libd.org&#34;&gt;LIBD&lt;/a&gt;, I noticed how frequently GitHub was used. As I familiarized myself with some of the projects I would be working on, it became clear how much easier it was to use a system that could document project changes made throughout time in a way that was widely accessible to contributors. Using GitHub also made it easier to re-visit certain scripts or documents to determine what changes were made, when, and why they were needed. Having a detailed history of various project components is an easy way to ensure that contributors have information organized in the same way.&lt;/p&gt;
&lt;p&gt;Beyond working on projects with collaborators, using GitHub is equally rewarding when used for individual projects. Particularly if working on some projects at work on one computer, and needing those updates to be accessible on a different computer at home, GitHub is a quick and easy way to keep a project updated across computers to ensure you are always working on the latest updates.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;terms&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Terms&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;commit&lt;/strong&gt;: saves changes, either adding a new file to GitHub, or updating the existing version of that file&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;issue&lt;/strong&gt;: option on GitHub that creates a list of action items for a repository, similar to a to-do list; tasks can be assigned to particular contributors; also possible to commented on and reference particular tasks within a commit message by including # and the issue number&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;push&lt;/strong&gt;: sends the commits made locally to the repository on GitHub&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;pull&lt;/strong&gt;: downloads modified or newly added files, so the local directory matches the current repository on GitHub&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;public-v.-private-repositories&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Public v. Private Repositories&lt;/h2&gt;
&lt;p&gt;Repositories can be public or private. Public repositories are readable to everyone, but permissions are still required to make edits by pushing commits. Private repositories are inaccessible and unreadable without permission, with the repository owner having control to moderate who has access to read, edit, or extend admin access.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;features&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Features&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-04-17-git-to-know-git_files/git%20features.png&#34; height=&#34;60&#34; /&gt; &lt;strong&gt;Watch&lt;/strong&gt;: Provides a way to receive notifications regarding all updates on a particular repository of interest.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Star&lt;/strong&gt;: Marks a specific repository of interest, making it easier to refer back to it later. Differs from &lt;strong&gt;watch&lt;/strong&gt; in that you do not receive notifications for repository updates.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Fork&lt;/strong&gt;: Downloads a copy of the current version of the file from GitHub. The downloaded copy exists separately from the repo, and reflects the file as is at the time of the download.&lt;/p&gt;
&lt;div id=&#34;initial-set-up&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Initial Set-Up&lt;/h3&gt;
&lt;p&gt;Make an account on &lt;a href=&#34;https://github.com/join&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;mac&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Mac&lt;/h2&gt;
&lt;p&gt;On newer Macs this should already be set up, but checking is easy!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Open Terminal Application
which git # determine if Git is installed
git --version # lists current Git version installed

## If not installed, use the following to install
git --version
git config &lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;windows&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Windows&lt;/h2&gt;
&lt;p&gt;Install &lt;a href=&#34;https://gitforwindows.org&#34;&gt;Git for Windows&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;after-git-installation&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;After Git Installation&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Open Terminal (Mac) or Git Bash (Windows)
## Enter the name and email associated with your GitHub account
git config --global user.name &amp;quot;Amy Peterson&amp;quot;
git config --global.email &amp;quot;amy.peterson@jhu.edu&amp;quot;
git config --global --list # Lists global configuration options &lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;setting-up-a-repository&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Setting Up a Repository&lt;/h3&gt;
&lt;p&gt;Identify a repository you want to contribute to, or create your own! Repositories can be created on the front page using “Start a project” or by clicking the green “New” button by clicking repositories from your profile page.&lt;/p&gt;
&lt;p&gt;Next, take the following steps&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Open Terminal (Mac) or Git Bash (Windows)
# Change directories so you are in the directory where you want to set up the repository
get pwd() #gives name of current directory 
cd /~Desktop #changes current directory to Desktop 
ls #lists folders you can cd into 
# On the repository page on GitHub, click the green &amp;quot;Clone or Download&amp;quot;
git clone git@GitHub.com:SampleLink.git # Paste link from GitHub to download the repository locally&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;saving-your-work&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Saving Your Work&lt;/h3&gt;
&lt;p&gt;The process of updating GitHub is as follows: &lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-04-17-git-to-know-git_files/git%20process.png&#34; height=&#34;80&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Open Terminal (Mac) or Git Bash (Windows)
git add File1.R # adds file, here File1.R, to GitHub
git commit -m &amp;quot;Example message&amp;quot; # attaches the message in parentheses to the files being added to GitHub
git push # save file to GitHub

# Once updates are pushed, other repository members need to do the following
git pull # updates local directory to reflect the changes made to GitHub&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-04-17-git-to-know-git_files/git%20status.png&#34; height=&#34;50&#34; /&gt; Useful at any time throughout the process of updating a repository, &lt;code&gt;git status&lt;/code&gt; provides information regarding how your local directory differs from the repository on GitHub, and separates those differences into which files have had changes made, and which files are entirely new. In the example below, &lt;strong&gt;File1.R&lt;/strong&gt; and &lt;strong&gt;File2.pdf&lt;/strong&gt; have been modified from what exists on GitHub, while &lt;strong&gt;File3.R&lt;/strong&gt; and &lt;strong&gt;File4.pdf&lt;/strong&gt; are &lt;code&gt;untracked&lt;/code&gt;, or entirely new to the repository.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-04-17-git-to-know-git_files/git%20status%20result.png&#34; width=&#34;500&#34; /&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;committing-folders&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Committing Folders&lt;/h2&gt;
&lt;p&gt;Folders associated with a project can also be committed to a repository on GitHub. Folders that are currently untracked will be listed in response to &lt;code&gt;git status&lt;/code&gt;, and committing a folder to a repository will simultaneously commit all of its contents. This is particularly useful and efficient when creating a repository for an existing project.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;making-multiple-commits&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Making Multiple Commits&lt;/h2&gt;
&lt;p&gt;Multiple commits can be made to group files before pushing them to GitHub. Each set of files you have added using &lt;code&gt;git add&lt;/code&gt; will be grouped together as a single commit once you type &lt;code&gt;git commit&lt;/code&gt; and enter the commit message you want associated with the files. Then, once all the commits you are ready to make are finished, use &lt;code&gt;git push&lt;/code&gt; to save the commits to GitHub.&lt;/p&gt;
&lt;div id=&#34;starting-a-repository-for-an-existing-project&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Starting a Repository for an Existing Project&lt;/h3&gt;
&lt;p&gt;There are only a few differences for setting up a repository for an existing project, compared to the steps previously described.&lt;/p&gt;
&lt;p&gt;Most importantly, after setting up a new repository on GitHub, the next screen will list a number of options. If you are setting up a repository for an existing project, and hoping to commit locally saved files, you will first need to &lt;code&gt;cd&lt;/code&gt; into the locally existing project folder. Then use the instructions below that appear under on the GitHub website under the header “create a new repository on the command line”. In the screenshot from the example below, the repository I named is called “test”.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-04-17-git-to-know-git_files/Existing%20Project.png&#34; width=&#34;500&#34; /&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;git-ignore&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Git Ignore&lt;/h2&gt;
&lt;p&gt;Git ignore files are important for both new and old project repositories. They are scripts that specify which file types should be ignored, meaning they will not be included in the list &lt;code&gt;git status&lt;/code&gt; provides to inform you of local files that are not currently saved to GitHub. Git ignore is important when creating a repository for an existing project, since there will be some existing local files that you will not want to include in the repository, for example, larger files that are not necessary to upload and include on the repository long-term. With new project repositories, you do not need to start with an extensive git ignore file, but can edit it as the project evolves, since it will become more clear over time which file types you do not want to include in the repository.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Open Terminal (Mac) or Git Bash (Windows)
touch .gitignore # Creates git ignore file
# Open the file to edit, then commit the file to your GitHub repository&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An example of a git ignore file is below. As demonstrated, an asterisk can be used to designate entire file types to ignore. For example, adding &lt;code&gt;*.zip&lt;/code&gt; would ignore any zip files that are saved locally when using &lt;code&gt;git status&lt;/code&gt; to determine the differences between local files and the repository on GitHub. &lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-04-17-git-to-know-git_files/git%20ignore.png&#34; width=&#34;350&#34; /&gt;&lt;/p&gt;
&lt;div id=&#34;summary&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Summary&lt;/h3&gt;
&lt;p&gt;The general steps for saving files from your local directory to GitHub is&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git add -&amp;gt; git commit -&amp;gt; git push&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Git pull will be used to download files from GitHub to match what exists on your local directory.&lt;/p&gt;
&lt;p&gt;This project was written as a brief introduction to Git and GitHub, for individuals who are interested in incorporating Git into their work. This post is by no means a comprehensive introduction. For more detailed information regarding GitHub, and using Git, &lt;a href=&#34;http://happygitwithr.com&#34;&gt;Happy Git and GitHub for the useR&lt;/a&gt; is a great resource.&lt;/p&gt;
&lt;p&gt;Hopefully this post was helpful in serving as a brief introduction and a way to become more familiarized with some of the basic concepts behind Git and GitHub. Feel free to leave questions or share your story in the comments!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Edit your bashrc file for a nicer terminal experience</title>
      <link>/post/edit-your-bashrc-file-for-a-nicer-terminal-experience/</link>
      <pubDate>Sun, 11 Mar 2018 00:00:00 +0000</pubDate>
      <guid>/post/edit-your-bashrc-file-for-a-nicer-terminal-experience/</guid>
      <description>


&lt;p&gt;By &lt;a href=&#34;http://lcolladotor.github.io&#34;&gt;L. Collado-Torres&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are working at LIBD or with large data, it’s very likely that it won’t fit in your laptop and that you’ll be using the terminal to interact with a high performance computing cluster (like &lt;a href=&#34;http://www.jhpce.jhu.edu/&#34;&gt;JHPCE&lt;/a&gt;) or server. Some small edits to your bash configuration file can make your terminal experience much more enjoyable and hopefully boost your productivity. The edits described below work for any OS. On Windows, I’m assuming that you are using &lt;code&gt;git bash&lt;/code&gt; or a similar terminal program.&lt;/p&gt;
&lt;p&gt;The way we can control our terminal appearance and some behavior is through the &lt;code&gt;.bashrc&lt;/code&gt; file. That file typically gets read once when loading a new terminal window and that is where we can save some shortcuts we like to use, alter the colors of our terminal, change the behavior of the up and down arrow keys, etc.&lt;/p&gt;
&lt;div id=&#34;bashrc-file&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;code&gt;.bashrc&lt;/code&gt; file&lt;/h3&gt;
&lt;p&gt;First, we need to learn where to locate this file. On all OS (Mac, Windows, Linux) machines/servers, the &lt;code&gt;.bashrc&lt;/code&gt; file typically lives at &lt;code&gt;~/.bashrc&lt;/code&gt;. For my Mac for example that is &lt;code&gt;/home/lcollado/.bashrc&lt;/code&gt;. For my Windows machine, that’s &lt;code&gt;/c/Users/Leonardo/.bashrc&lt;/code&gt;. Now, the dot before the file makes it a &lt;em&gt;hidden file&lt;/em&gt;. &lt;a href=&#34;http://lmgtfy.com/?q=show+hidden+files&#34;&gt;A quick search can help you&lt;/a&gt; find the options for your computer that lets you see these hidden files. From a terminal window, I typically use this bash command to show all the hidden files (that’s from the &lt;code&gt;a&lt;/code&gt; option).&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;## List files in human readable format including hidden files
ls -lha&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;initial-files&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Initial files&lt;/h3&gt;
&lt;p&gt;You might have a &lt;code&gt;~/.bashrc&lt;/code&gt; and a &lt;code&gt;~/.bash_profile&lt;/code&gt; already. If not, lets create simple ones. You can use the &lt;code&gt;touch&lt;/code&gt; bash command for make a new file (&lt;code&gt;touch ~/.bashrc&lt;/code&gt;), or you could use this R code:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;file.create(&amp;#39;~/.bashrc&amp;#39;)
file.create(&amp;#39;~/.bash_profile&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next open them with your text editor (say Notepad++, TextMate 2, RStudio, among others) and paste the following contents.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;~/.bash_profile&lt;/code&gt; contents&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Get the aliases and functions
if [ -f ~/.bashrc ]; then
        . ~/.bashrc
fi

# In my Mac one I also have this:
if [ -f ~/.profile ]; then
        . ~/.profile
fi&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Minimal &lt;code&gt;~/.bashrc&lt;/code&gt; contents&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Source global definitions
if [ -f /etc/bashrc ]; then
    . /etc/bashrc
fi&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;control-your-bash-history&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Control your bash history&lt;/h3&gt;
&lt;p&gt;Lets start adding features to our terminal experience by editing the &lt;code&gt;~/.bashrc&lt;/code&gt; file. I typically include comments &lt;code&gt;#&lt;/code&gt; describing what the code is doing and where I learned how to do &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt;. The first part is controlling your bash history. I want to have a longer history than what is included by default and where duplicates are deleted.&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;# http://www.biostat.jhsph.edu/~afisher/ComputingClub/webfiles/KasperHansenPres/IntermediateUnix.pdf
# https://unix.stackexchange.com/questions/48713/how-can-i-remove-duplicates-in-my-bash-history-preserving-order
export HISTCONTROL=ignoreboth:erasedups
export HISTSIZE=10000
shopt -s histappend
shopt -s cmdhist&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;change-the-up-and-down-arrows&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Change the up and down arrows&lt;/h3&gt;
&lt;p&gt;The next change will save you a lot of time! Plus it goes nicely with the bash history changes we just made. Normally, the up and down arrow let you select previous commands from your bash history (up) or select one of your latest commands (down, after having used up). The following changes make it so that the up arrow searches only commands that start with exactly the letters you had already typed.&lt;/p&gt;
&lt;p&gt;Lets say that you just requested a compute node with &lt;code&gt;qrsh&lt;/code&gt; and you have an empty line.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-edit-your-bashrc-file-for-a-nicer-terminal-experience_files/Screen Shot 2018-03-11 at 7.38.34 PM.png&#34; alt=&#34;qrsh&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;If you use the &lt;code&gt;up&lt;/code&gt; arrow, you can navigate your command history. So far, this is the same as the default &lt;code&gt;up&lt;/code&gt; arrow behavior.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-edit-your-bashrc-file-for-a-nicer-terminal-experience_files/Screen Shot 2018-03-11 at 7.38.48 PM.png&#34; alt=&#34;empty up&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;Lets say that I want to change directory to one of my recent projects. So I type &lt;code&gt;cd /&lt;/code&gt; in the terminal window (without hitting enter).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-edit-your-bashrc-file-for-a-nicer-terminal-experience_files/Screen Shot 2018-03-11 at 7.39.16 PM.png&#34; alt=&#34;empty cd&#34; width=&#34;300&#34;/&gt;&lt;/p&gt;
&lt;p&gt;Next I use the &lt;code&gt;up&lt;/code&gt; arrow, and it only finds for me commands that start with &lt;code&gt;cd /&lt;/code&gt;, including this long one.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-edit-your-bashrc-file-for-a-nicer-terminal-experience_files/Screen Shot 2018-03-11 at 7.39.52 PM.png&#34; alt=&#34;cd and up&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;Did you like this? Well, add the following code to your &lt;code&gt;~/.bashrc&lt;/code&gt; file&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;# Auto-complete command from history
# http://lindesk.com/2009/04/customize-terminal-configuration-setting-bash-cli-power-user/
export INPUTRC=~/.inputrc&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;where &lt;code&gt;~/.inputrc&lt;/code&gt; file has the following contents:&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;#Page up/page down
&amp;quot;\e[B&amp;quot;: history-search-forward
&amp;quot;\e[A&amp;quot;: history-search-backward

$include /etc/inputrc&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As an added benefit, the up and down arrows will now have this improved behavior when you run &lt;code&gt;R&lt;/code&gt; inside a terminal, although it’s limited to your current R history: actually, I guess that you could change your .Rprofile to load the previous R history.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;interactive-deleting-of-files&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Interactive deleting of files&lt;/h3&gt;
&lt;p&gt;In a terminal, you normally delete files with &lt;code&gt;rm&lt;/code&gt;, but you can make an alias (shortcut) so that when you are deleting files with &lt;code&gt;rmi&lt;/code&gt; you will get asked to confirm whether you want to delete the file or not. This can be useful if you are using some patterns for finding the files that you are trying to delete but want to make sure that the pattern didn’t catch other files you want to keep.&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;# http://superuser.com/questions/384769/alias-rm-rm-i-considered-harmful
alias rmi=&amp;#39;rm -i&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;change-the-command-prompt&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Change the command prompt&lt;/h3&gt;
&lt;p&gt;You can also control the command prompt. That is, the parts that are shown before you start typing in your terminal. I like keeping it short, so it only shows me the parent directory instead of the full path, plus a small version for the time (hh:mm) in a 12 hour clock. This is sometimes useful if I run some commands and later on want to get a quick idea if any of them took a while to run (specially if I was not looking at the terminal).&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;# Change command prompt
# http://www.cyberciti.biz/tips/howto-linux-unix-bash-shell-setup-prompt.html
# http://www.cyberciti.biz/faq/bash-shell-change-the-color-of-my-shell-prompt-under-linux-or-unix/
# https://bbs.archlinux.org/viewtopic.php?id=48910
# previous in enigma2: &amp;quot;[\u@\h \W]\$ &amp;quot;
# previously in mac: &amp;quot;\h:\W \u\$ &amp;quot;
export PS1=&amp;quot;\[\e[0;33m\]\A \W \$ \[\e[m\]&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;colors&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Colors&lt;/h3&gt;
&lt;p&gt;You can change the colors of your terminal. For example, do you want directories to be shown in blue and/or bold font while executable files are shown in red. This goes in hand with the &lt;code&gt;ls --color=auto&lt;/code&gt; shortcut to make sure that the colors are used (Mac: you might need &lt;code&gt;brew install coreutils&lt;/code&gt; as described &lt;a href=&#34;https://superuser.com/questions/183876/how-do-i-get-ls-color-auto-to-work-on-mac-os-x&#34;&gt;in this blog post&lt;/a&gt;). The following lines of my &lt;code&gt;~/.bashrc&lt;/code&gt; file include some old history of the colors and how I use to have other options.&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;# colors
# http://norbauer.com/notebooks/code/notes/ls-colors-and-terminal-app
# used BSD pattern ExGxFxDxBxEgEdxbxgxhxd on http://geoff.greer.fm/lscolors/
# that tool does not specify the colors, which I did by looking manually at
# http://blog.twistedcode.org/2008/04/lscolors-explained.html
# and the norbauer.com site previously mentioned
alias ls=&amp;quot;ls --color=auto&amp;quot;
#export LS_COLORS=&amp;quot;di=1;34;40:ln=1;36;40:so=1;35;40:pi=1;93;40:ex=1;31;40:bd=1;34;46:cd=1;34;43:su=0;41:sg=0;46:tw=0;47:ow=0;43&amp;quot;
## After switching to RStudio:
# https://askubuntu.com/questions/466198/how-do-i-change-the-color-for-directories-with-ls-in-the-console
export LS_COLORS=&amp;quot;di=0;32:ln=0;36:so=0;35:pi=0;93:ex=0;31:bd=0;34;46:cd=0;34;43:su=0;41:sg=0;46:tw=0;47:ow=0;43:fi=0;33&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Mac extra lines:&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;# Uncomment below for Mac and comment the two previous commands
#export CLICOLOR=1
#export LSCOLORS=&amp;quot;ExGxFxDxBxEgEdxbxgxhxd&amp;quot;
## Actually from https://superuser.com/questions/183876/how-do-i-get-ls-color-auto-to-work-on-mac-os-x
# brew install coreutils
# then change the aliast to use gls instead of ls
# that way I can use the same config file =)

alias ls=&amp;quot;gls --color=auto&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I use the same &lt;code&gt;LS_COLORS&lt;/code&gt; now on my Mac too, but you don’t need to.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;UPDATE&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We got this note from Mark Miller, admin of &lt;a href=&#34;http://www.jhpce.jhu.edu/&#34;&gt;JHPCE&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One quick note on your page. You mention setting colors for the ls output, which is great. One thing we (and others) have found is that, for a directory on a Lustre filesystem (/dcl01 or /dcl02), using “ls –colors=auto” or “ls -al” on a directory with lots (thousands+) of files in it can be super slow. With these options, the ls command needs to iterate through each file in the directory, and query the lustre server for each and every file to retrieve information about the file in order to determine what color to display. So, if you’re regularly using directories on Lustre that have lots of files in them, and your “ls” command it taking too long, we recommend using “ls –color=none”. &lt;a href=&#34;https://wikis.nyu.edu/display/NYUHPC/Lustre+FAQ&#34; class=&#34;uri&#34;&gt;https://wikis.nyu.edu/display/NYUHPC/Lustre+FAQ&lt;/a&gt; &lt;a href=&#34;https://groups.google.com/forum/#!topic/lustre-discuss-list/3afjd4j2Q-g&#34; class=&#34;uri&#34;&gt;https://groups.google.com/forum/#!topic/lustre-discuss-list/3afjd4j2Q-g&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;shortcuts-for-main-project-directories&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Shortcuts for main project directories&lt;/h3&gt;
&lt;p&gt;We’ve seen several aliases (shortcuts) already such as the one for &lt;code&gt;ls --color=auto&lt;/code&gt; which is the one I use the most. But I also use aliases for changing to the root directories that I use &lt;em&gt;the&lt;/em&gt; most.&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;alias labold=&amp;quot;cd /dcl01/lieber/ajaffe/lab&amp;quot;
alias lab=&amp;quot;cd /dcl01/ajaffe/data/lab&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Actually, we were supposed to just use the new disk here and I should have probably chosen better names to differentiate the two.&lt;/p&gt;
&lt;p&gt;The next terminal window you open after editing the &lt;code&gt;~/.bashrc&lt;/code&gt; file will have all your new features enabled.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/10UeedrT5MIfPG/giphy.gif&#34;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://giphy.com/reactions/search/yay&#34;&gt;Source&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;extra&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Extra&lt;/h3&gt;
&lt;p&gt;Sometimes you might need to export other environment variables, such as &lt;code&gt;RMATE_PORT&lt;/code&gt; described in the &lt;code&gt;rmate&lt;/code&gt; setup &lt;a href=&#34;http://research.libd.org/rstatsclub/2018/03/11/textmate-setup-mac-only/&#34;&gt;post&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;repeat-this-process&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Repeat this process&lt;/h3&gt;
&lt;p&gt;You can/should repeat this process for other &lt;code&gt;~/.bashrc&lt;/code&gt; files you interact with. In my case, that would be:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;~/.bashrc&lt;/code&gt; in my Mac laptop&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~/.bashrc&lt;/code&gt; at my JHPCE home&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~/.bashrc&lt;/code&gt; in my Windows laptop&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;acknowledgements&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This blog post was made possible thanks to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;http://bioconductor.org/packages/BiocStyle&#34;&gt;BiocStyle&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Oles_2018&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/Bioconductor/BiocStyle&#39;&gt;Oleś, Morgan, and Huber, 2018&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Xie_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/rstudio/blogdown&#39;&gt;Xie, Hill, and Thomas, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=devtools&#34;&gt;devtools&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Wickham_2018&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=devtools&#39;&gt;Wickham, Hester, and Chang, 2018&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;knitcitations&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Boettiger_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=knitcitations&#39;&gt;Boettiger, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Boettiger_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Boettiger_2017&#34;&gt;[1]&lt;/a&gt;&lt;cite&gt; C. Boettiger. &lt;em&gt;knitcitations: Citations for ‘Knitr’ Markdown Files&lt;/em&gt;. R package version 1.0.8. 2017. URL: &lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;https://CRAN.R-project.org/package=knitcitations&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Oles_2018&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Oles_2018&#34;&gt;[2]&lt;/a&gt;&lt;cite&gt; A. Oleś, M. Morgan and W. Huber. &lt;em&gt;BiocStyle: Standard styles for vignettes and other Bioconductor documents&lt;/em&gt;. R package version 2.8.2. 2018. URL: &lt;a href=&#34;https://github.com/Bioconductor/BiocStyle&#34;&gt;https://github.com/Bioconductor/BiocStyle&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Wickham_2018&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Wickham_2018&#34;&gt;[3]&lt;/a&gt;&lt;cite&gt; H. Wickham, J. Hester and W. Chang. &lt;em&gt;devtools: Tools to Make Developing R Packages Easier&lt;/em&gt;. R package version 1.13.6. 2018. URL: &lt;a href=&#34;https://CRAN.R-project.org/package=devtools&#34;&gt;https://CRAN.R-project.org/package=devtools&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Xie_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Xie_2017&#34;&gt;[4]&lt;/a&gt;&lt;cite&gt; Y. Xie, A. P. Hill and A. Thomas. &lt;em&gt;blogdown: Creating Websites with R Markdown&lt;/em&gt;. ISBN 978-0815363729. Boca Raton, Florida: Chapman and Hall/CRC, 2017. URL: &lt;a href=&#34;https://github.com/rstudio/blogdown&#34;&gt;https://github.com/rstudio/blogdown&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;reproducibility&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Reproducibility&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;## Session info ----------------------------------------------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  setting  value                                      
##  version  R version 3.5.1 Patched (2018-10-14 r75439)
##  system   x86_64, darwin15.6.0                       
##  ui       X11                                        
##  language (EN)                                       
##  collate  en_US.UTF-8                                
##  tz       America/New_York                           
##  date     2018-10-26&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Packages --------------------------------------------------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  package       * version date       source                            
##  backports       1.1.2   2017-12-13 cran (@1.1.2)                     
##  base          * 3.5.1   2018-10-15 local                             
##  bibtex          0.4.2   2017-06-30 CRAN (R 3.5.0)                    
##  BiocStyle     * 2.8.2   2018-05-30 Bioconductor                      
##  blogdown        0.8     2018-07-15 CRAN (R 3.5.0)                    
##  bookdown        0.7     2018-02-18 CRAN (R 3.5.0)                    
##  colorout      * 1.2-0   2018-05-03 Github (jalvesaq/colorout@c42088d)
##  compiler        3.5.1   2018-10-15 local                             
##  datasets      * 3.5.1   2018-10-15 local                             
##  devtools      * 1.13.6  2018-06-27 cran (@1.13.6)                    
##  digest          0.6.18  2018-10-10 CRAN (R 3.5.0)                    
##  evaluate        0.12    2018-10-09 CRAN (R 3.5.0)                    
##  graphics      * 3.5.1   2018-10-15 local                             
##  grDevices     * 3.5.1   2018-10-15 local                             
##  htmltools       0.3.6   2017-04-28 cran (@0.3.6)                     
##  httr            1.3.1   2017-08-20 CRAN (R 3.5.0)                    
##  jsonlite        1.5     2017-06-01 CRAN (R 3.5.0)                    
##  knitcitations * 1.0.8   2017-07-04 CRAN (R 3.5.0)                    
##  knitr           1.20    2018-02-20 cran (@1.20)                      
##  lubridate       1.7.4   2018-04-11 CRAN (R 3.5.0)                    
##  magrittr        1.5     2014-11-22 cran (@1.5)                       
##  memoise         1.1.0   2017-04-21 CRAN (R 3.5.0)                    
##  methods       * 3.5.1   2018-10-15 local                             
##  plyr            1.8.4   2016-06-08 cran (@1.8.4)                     
##  R6              2.3.0   2018-10-04 CRAN (R 3.5.0)                    
##  Rcpp            0.12.19 2018-10-01 CRAN (R 3.5.1)                    
##  RefManageR      1.2.0   2018-04-25 CRAN (R 3.5.0)                    
##  rmarkdown       1.10    2018-06-11 CRAN (R 3.5.0)                    
##  rprojroot       1.3-2   2018-01-03 cran (@1.3-2)                     
##  stats         * 3.5.1   2018-10-15 local                             
##  stringi         1.2.4   2018-07-20 CRAN (R 3.5.0)                    
##  stringr         1.3.1   2018-05-10 CRAN (R 3.5.0)                    
##  tools           3.5.1   2018-10-15 local                             
##  utils         * 3.5.1   2018-10-15 local                             
##  withr           2.1.2   2018-03-15 CRAN (R 3.5.0)                    
##  xfun            0.3     2018-07-06 CRAN (R 3.5.0)                    
##  xml2            1.2.0   2018-01-24 CRAN (R 3.5.0)                    
##  yaml            2.2.0   2018-07-25 CRAN (R 3.5.0)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Textmate setup (Mac only)</title>
      <link>/post/textmate-setup-mac-only/</link>
      <pubDate>Sun, 11 Mar 2018 00:00:00 +0000</pubDate>
      <guid>/post/textmate-setup-mac-only/</guid>
      <description>


&lt;p&gt;By &lt;a href=&#34;http://lcolladotor.github.io&#34;&gt;L. Collado-Torres&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For the past 6-7 years I have been using &lt;em&gt;TextMate 2&lt;/em&gt; as my text editor which I’ve found useful for R code, bash, Markdown, etc. You could also look into &lt;em&gt;Sublime Text&lt;/em&gt; or use &lt;em&gt;RStudio&lt;/em&gt; (post about this setup coming soon).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 1.37.28 PM.png&#34; alt=&#34;textmate look&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;Sometimes students are interested in this setup, which is what I’ll document here. Though I want to highlight that you can get a very similar setup using other tools. Note that this setup only works for Mac computers.&lt;/p&gt;
&lt;div id=&#34;setup&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Setup&lt;/h3&gt;
&lt;p&gt;First, install &lt;a href=&#34;http://macromates.com/download&#34;&gt;TextMate 2&lt;/a&gt; for free. &lt;em&gt;TextMate&lt;/em&gt; allows users to contribute &lt;em&gt;bundles&lt;/em&gt; which are a set of tools that enhance the editor. For example, if you want to quickly insert an R code chunk in a &lt;code&gt;.Rmd&lt;/code&gt; file you can add a &lt;em&gt;command&lt;/em&gt; for it inside a bundle. You can also use a bundle to get the editor to recognize R code inside an R markdown code chunk. Probably the easiest way to get jump-started is to copy my exact setup.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;change-some-preferences&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Change some preferences&lt;/h3&gt;
&lt;p&gt;So next, go to the &lt;em&gt;preferences&lt;/em&gt; menu&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 1.41.05 PM.png&#34; alt=&#34;preferences&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;and under bundle, choose the R bundle as shown below.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 1.40.54 PM.png&#34; alt=&#34;bundle&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;As you can see, it hasn’t been updated in a while. I have made a few edits myself here and there which I’ll describe in the next section.&lt;/p&gt;
&lt;p&gt;You should also enable running &lt;em&gt;TextMate&lt;/em&gt; from the terminal.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 2.15.06 PM.png&#34; alt=&#34;enable terminal&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;Finally, here are my main file preferences: I want my files to be &lt;code&gt;.R&lt;/code&gt; files by default and to use linux line endings to avoid issues later on.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 2.39.09 PM.png&#34; alt=&#34;main prefs&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;adding-bundles-from-git&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Adding bundles from git&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;TextMate&lt;/em&gt; allows you to install bundles by adding the bundle files in a specific folder. The bundle files are most likely in a GitHub repository, so you just need to clone (download) them to where &lt;em&gt;TextMate&lt;/em&gt; expect them to be.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/lcolladotor/r.tmbundle&#34; class=&#34;uri&#34;&gt;https://github.com/lcolladotor/r.tmbundle&lt;/a&gt; for R and sending code to be evaluated in an iTerm2 terminal (setup explained later)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/noniq/Merge-Markers.tmbundle&#34; class=&#34;uri&#34;&gt;https://github.com/noniq/Merge-Markers.tmbundle&lt;/a&gt; for git merging&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/elia/base16-themes.tmbundle&#34; class=&#34;uri&#34;&gt;https://github.com/elia/base16-themes.tmbundle&lt;/a&gt; for theme colors&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/lcolladotor/criticmarkup.tmbundle&#34; class=&#34;uri&#34;&gt;https://github.com/lcolladotor/criticmarkup.tmbundle&lt;/a&gt; for CriticMarkup in Markdown files&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/lcolladotor/knitr.tmbundle&#34; class=&#34;uri&#34;&gt;https://github.com/lcolladotor/knitr.tmbundle&lt;/a&gt; for &lt;code&gt;knitr::knit()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/lcolladotor/markdown-redcarpet.tmbundle&#34; class=&#34;uri&#34;&gt;https://github.com/lcolladotor/markdown-redcarpet.tmbundle&lt;/a&gt; for basically running &lt;code&gt;rmarkdown::render()&lt;/code&gt; on the document at hand and previewing it live (if it’s an html doc). It also makes it so that R code inside code chunks will be recognized as such, enabling all the R code shortcuts.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;## Go to main bundle directory
cd ~/Library/Application\ Support/TextMate/

## Download Leonardo&amp;#39;s bundles (he uses the leo branch)
## For R, sendind code to iTerm2
git clone https://github.com/lcolladotor/r.tmbundle.git

## For merging
git clone https://github.com/noniq/Merge-Markers.tmbundle.git

## For more color themes
git clone https://github.com/elia/base16-themes.tmbundle.git

## For commenting Markdown files
git clone https://github.com/lcolladotor/criticmarkup.tmbundle.git

## For knitr::knit()
git clone https://github.com/lcolladotor/knitr.tmbundle.git

## For rmarkdown::render()
git clone https://github.com/lcolladotor/markdown-redcarpet.tmbundle.git&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As you can see, these bundles help adapt &lt;em&gt;TextMate2&lt;/em&gt; for working with R files of different flavors. But it’s not beginner friendly, hence the upcoming blog post about using RStudio.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;some-feature-highlights&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Some feature highlights&lt;/h3&gt;
&lt;p&gt;One of the features that I really like from &lt;em&gt;TextMate&lt;/em&gt; is searching/replacing (you can use regex) across all the files and sub-directories of a given directory. It’s very useful when trying to fix a common typo across different files or finding all the places where a function/argument was used. The latter one is handy when you are looking at someone else’s code. It’s basically like searching inside a GitHub repository: example, &lt;a href=&#34;https://github.com/rstudio/blogdown/search?utf8=%E2%9C%93&amp;amp;q=baseurl&amp;amp;type=&#34;&gt;search &lt;code&gt;baseurl&lt;/code&gt;&lt;/a&gt; in all of &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; for finding the code that reads it from a config file, which I did for this &lt;a href=&#34;https://github.com/rstudio/blogdown/pull/275&#34;&gt;PR&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 2.29.33 PM.png&#34; alt=&#34;search in dir&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;You can also comment all the lines of code you have selected fairly easily using the &lt;code&gt;Source&lt;/code&gt; bundle.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 2.41.31 PM.png&#34; alt=&#34;comment all lines&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;I’ve also used the &lt;code&gt;Text&lt;/code&gt;, &lt;code&gt;LaTeX&lt;/code&gt; and &lt;code&gt;Gist&lt;/code&gt; bundles, though not as frequently. Also, &lt;em&gt;TextMate&lt;/em&gt; automatically spell checks for you and knows to ignore R markdown code chunks.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;evaluating-code-in-r-console-or-iterm2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Evaluating code in R console or iTerm2&lt;/h3&gt;
&lt;p&gt;If you download and install the &lt;a href=&#34;https://www.iterm2.com/&#34;&gt;iTerm2&lt;/a&gt; terminal, you can configure &lt;em&gt;TextMate&lt;/em&gt; to evaluate the code in that terminal. The particular code I have for doing this is in the &lt;code&gt;leo&lt;/code&gt; branch of the following repo &lt;a href=&#34;https://github.com/lcolladotor/r.tmbundle/commits/leo&#34; class=&#34;uri&#34;&gt;https://github.com/lcolladotor/r.tmbundle/commits/leo&lt;/a&gt;. In total I use 3 different keyboard shortcuts depending on whether I want to evaluate the code:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;in an R console window;&lt;/li&gt;
&lt;li&gt;in an R console window after automatically running &lt;code&gt;setwd()&lt;/code&gt; to the directory that contains the files I’m looking at;&lt;/li&gt;
&lt;li&gt;to the &lt;em&gt;iTerm2&lt;/em&gt; terminal, which is useful when working with a computing cluster.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;getwd() ## run in terminal with cmd + enter shortcut

getwd() ## run in R console using backtip (`) shortcut

getwd() ## run in R console using cmd + R, runs setwd() first&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 2.13.32 PM.png&#34; alt=&#34;evaluating code&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;running-rmarkdownrender&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Running &lt;code&gt;rmarkdown::render()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;If I’m working with an R Markdown file (&lt;code&gt;.Rmd&lt;/code&gt; extension), I frequently use the &lt;code&gt;alt (option) + t&lt;/code&gt; shortcut for running &lt;code&gt;rmarkdown::render()&lt;/code&gt; and viewing the output file.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 2.19.30 PM.png&#34; alt=&#34;knit with rmarkdown&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;For example, if I’m working with the &lt;code&gt;recount-brain/index.Rmd&lt;/code&gt; file (you can get it &lt;a href=&#34;https://github.com/LieberInstitute/recount-brain/blob/master/index.Rmd&#34;&gt;here&lt;/a&gt;), my setup allows me to run all the R shortcuts. That’s because it recognizes the R code chunk syntax and uses the &lt;code&gt;source.r&lt;/code&gt; &lt;em&gt;scope&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 2.23.57 PM.png&#34; alt=&#34;rmd scope&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;Anyway, after using &lt;code&gt;alt (option) + t&lt;/code&gt; &lt;em&gt;TextMate&lt;/em&gt; shows me the final html.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 2.21.37 PM.png&#34; alt=&#34;rendered html&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;A lot of the bundles in TextMate are from the days when we run &lt;code&gt;Sweave()&lt;/code&gt;. So they work well with &lt;code&gt;.Rnw&lt;/code&gt; files and all the like. I did modify one of them to use &lt;code&gt;knitr::knit()&lt;/code&gt; instead of &lt;code&gt;Sweave()&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;mate-and-rmate&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;code&gt;mate&lt;/code&gt; and &lt;code&gt;rmate&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;If you enable the terminal preferences you can now use the &lt;code&gt;mate&lt;/code&gt; command in any directory in your laptop. &lt;em&gt;TextMate&lt;/em&gt; will open and show you all the tabs of files you had last opened in that same directory. This behavior is also a part of the &lt;code&gt;.Rproj&lt;/code&gt; files with RStudio.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 2.46.51 PM.png&#34; alt=&#34;run mate&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;The command I &lt;em&gt;really&lt;/em&gt; like is &lt;code&gt;rmate&lt;/code&gt; because it enables me to remotely open a file from the cluster in &lt;em&gt;TextMate&lt;/em&gt;, which combined with the &lt;em&gt;evaluate in iTerm2&lt;/em&gt; command makes it easy to work. Basically, I power up an &lt;em&gt;iTerm2&lt;/em&gt; terminal, log into the cluster, navigate to the directory that contains the files I’m working with, and then open them remotely with &lt;code&gt;rmate&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 2.52.21 PM.png&#34; alt=&#34;rmate&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;Setting up &lt;code&gt;rmate&lt;/code&gt; takes a bit of work but it’s definitely worth it.&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;In the cluster, install &lt;code&gt;rmate&lt;/code&gt; following the instructions at &lt;a href=&#34;https://github.com/textmate/rmate&#34; class=&#34;uri&#34;&gt;https://github.com/textmate/rmate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Find a port that works for doing the forwarding. The default one will likely be taken already by another user. Find more about this &lt;a href=&#34;https://www.ssh.com/ssh/tunneling/example&#34;&gt;here&lt;/a&gt;. There they use &lt;code&gt;ssh -R 8080:localhost:80 public.example.com&lt;/code&gt; for testing. Sadly, I don’t know of a quick and easy way to find a port for you to use :/&lt;/li&gt;
&lt;li&gt;Edit your cluster’s &lt;code&gt;~/.bashrc&lt;/code&gt; file with the port information. Mine includes these lines where &lt;code&gt;someSecretPortNumber&lt;/code&gt; is replaced by my port number.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;## rmate port
# https://github.com/textmate/rmate
export RMATE_PORT=&amp;quot;someSecretPortNumber&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;4&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Edit your laptop’s &lt;code&gt;~/.ssh/config&lt;/code&gt; file so you don’t have to specify the port every time you &lt;code&gt;ssh&lt;/code&gt; into the &lt;code&gt;JHPCE&lt;/code&gt; cluster:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;## Will work later as (aka, less typing):
## ssh j
## ssh cluster
Host j cluster
    User yourUsernameGoesHere
    Hostname jhpce01.jhsph.edu
    RemoteForward someSecretPortNumber localhost:someSecretPortNumber
    ForwardX11 yes
    ForwardX11Trusted yes&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;5&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Edit your cluster’s &lt;code&gt;~/.ssh/config&lt;/code&gt; file so the port gets forwarded also when you access a compute node with &lt;code&gt;qrsh&lt;/code&gt;. All of JHPCE’s compute nodes are named &lt;code&gt;compute&lt;/code&gt;something, so we can take advantage of that in the config file.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;# For rmate
Host compute*
    RemoteForward someSecretPortNumber localhost:someSecretPortNumber&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once you do these steps, &lt;code&gt;rmate&lt;/code&gt; should work on a new terminal window.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/3oeSAz6FqXCKuNFX6o/giphy.gif&#34;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://giphy.com/reactions/featured/good-luck&#34;&gt;Source&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;textmate-variables&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;em&gt;TextMate&lt;/em&gt; variables&lt;/h3&gt;
&lt;p&gt;I don’t remember right now if I manually edited the &lt;em&gt;TextMate&lt;/em&gt; variables, but just in case, here’s the info.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 2.34.38 PM.png&#34; alt=&#34;textmate vars&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;acknowledgements&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This blog post was made possible thanks to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;http://bioconductor.org/packages/BiocStyle&#34;&gt;BiocStyle&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Oles_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/Bioconductor/BiocStyle&#39;&gt;Oleś, Morgan, and Huber, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Xie_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/rstudio/blogdown&#39;&gt;Xie, Hill, and Thomas, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=devtools&#34;&gt;devtools&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Wickham_2018&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=devtools&#39;&gt;Wickham, Hester, and Chang, 2018&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;knitcitations&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Boettiger_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=knitcitations&#39;&gt;Boettiger, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Boettiger_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Boettiger_2017&#34;&gt;[1]&lt;/a&gt;&lt;cite&gt; C. Boettiger. &lt;em&gt;knitcitations: Citations for ‘Knitr’ Markdown Files&lt;/em&gt;. R package version 1.0.8. 2017. URL: &lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;https://CRAN.R-project.org/package=knitcitations&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Oles_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Oles_2017&#34;&gt;[2]&lt;/a&gt;&lt;cite&gt; A. Oleś, M. Morgan and W. Huber. &lt;em&gt;BiocStyle: Standard styles for vignettes and other Bioconductor documents&lt;/em&gt;. R package version 2.6.1. 2017. URL: &lt;a href=&#34;https://github.com/Bioconductor/BiocStyle&#34;&gt;https://github.com/Bioconductor/BiocStyle&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Wickham_2018&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Wickham_2018&#34;&gt;[3]&lt;/a&gt;&lt;cite&gt; H. Wickham, J. Hester and W. Chang. &lt;em&gt;devtools: Tools to Make Developing R Packages Easier&lt;/em&gt;. R package version 1.13.5. 2018. URL: &lt;a href=&#34;https://CRAN.R-project.org/package=devtools&#34;&gt;https://CRAN.R-project.org/package=devtools&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Xie_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Xie_2017&#34;&gt;[4]&lt;/a&gt;&lt;cite&gt; Y. Xie, A. P. Hill and A. Thomas. &lt;em&gt;blogdown: Creating Websites with R Markdown&lt;/em&gt;. ISBN 978-0815363729. Boca Raton, Florida: Chapman and Hall/CRC, 2017. URL: &lt;a href=&#34;https://github.com/rstudio/blogdown&#34;&gt;https://github.com/rstudio/blogdown&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;reproducibility&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Reproducibility&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;## Session info ----------------------------------------------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  setting  value                       
##  version  R version 3.4.3 (2017-11-30)
##  system   x86_64, darwin15.6.0        
##  ui       X11                         
##  language (EN)                        
##  collate  en_US.UTF-8                 
##  tz       America/New_York            
##  date     2018-03-11&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Packages --------------------------------------------------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  package       * version date       source                               
##  backports       1.1.2   2017-12-13 CRAN (R 3.4.3)                       
##  base          * 3.4.3   2017-12-07 local                                
##  bibtex          0.4.2   2017-06-30 CRAN (R 3.4.1)                       
##  BiocStyle     * 2.6.1   2017-11-30 Bioconductor                         
##  blogdown        0.5.10  2018-03-10 Github (lcolladotor/blogdown@471b086)
##  bookdown        0.7     2018-02-18 cran (@0.7)                          
##  colorout      * 1.2-0   2018-02-19 Github (jalvesaq/colorout@2f01173)   
##  compiler        3.4.3   2017-12-07 local                                
##  datasets      * 3.4.3   2017-12-07 local                                
##  devtools      * 1.13.5  2018-02-18 CRAN (R 3.4.3)                       
##  digest          0.6.15  2018-01-28 CRAN (R 3.4.3)                       
##  evaluate        0.10.1  2017-06-24 CRAN (R 3.4.1)                       
##  graphics      * 3.4.3   2017-12-07 local                                
##  grDevices     * 3.4.3   2017-12-07 local                                
##  htmltools       0.3.6   2017-04-28 CRAN (R 3.4.0)                       
##  httr            1.3.1   2017-08-20 CRAN (R 3.4.1)                       
##  jsonlite        1.5     2017-06-01 CRAN (R 3.4.0)                       
##  knitcitations * 1.0.8   2017-07-04 CRAN (R 3.4.1)                       
##  knitr           1.20    2018-02-20 cran (@1.20)                         
##  lubridate       1.7.3   2018-02-27 CRAN (R 3.4.3)                       
##  magrittr        1.5     2014-11-22 CRAN (R 3.4.0)                       
##  memoise         1.1.0   2017-04-21 CRAN (R 3.4.0)                       
##  methods       * 3.4.3   2017-12-07 local                                
##  plyr            1.8.4   2016-06-08 CRAN (R 3.4.0)                       
##  R6              2.2.2   2017-06-17 CRAN (R 3.4.0)                       
##  Rcpp            0.12.15 2018-01-20 CRAN (R 3.4.3)                       
##  RefManageR      0.14.20 2017-08-17 CRAN (R 3.4.1)                       
##  rmarkdown       1.9     2018-03-01 cran (@1.9)                          
##  rprojroot       1.3-2   2018-01-03 CRAN (R 3.4.3)                       
##  stats         * 3.4.3   2017-12-07 local                                
##  stringi         1.1.6   2017-11-17 CRAN (R 3.4.2)                       
##  stringr         1.3.0   2018-02-19 cran (@1.3.0)                        
##  tools           3.4.3   2017-12-07 local                                
##  utils         * 3.4.3   2017-12-07 local                                
##  withr           2.1.1   2017-12-19 CRAN (R 3.4.3)                       
##  xfun            0.1     2018-01-22 CRAN (R 3.4.3)                       
##  xml2            1.2.0   2018-01-24 CRAN (R 3.4.3)                       
##  yaml            2.1.18  2018-03-08 cran (@2.1.18)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Contributing to the LIBD rstats club</title>
      <link>/post/contributing-to-the-libd-rstats-club/</link>
      <pubDate>Fri, 09 Mar 2018 00:00:00 +0000</pubDate>
      <guid>/post/contributing-to-the-libd-rstats-club/</guid>
      <description>


&lt;p&gt;In this blog post &lt;a href=&#34;https://www.libd.org/team/Leonardo-Collado-Torres/&#34;&gt;Leonardo Collado-Torres&lt;/a&gt; explains how to contribute posts to the &lt;strong&gt;LIBD rstats club&lt;/strong&gt;. While some parameters are specific to this blog, you could also use this for creating your own community blog.&lt;/p&gt;
&lt;div id=&#34;install-necessary-tools&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Install necessary tools&lt;/h3&gt;
&lt;p&gt;We first need to get the appropriate tools installed in our computer.&lt;/p&gt;
&lt;div id=&#34;r&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;1. R&lt;/h4&gt;
&lt;p&gt;Lets start by installing the latest version of &lt;a href=&#34;https://cran.r-project.org/&#34;&gt;R&lt;/a&gt;. At the time of writing this post, that would be R 3.4.3 but in reality this should work with any R 3.4.x version. It might even work with earlier versions, but it’d be a bummer to find out that we have an R version problem later on.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;rstudio&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;2. RStudio&lt;/h4&gt;
&lt;p&gt;Once we have an up to date R version, lets install &lt;a href=&#34;https://www.rstudio.com/products/rstudio/download/&#34;&gt;RStudio&lt;/a&gt;. By using the latest version we will have access to &lt;em&gt;RStudio addin&lt;/em&gt; menus, which will make our life much easier. Since we will be using RStudio quite a bit, it’s best to work from your laptop/computer than any server or cluster where you might not have the flexibility to install/update RStudio and R.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;blogdown&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;3. &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt;&lt;/h4&gt;
&lt;p&gt;We next need to install the main package that we will be using for creating our blog posts, that is &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Xie_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/rstudio/blogdown&#39;&gt;Xie, Hill, and Thomas, 2017&lt;/a&gt;). At the time of writing this post, the version that we need to use is only available in the development branch. So we need to install &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; via &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=devtools&#34;&gt;devtools&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Wickham_2018&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=devtools&#39;&gt;Wickham, Hester, and Chang, 2018&lt;/a&gt;).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## If needed install devtools first:
install.packages(&amp;#39;devtools&amp;#39;)

## Install development version
devtools::install_github(&amp;#39;rstudio/blogdown&amp;#39;)

## If you are reading this in the fiture, you might only need
install.packages(&amp;#39;blogdown&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;At some point we might need two other extra packages that &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; uses. It will show you a message when that happens, so you can install them when you need them or you could go ahead and get them anyway.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(c(&amp;#39;later&amp;#39;, &amp;#39;processx&amp;#39;))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;hugo&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;4. &lt;code&gt;hugo&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;We are almost there! &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; uses &lt;a href=&#34;https://gohugo.io/&#34;&gt;hugo&lt;/a&gt; which they claim is &lt;em&gt;the world’s fastest framework for building websites&lt;/em&gt;. &lt;code&gt;hugo&lt;/code&gt; is a bit complicated, but it makes maintaining a complicated website such as a blog super easy. Basically, we will be working in the &lt;code&gt;rstatsclubsource&lt;/code&gt; directory and &lt;code&gt;hugo&lt;/code&gt; will create the final version we can share around in the directory &lt;code&gt;rstatsclubsource/public&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Ok, lets go head and install it with&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;blogdown::install_hugo()&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;git&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;5. &lt;code&gt;git&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;To get the files and interact with other &lt;strong&gt;LIBD rstats club&lt;/strong&gt; members you will need to use &lt;code&gt;git&lt;/code&gt;, which you can install following &lt;a href=&#34;http://happygitwithr.com/install-git.html&#34;&gt;these instructions&lt;/a&gt; from the &lt;a href=&#34;http://happygitwithr.com/&#34;&gt;happygitwithr&lt;/a&gt; website. A note for Windows users: &lt;a href=&#34;https://gitforwindows.org/&#34;&gt;get git for windows&lt;/a&gt; because it includes &lt;code&gt;git bash&lt;/code&gt; and will enable you to run some commands that we will need later on. Even more advanced for Windows users, when installing &lt;code&gt;git bash&lt;/code&gt; choose the &lt;em&gt;use git and optional Unix tools from the Windows Command Prompt&lt;/em&gt; as described &lt;a href=&#34;https://github.com/rstudio/rstudio/issues/2224#issuecomment-368260312&#34;&gt;in detail here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also get a &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; account if you don’t have one already. Optionally &lt;a href=&#34;https://help.github.com/articles/connecting-to-github-with-ssh/&#34;&gt;set up ssh keys&lt;/a&gt; for password-less login, though it’s not needed.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;access-blog-source-files&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Access blog source files&lt;/h3&gt;
&lt;p&gt;The file structure of our blog involves a total of 3 GitHub repositories that are related to each other as shown below. However, you will only need to interact with one of them.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rstatsclubsource
    ## From https://github.com/LieberInstitute/rstatsclubsource
    content/
        post/
        ...
    static/
        post/
        img/
        ...
    themes/
        hugo-academic/
        ## From https://github.com/gcushen/hugo-academic
        ## linked as a git submodule
    public/
        ## https://github.com/LieberInstitute/rstatsclub
        ## Hosts the files that make up the website
        ## http://LieberInstitute.github.io/rstatsclub/&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The main directory for the blog is &lt;code&gt;rstatsclubsource&lt;/code&gt; and you can access it at &lt;a href=&#34;https://github.com/LieberInstitute/rstatsclubsource&#34;&gt;github.com/LieberInstitute/rstatsclubsource&lt;/a&gt; if you are a member of the &lt;strong&gt;LIBD rstats club&lt;/strong&gt; and have logged in to your GitHub account. This directory contains many files that &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; understands and that you don’t really need to change. The main sub-directory that you will be interacting with is &lt;code&gt;rstatsclubsource/content/post&lt;/code&gt; where your new post files will get saved by &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt;. If you insert images, &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; will automatically create the directory &lt;code&gt;rstatsclubsource/static/post/2018-03-09_postTitle_files&lt;/code&gt; (&lt;a href=&#34;https://github.com/LieberInstitute/rstatsclubsource/tree/master/static/post/2018-03-06-test-post-for-checking-website_files&#34;&gt;example&lt;/a&gt;), but don’t worry about it.&lt;/p&gt;
&lt;p&gt;Ok, lets get the files. Open your terminal or &lt;code&gt;git bash&lt;/code&gt; (Windows) and navigate to the directory where you will store your copy of the source files.&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;## Works in Mac and Windows (with git bash)
cd ~/Desktop

## Windows example command if you have more than 1 disk
cd /f/Desktop&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next clone &lt;a href=&#34;https://github.com/LieberInstitute/rstatsclubsource&#34;&gt;github.com/LieberInstitute/rstatsclubsource&lt;/a&gt;. Here we use https since that doesn’t require extra setup, but cloning by ssh also works.&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;git clone https://github.com/LieberInstitute/rstatsclubsource.git&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-09-contributing-to-the-libd-rstats-club_files/Screen Shot 2018-03-08 at 8.47.18 PM.png&#34; alt=&#34;clone source repo&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;After a successful clone, we should have created the directory &lt;code&gt;~/Desktop/rstatsclubsource&lt;/code&gt;. Lets change to this new directory.&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;cd rstatsclubsource&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Our cloning process also created a placeholder for our hugo theme (&lt;a href=&#34;https://github.com/gcushen/hugo-academic&#34;&gt;hugo-academic&lt;/a&gt;) but it’s contents are empty.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ls -lh themes/hugo-academic/
total 0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Lets fill them up by running the following git command.&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;git submodule update --init --recursive&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-09-contributing-to-the-libd-rstats-club_files/Screen Shot 2018-03-08 at 9.05.56 PM.png&#34; alt=&#34;git submodule&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;If we now check the contents of the &lt;code&gt;themes/hugo-academic&lt;/code&gt; directory we should see several files now (here’s a screenshot from Windows using &lt;code&gt;git bash&lt;/code&gt;).&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;ls -lh themes/hugo-academic&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-09-contributing-to-the-libd-rstats-club_files/theme files.PNG&#34; alt=&#34;windows theme files&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;preview-website&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Preview website&lt;/h3&gt;
&lt;p&gt;Our setup is now complete! We can now start writing blog posts using &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt;. Open the &lt;code&gt;~/Desktop/rstatsclubsource/rstatsclubsource.Rproj&lt;/code&gt; file, which should open a new RStudio window automatically. Find the &lt;em&gt;Addins&lt;/em&gt; menu on the top of your window, and select the &lt;code&gt;Serve Site&lt;/code&gt; option in the drop-down menu.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-09-contributing-to-the-libd-rstats-club_files/Screen Shot 2018-03-08 at 9.35.34 PM.png&#34; alt=&#34;serve site&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;This addin will create a local version of the website you can preview in the RStudio Viewer pane.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-09-contributing-to-the-libd-rstats-club_files/Screen Shot 2018-03-08 at 9.19.02 PM.png&#34; alt=&#34;RStudio viewer pane&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;If you click in the &lt;em&gt;show in new window&lt;/em&gt; symbol as shown below&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-09-contributing-to-the-libd-rstats-club_files/Screen%20Shot%202018-03-08%20at%209.20.28%20PM.png&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;you then can preview the website in your main browser:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-09-contributing-to-the-libd-rstats-club_files/Screen Shot 2018-03-08 at 9.21.44 PM.png&#34; alt=&#34;preview browser&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;This will be super useful when you are writing a new blog post because any changes you make will automatically refresh the local preview version after a second of two (only after you save the file you are editing). Sometimes you might have to manually refresh your browser (like when you make too many updates in a row). The preview website works as long as you have the &lt;em&gt;Serve Site&lt;/em&gt; addin running on the background.&lt;/p&gt;
&lt;div id=&#34;all-our-files&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;All our files&lt;/h4&gt;
&lt;p&gt;By running &lt;em&gt;Serve Site&lt;/em&gt; &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; actually populated automatically our &lt;code&gt;rstatsclubsource/public&lt;/code&gt; directory. So our full list of files look somewhat like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## Found about tree from
## https://stackoverflow.com/questions/3455625/linux-command-to-print-directory-structure-in-the-form-of-a-tree
## Intall in a Mac with homebrew:
## brew install tree
$ tree -d rstatsclubsource
.
├── archetypes
├── content
│   ├── home
│   └── post
├── data
│   ├── fonts
│   └── themes
├── layouts
│   └── partials
├── public
│   ├── 2018
│   │   └── 03
│   │       ├── 06
│   │       │   └── test-post-for-checking-website
│   │       └── 09
│   │           └── welcome-to-the-libd-rstats-club
│   ├── categories
│   │   ├── page
│   │   │   └── 1
│   │   ├── rstats
│   │   │   └── page
│   │   │       └── 1
│   │   └── setup
│   │       └── page
│   │           └── 1
│   ├── home
│   ├── img
│   ├── js
│   ├── post
│   │   ├── 2018-03-06-test-post-for-checking-website_files
│   │   │   └── figure-html
│   │   └── page
│   │       └── 1
│   ├── publication_types
│   │   └── page
│   │       └── 1
│   └── tags
│       ├── blog
│       │   └── page
│       │       └── 1
│       └── page
│           └── 1
├── static
│   ├── img
│   └── post
│       └── 2018-03-06-test-post-for-checking-website_files
│           └── figure-html
└── themes
    └── hugo-academic
        ├── archetypes
        ├── data
        ├── exampleSite
        ├── i18n
        ├── images
        ├── layouts
        └── static&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Some of the structure looks redundant right? Well, that’s because &lt;code&gt;hugo&lt;/code&gt; and &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; tried to keep everything super organized and re-use some of the file structure for the final version of the website (the one inside &lt;code&gt;rstatsclubsource/public&lt;/code&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;write-a-blog-post&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Write a blog post&lt;/h3&gt;
&lt;p&gt;We now have a working full preview version of the website in our computer. It’s finally time to write a blog post. The good thing is that we don’t need to do all the setup steps again!&lt;/p&gt;
&lt;div id=&#34;update-if-necessary&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Update if necessary&lt;/h4&gt;
&lt;p&gt;If you paused midway for a few days, it’s likely that your files are not the latest ones. So please &lt;code&gt;git pull&lt;/code&gt; the latest files from &lt;a href=&#34;https://github.com/LieberInstitute/rstatsclubsource&#34;&gt;github.com/LieberInstitute/rstatsclubsource&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;cd ~/Desktop/rstatsclubsource
git pull&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;start-a-blog-post&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Start a blog post&lt;/h4&gt;
&lt;p&gt;To start a new blog post, use the &lt;em&gt;New Post&lt;/em&gt; &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; addin.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-09-contributing-to-the-libd-rstats-club_files/Screen Shot 2018-03-08 at 9.18.21 PM.png&#34; alt=&#34;new post&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;This will open up a window where you can specify the blog post title. The title will automatically fill out the &lt;em&gt;slug&lt;/em&gt; which is used in the final URL of the post. It also lets you choose a date, when is when the blog post will be made publicly visible.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-09-contributing-to-the-libd-rstats-club_files/Screen Shot 2018-03-08 at 6.41.49 PM.png&#34; alt=&#34;New post addin&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;author-and-extension&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Author and extension&lt;/h4&gt;
&lt;p&gt;Lets start by entering the author information (leave blank if you want it to be anonymous) and selecting the post format. We highly recommend you use the &lt;code&gt;.Rmd&lt;/code&gt; format for your blog posts, even to the point that you should just make it our default option. To do so you have to edit/create an &lt;code&gt;.Rprofile&lt;/code&gt; file in your computer at your home directory, that is &lt;code&gt;~/.Rprofile&lt;/code&gt;. Then use these options (with how you prefer the author information to be).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# https://bookdown.org/yihui/blogdown/global-options.html
options(blogdown.author = &amp;#39;L. Collado-Torres&amp;#39;)
options(blogdown.ext = &amp;#39;.Rmd&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The next time you write a blog post, &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; will know what options you prefer.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-09-contributing-to-the-libd-rstats-club_files/Screen Shot 2018-03-08 at 6.42.04 PM.png&#34; alt=&#34;Author and extension&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;use-a-blog-template&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Use a blog template&lt;/h4&gt;
&lt;p&gt;Next lets choose the blog archetype (template) that for posts, that is &lt;code&gt;post&lt;/code&gt; under &lt;code&gt;Archetype&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-09-contributing-to-the-libd-rstats-club_files/Screen%20Shot%202018-03-08%20at%206.42.23%20PM.png&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;The reasons why a blog template is useful are described in full detail &lt;a href=&#34;http://lcolladotor.github.io/2018/03/08/blogdown-archetype-template/#.WqH1WJPwY0o&#34;&gt;in this blog post by L. Collado-Torres&lt;/a&gt;. The quick version is that it will pre-populate your new blog post with helpful information and reminders on how to do &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; or &lt;span class=&#34;math inline&#34;&gt;\(Y\)&lt;/span&gt;. For example, how to &lt;a href=&#34;http://lcolladotor.github.io/2018/03/07/blogdown-insert-image-addin/#.WqH1bJPwY0o&#34;&gt;insert external images&lt;/a&gt;, how to control the figure height and width for images generated by R, how to cite packages, and including the R reproducibility information by default.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;use-appropriate-post-categories&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Use appropriate post categories&lt;/h4&gt;
&lt;p&gt;Most of our blog posts will likely be about R. For those blog posts, select the &lt;code&gt;rstats&lt;/code&gt; category as shown below.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-09-contributing-to-the-libd-rstats-club_files/Screen%20Shot%202018-03-08%20at%206.42.33%20PM.png&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;If your blog post covers a topic that might be useful to new LIBD members use the &lt;code&gt;setup&lt;/code&gt; category. If it involves using the JHPCE cluster, use &lt;code&gt;jhpce&lt;/code&gt; as a category, etc. The &lt;em&gt;New Post&lt;/em&gt; &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; addin lets you see which categories and tags have been used before to classify posts. In general, we should aim to have a handful of categories while having as many tags as necessary. These will be useful for filtering our blog posts.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;hit-done-well-check-before&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Hit done! (well check before)&lt;/h4&gt;
&lt;p&gt;We are now basically set to start our new blog post. Just double check:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the categories,&lt;/li&gt;
&lt;li&gt;that the format is &lt;code&gt;.Rmd&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;that the archetype is &lt;code&gt;post&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;post title,&lt;/li&gt;
&lt;li&gt;post date,&lt;/li&gt;
&lt;li&gt;post author.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-09-contributing-to-the-libd-rstats-club_files/Screen Shot 2018-03-08 at 6.42.53 PM.png&#34; alt=&#34;&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;Aaaaand hit &lt;strong&gt;done&lt;/strong&gt;!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;edit-your-blog-post&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Edit your blog post&lt;/h3&gt;
&lt;p&gt;You can now write your blog post using the &lt;a href=&#34;https://rmarkdown.rstudio.com/lesson-2.html&#34;&gt;R Markdown syntax&lt;/a&gt;. Note that you won’t be using the &lt;code&gt;knit&lt;/code&gt; button from RStudio since the &lt;em&gt;Serve Site&lt;/em&gt; &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; addin should be doing all the work for you and updating your local website preview.&lt;/p&gt;
&lt;p&gt;When writing your blog post keep in mind our &lt;a href=&#34;http://research.libd.org/rstatsclub/#coc&#34;&gt;Code of Conduct&lt;/a&gt; and that your our blog posts have to comply with the confidentiality agreement we signed at LIBD.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;share-your-blog-post&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Share your blog post&lt;/h3&gt;
&lt;p&gt;Once you are happy with the final version of your blog post and have used the spell check from RStudio, add your blog post files to &lt;a href=&#34;https://github.com/LieberInstitute/rstatsclubsource&#34;&gt;github.com/LieberInstitute/rstatsclubsource&lt;/a&gt;. First, remember to &lt;code&gt;git pull&lt;/code&gt; in case that there are new files in the repository that you don’t have. Next check which files you modified by running &lt;code&gt;git status&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;cd ~/Desktop/rstatsclubsource
git status&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Typically, you should see that you have untracked files under &lt;code&gt;rstatsclubsource/content/post&lt;/code&gt; and maybe &lt;code&gt;rstatsclubsource/static/post/&lt;/code&gt;. If so, add them to the github repository with the following sequence of commands.&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;git add content/post/*
git add static/post/*
git commit -m &amp;quot;Short description of your new blog post&amp;quot;
git push&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You could also do this with a git GUI such as the git tools in RStudio, &lt;a href=&#34;https://www.sourcetreeapp.com/&#34;&gt;SourceTree&lt;/a&gt; (works for both Mac and Windows), the &lt;code&gt;gitk&lt;/code&gt; command, etc.&lt;/p&gt;
&lt;p&gt;After a quick review we will update the files at &lt;a href=&#34;https://github.com/LieberInstitute/rstatsclub&#34;&gt;github.com/LieberInstitute/rstatsclub&lt;/a&gt; and deploy the changes to GitHub.&lt;/p&gt;
&lt;p&gt;Good luck with your first of many &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; posts!!!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/3ornk7TgUdhjhTYgta/giphy.gif&#34;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://giphy.com/reactions/featured/good-luck&#34;&gt;Source&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;details&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Details&lt;/h3&gt;
&lt;p&gt;We are keeping both &lt;a href=&#34;https://github.com/LieberInstitute/rstatsclubsource&#34;&gt;github.com/LieberInstitute/rstatsclubsource&lt;/a&gt; and &lt;a href=&#34;https://github.com/LieberInstitute/rstatsclub&#34;&gt;github.com/LieberInstitute/rstatsclub&lt;/a&gt; as private repositories to enable contributors to write posts anonymously.&lt;/p&gt;
&lt;p&gt;The default license for our blog posts is (CC) BY-NC-SA 4.0 which you can read more about &lt;a href=&#34;https://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;here&lt;/a&gt;. If you write a blog post under a different license, please make it clear. Also please attribute the sources of the material you use.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;further-reading&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Further reading&lt;/h3&gt;
&lt;p&gt;If you want to learn even more, check the &lt;a href=&#34;https://bookdown.org/yihui/blogdown/&#34;&gt;blogdown book&lt;/a&gt; and the &lt;a href=&#34;https://github.com/gcushen/hugo-academic&#34;&gt;hugo-academic theme&lt;/a&gt;. Maybe you can help with &lt;a href=&#34;https://github.com/gcushen/hugo-academic/issues/467&#34;&gt;this currently unresolved issue&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you want to check a public version equivalent to the one described here, check:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/lcolladotor/hugoblog&#34;&gt;github.com/lcolladotor/hugoblog&lt;/a&gt; which is the equivalent of &lt;a href=&#34;https://github.com/LieberInstitute/rstatsclubsource&#34;&gt;github.com/LieberInstitute/rstatsclubsource&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/lcolladotor/lcolladotor.github.com&#34;&gt;github.com/lcolladotor/lcolladotor.github.com&lt;/a&gt; which is the equivalent of &lt;a href=&#34;https://github.com/LieberInstitute/rstatsclub&#34;&gt;github.com/LieberInstitute/rstatsclub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;hugoblog
    ## From https://github.com/lcolladotor/hugoblog
    content/
        post/
        ...
    static/
        post/
        img/
        ...
    themes/
        hugo-academic/
        ## From https://github.com/gcushen/hugo-academic
        ## linked as a git submodule
    public/
        ## https://github.com/lcolladotor/lcolladotor.github.com
        ## Hosts the files that make up the website
        ## http://lcolladotor.github.io/&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;acknowledgements&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This blog post was made possible thanks to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;http://bioconductor.org/packages/BiocStyle&#34;&gt;BiocStyle&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Oles_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/Bioconductor/BiocStyle&#39;&gt;Oleś, Morgan, and Huber, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; (&lt;a href=&#39;https://github.com/rstudio/blogdown&#39;&gt;Xie, Hill, and Thomas, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=devtools&#34;&gt;devtools&lt;/a&gt;&lt;/em&gt; (&lt;a href=&#39;https://CRAN.R-project.org/package=devtools&#39;&gt;Wickham, Hester, and Chang, 2018&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;knitcitations&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Boettiger_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=knitcitations&#39;&gt;Boettiger, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Boettiger_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Boettiger_2017&#34;&gt;[1]&lt;/a&gt;&lt;cite&gt; C. Boettiger. &lt;em&gt;knitcitations: Citations for ‘Knitr’ Markdown Files&lt;/em&gt;. R package version 1.0.8. 2017. URL: &lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;https://CRAN.R-project.org/package=knitcitations&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Oles_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Oles_2017&#34;&gt;[2]&lt;/a&gt;&lt;cite&gt; A. Oleś, M. Morgan and W. Huber. &lt;em&gt;BiocStyle: Standard styles for vignettes and other Bioconductor documents&lt;/em&gt;. R package version 2.6.1. 2017. URL: &lt;a href=&#34;https://github.com/Bioconductor/BiocStyle&#34;&gt;https://github.com/Bioconductor/BiocStyle&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Wickham_2018&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Wickham_2018&#34;&gt;[3]&lt;/a&gt;&lt;cite&gt; H. Wickham, J. Hester and W. Chang. &lt;em&gt;devtools: Tools to Make Developing R Packages Easier&lt;/em&gt;. R package version 1.13.5. 2018. URL: &lt;a href=&#34;https://CRAN.R-project.org/package=devtools&#34;&gt;https://CRAN.R-project.org/package=devtools&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Xie_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Xie_2017&#34;&gt;[4]&lt;/a&gt;&lt;cite&gt; Y. Xie, A. P. Hill and A. Thomas. &lt;em&gt;blogdown: Creating Websites with R Markdown&lt;/em&gt;. ISBN 978-0815363729. Boca Raton, Florida: Chapman and Hall/CRC, 2017. URL: &lt;a href=&#34;https://github.com/rstudio/blogdown&#34;&gt;https://github.com/rstudio/blogdown&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;reproducibility&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Reproducibility&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;## Session info ----------------------------------------------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  setting  value                       
##  version  R version 3.4.3 (2017-11-30)
##  system   x86_64, darwin15.6.0        
##  ui       X11                         
##  language (EN)                        
##  collate  en_US.UTF-8                 
##  tz       America/New_York            
##  date     2018-03-10&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Packages --------------------------------------------------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  package       * version date       source                            
##  backports       1.1.2   2017-12-13 CRAN (R 3.4.3)                    
##  base          * 3.4.3   2017-12-07 local                             
##  bibtex          0.4.2   2017-06-30 CRAN (R 3.4.1)                    
##  BiocStyle     * 2.6.1   2017-11-30 Bioconductor                      
##  blogdown        0.5.9   2018-03-08 Github (rstudio/blogdown@dc1f41c) 
##  bookdown        0.7     2018-02-18 cran (@0.7)                       
##  colorout      * 1.2-0   2018-02-19 Github (jalvesaq/colorout@2f01173)
##  compiler        3.4.3   2017-12-07 local                             
##  datasets      * 3.4.3   2017-12-07 local                             
##  devtools      * 1.13.5  2018-02-18 CRAN (R 3.4.3)                    
##  digest          0.6.15  2018-01-28 CRAN (R 3.4.3)                    
##  evaluate        0.10.1  2017-06-24 CRAN (R 3.4.1)                    
##  graphics      * 3.4.3   2017-12-07 local                             
##  grDevices     * 3.4.3   2017-12-07 local                             
##  htmltools       0.3.6   2017-04-28 CRAN (R 3.4.0)                    
##  httr            1.3.1   2017-08-20 CRAN (R 3.4.1)                    
##  jsonlite        1.5     2017-06-01 CRAN (R 3.4.0)                    
##  knitcitations * 1.0.8   2017-07-04 CRAN (R 3.4.1)                    
##  knitr           1.20    2018-02-20 cran (@1.20)                      
##  lubridate       1.7.3   2018-02-27 CRAN (R 3.4.3)                    
##  magrittr        1.5     2014-11-22 CRAN (R 3.4.0)                    
##  memoise         1.1.0   2017-04-21 CRAN (R 3.4.0)                    
##  methods       * 3.4.3   2017-12-07 local                             
##  plyr            1.8.4   2016-06-08 CRAN (R 3.4.0)                    
##  R6              2.2.2   2017-06-17 CRAN (R 3.4.0)                    
##  Rcpp            0.12.15 2018-01-20 CRAN (R 3.4.3)                    
##  RefManageR      0.14.20 2017-08-17 CRAN (R 3.4.1)                    
##  rmarkdown       1.9     2018-03-01 cran (@1.9)                       
##  rprojroot       1.3-2   2018-01-03 CRAN (R 3.4.3)                    
##  stats         * 3.4.3   2017-12-07 local                             
##  stringi         1.1.6   2017-11-17 CRAN (R 3.4.2)                    
##  stringr         1.3.0   2018-02-19 cran (@1.3.0)                     
##  tools           3.4.3   2017-12-07 local                             
##  utils         * 3.4.3   2017-12-07 local                             
##  withr           2.1.1   2017-12-19 CRAN (R 3.4.3)                    
##  xfun            0.1     2018-01-22 CRAN (R 3.4.3)                    
##  xml2            1.2.0   2018-01-24 CRAN (R 3.4.3)                    
##  yaml            2.1.17  2018-02-27 cran (@2.1.17)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Test post for checking website</title>
      <link>/post/test-post-for-checking-website/</link>
      <pubDate>Tue, 06 Mar 2018 00:00:00 +0000</pubDate>
      <guid>/post/test-post-for-checking-website/</guid>
      <description>


&lt;p&gt;This is a test post for checking the formatting of the website. You can basically ignore the rest. It’s showing the contents of the &lt;em&gt;post.md&lt;/em&gt; archetype (blog post template).&lt;/p&gt;
&lt;p&gt;Useful links for editing the theme:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/get-started/&#34; class=&#34;uri&#34;&gt;https://sourcethemes.com/academic/docs/get-started/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/customization/&#34; class=&#34;uri&#34;&gt;https://sourcethemes.com/academic/docs/customization/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gcushen/hugo-academic/tree/master/data/fonts&#34; class=&#34;uri&#34;&gt;https://github.com/gcushen/hugo-academic/tree/master/data/fonts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gcushen/hugo-academic/tree/master/data/themes&#34; class=&#34;uri&#34;&gt;https://github.com/gcushen/hugo-academic/tree/master/data/themes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.libd.org/&#34; class=&#34;uri&#34;&gt;https://www.libd.org/&lt;/a&gt; (for getting colors under inspect mode)&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;post-content&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Post content&lt;/h3&gt;
&lt;p&gt;Typical location to start editing since the bibliography chunk is hidden. Make sure that you selected &lt;code&gt;R Markdown (.Rmd)&lt;/code&gt; as the &lt;em&gt;format&lt;/em&gt; option of the post when using the &lt;code&gt;New Post&lt;/code&gt; &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; addin.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;r-image&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;R image&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## This imaged will be saved in the /post/*_files/ directory
## Use echo = FALSE if you want to hide the code for making the plot
plot(1:10, 10:1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/rstatsclub/post/2018-03-06-test-post-for-checking-website_files/figure-html/plot-1.png&#34; width=&#34;576&#34; /&gt;&lt;/p&gt;
&lt;p&gt;If you prefer not to use the &lt;code&gt;fig.width&lt;/code&gt; and &lt;code&gt;fig.height&lt;/code&gt; options in every plot chunk, edit the YAML (the part at the top of the post) with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;output:
  blogdown::html_page:
    toc: no
    fig_width: 5
    fig_height: 5&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;custom-image&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Custom image&lt;/h3&gt;
&lt;p&gt;Use the &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; &lt;em&gt;Insert Image&lt;/em&gt; plugin to add an external image. You need to use version 0.5.7 or newer to have access to this plugin. At the time of writing this post, this version is only available via GitHub. That is, install it with:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;devtools::install_github(&amp;#39;rstudio/blogdown&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;acknowledgements&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This blog post was made possible thanks to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;http://bioconductor.org/packages/BiocStyle&#34;&gt;BiocStyle&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Oles_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/Bioconductor/BiocStyle&#39;&gt;Oles, Morgan, and Huber, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Xie_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/rstudio/blogdown&#39;&gt;Xie, Hill, and Thomas, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=devtools&#34;&gt;devtools&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Wickham_2018&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=devtools&#39;&gt;Wickham, Hester, and Chang, 2018&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;knitcitations&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Boettiger_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=knitcitations&#39;&gt;Boettiger, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Boettiger_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Boettiger_2017&#34;&gt;[1]&lt;/a&gt;&lt;cite&gt; C. Boettiger. &lt;em&gt;knitcitations: Citations for ‘Knitr’ Markdown Files&lt;/em&gt;. R package version 1.0.8. 2017. URL: &lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;https://CRAN.R-project.org/package=knitcitations&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Oles_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Oles_2017&#34;&gt;[2]&lt;/a&gt;&lt;cite&gt; A. Oles, M. Morgan and W. Huber. &lt;em&gt;BiocStyle: Standard styles for vignettes and other Bioconductor documents&lt;/em&gt;. R package version 2.6.1. 2017. URL: &lt;a href=&#34;https://github.com/Bioconductor/BiocStyle&#34;&gt;https://github.com/Bioconductor/BiocStyle&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Wickham_2018&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Wickham_2018&#34;&gt;[3]&lt;/a&gt;&lt;cite&gt; H. Wickham, J. Hester and W. Chang. &lt;em&gt;devtools: Tools to Make Developing R Packages Easier&lt;/em&gt;. R package version 1.13.5. 2018. URL: &lt;a href=&#34;https://CRAN.R-project.org/package=devtools&#34;&gt;https://CRAN.R-project.org/package=devtools&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Xie_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Xie_2017&#34;&gt;[4]&lt;/a&gt;&lt;cite&gt; Y. Xie, A. P. Hill and A. Thomas. &lt;em&gt;blogdown: Creating Websites with R Markdown&lt;/em&gt;. ISBN 978-0815363729. Boca Raton, Florida: Chapman and Hall/CRC, 2017. URL: &lt;a href=&#34;https://github.com/rstudio/blogdown&#34;&gt;https://github.com/rstudio/blogdown&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;reproducibility&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Reproducibility&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Reproducibility info
options(width = 120)
session_info()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Session info ----------------------------------------------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  setting  value                       
##  version  R version 3.4.2 (2017-09-28)
##  system   x86_64, mingw32             
##  ui       RTerm                       
##  language (EN)                        
##  collate  English_United States.1252  
##  tz       America/New_York            
##  date     2018-03-07&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Packages --------------------------------------------------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  package       * version date       source                               
##  backports       1.1.2   2017-12-13 CRAN (R 3.4.3)                       
##  base          * 3.4.2   2017-09-28 local                                
##  bibtex          0.4.2   2017-06-30 CRAN (R 3.4.2)                       
##  BiocStyle     * 2.6.1   2017-11-30 Bioconductor                         
##  blogdown        0.5.7   2018-03-07 Github (lcolladotor/blogdown@7b8761b)
##  bookdown        0.7     2018-02-18 CRAN (R 3.4.3)                       
##  compiler        3.4.2   2017-09-28 local                                
##  datasets      * 3.4.2   2017-09-28 local                                
##  devtools      * 1.13.5  2018-02-18 CRAN (R 3.4.3)                       
##  digest          0.6.15  2018-01-28 CRAN (R 3.4.3)                       
##  evaluate        0.10.1  2017-06-24 CRAN (R 3.4.2)                       
##  graphics      * 3.4.2   2017-09-28 local                                
##  grDevices     * 3.4.2   2017-09-28 local                                
##  htmltools       0.3.6   2017-04-28 CRAN (R 3.4.2)                       
##  httr            1.3.1   2017-08-20 CRAN (R 3.4.2)                       
##  jsonlite        1.5     2017-06-01 CRAN (R 3.4.2)                       
##  knitcitations * 1.0.8   2017-07-04 CRAN (R 3.4.2)                       
##  knitr           1.20    2018-02-20 CRAN (R 3.4.3)                       
##  lubridate       1.7.2   2018-02-06 CRAN (R 3.4.3)                       
##  magrittr        1.5     2014-11-22 CRAN (R 3.4.2)                       
##  memoise         1.1.0   2017-04-21 CRAN (R 3.4.2)                       
##  methods       * 3.4.2   2017-09-28 local                                
##  plyr            1.8.4   2016-06-08 CRAN (R 3.4.2)                       
##  R6              2.2.2   2017-06-17 CRAN (R 3.4.2)                       
##  Rcpp            0.12.15 2018-01-20 CRAN (R 3.4.3)                       
##  RefManageR      0.14.20 2017-08-17 CRAN (R 3.4.2)                       
##  rmarkdown       1.9     2018-03-01 CRAN (R 3.4.3)                       
##  rprojroot       1.3-2   2018-01-03 CRAN (R 3.4.3)                       
##  stats         * 3.4.2   2017-09-28 local                                
##  stringi         1.1.6   2017-11-17 CRAN (R 3.4.2)                       
##  stringr         1.3.0   2018-02-19 CRAN (R 3.4.3)                       
##  tools           3.4.2   2017-09-28 local                                
##  utils         * 3.4.2   2017-09-28 local                                
##  withr           2.1.1   2017-12-19 CRAN (R 3.4.3)                       
##  xfun            0.1     2018-01-22 CRAN (R 3.4.3)                       
##  xml2            1.2.0   2018-01-24 CRAN (R 3.4.3)                       
##  yaml            2.1.17  2018-02-27 CRAN (R 3.4.3)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
