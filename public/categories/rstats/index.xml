<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rstats | Academic</title>
    <link>/categories/rstats/</link>
      <atom:link href="/categories/rstats/index.xml" rel="self" type="application/rss+xml" />
    <description>rstats</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Mon, 24 Dec 2018 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/img/icon-192.png</url>
      <title>rstats</title>
      <link>/categories/rstats/</link>
    </image>
    
    <item>
      <title>R 101</title>
      <link>/post/r_101/</link>
      <pubDate>Mon, 24 Dec 2018 00:00:00 +0000</pubDate>
      <guid>/post/r_101/</guid>
      <description>


&lt;div id=&#34;happy-holidays&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;HAPPY HOLIDAYS!!!üéâ‚õÑüéÜüçæ‚ùÑ&lt;/h3&gt;
&lt;p&gt;In the spirit of the coming new year and new beginnings, we created a tutorial for getting started or restarted with R. If you are new to R or have dabbled in R but haven‚Äôt used it much recently, then this post is for you. We will focus on data classes and types, as well as data wrangling, and we will provide basic statistics and basic plotting examples using real data. Enjoy!&lt;/p&gt;
&lt;p&gt;By &lt;a href=&#34;https://carriewright11.github.io&#34;&gt;C.Wright&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As with most programming tutorials, let‚Äôs start with a good‚Äôol ‚ÄúHello World‚Äù.&lt;/p&gt;
&lt;div id=&#34;first-command&#34; class=&#34;section level6&#34;&gt;
&lt;h6&gt;1) First Command&lt;/h6&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;print(&amp;quot;Hello World&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Hello World&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;install-and-load-packages-and-data&#34; class=&#34;section level6&#34;&gt;
&lt;h6&gt;2) Install and Load Packages and Data&lt;/h6&gt;
&lt;p&gt;Now we need some data. Packages are collections of functions and/or data. There are published packages that you can use from the community such as these two packages, or you can make your own package for your own private use.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(&amp;quot;babynames&amp;quot;)  
install.packages(&amp;quot;titanic&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now that we have installed the packages, we need to load them.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;babynames&amp;quot;)
library(&amp;quot;titanic&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Each installation of R comes with quite a bit of data! Now we want to load the ‚Äúquake‚Äù data - there are lots of other options.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data(&amp;quot;quakes&amp;quot;)
data() #this will list all of the datasets available&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;assigning-objects&#34; class=&#34;section level6&#34;&gt;
&lt;h6&gt;3) Assigning Objects&lt;/h6&gt;
&lt;p&gt;Objects can be many different things ranging from a simple number to a giant matrix, but they refer to things that you can manipulate in R.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;myString &amp;lt;- &amp;quot;Hello World&amp;quot; #notice how we need &amp;quot;&amp;quot; around words, aka strings
myString #take a look at myString&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Hello World&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;A &amp;lt;- 14 #now we do not need &amp;quot;&amp;quot; around numbers
A #take a look at A&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 14&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;A = 5 #can also use the equal sign to assign objects
A #notice how A has changed&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 5&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;assigning-objects-with-multiple-elements&#34; class=&#34;section level6&#34;&gt;
&lt;h6&gt;4) Assigning Objects with Multiple Elements&lt;/h6&gt;
&lt;p&gt;Now lets assign a more complex object&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;height &amp;lt;- c(5.5, 4.5, 5, 5.6, 5.8, 5.2, 6, 6.2, 5.9, 5.8, 6, 5.9) #this is called a vector
colors_to_use &amp;lt;- c(&amp;quot;red&amp;quot;, &amp;quot;blue&amp;quot;)# a vector of strings&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;classes&#34; class=&#34;section level6&#34;&gt;
&lt;h6&gt;5) Classes&lt;/h6&gt;
&lt;p&gt;There are a variety of different object classes. We can use the function class() to tell us what class an object belongs to.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;class(height) #this is a numeric vector&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;numeric&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;class(colors_to_use) #this is a character vector&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;character&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;heightdf&amp;lt;-data.frame(height, gender =c(&amp;quot;F&amp;quot;, &amp;quot;F&amp;quot;, &amp;quot;F&amp;quot;, &amp;quot;F&amp;quot;, &amp;quot;F&amp;quot;, &amp;quot;F&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;))
heightdf #take a look at the dataframe&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    height gender
## 1     5.5      F
## 2     4.5      F
## 3     5.0      F
## 4     5.6      F
## 5     5.8      F
## 6     5.2      F
## 7     6.0      M
## 8     6.2      M
## 9     5.9      M
## 10    5.8      M
## 11    6.0      M
## 12    5.9      M&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;class(heightdf) #check the class&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;data.frame&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;heightdf$height # we can refer to indivdual columns based on the column name&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 5.5 4.5 5.0 5.6 5.8 5.2 6.0 6.2 5.9 5.8 6.0 5.9&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;class(heightdf$gender)#here we see a factor(categorical variable - stored in R as with integer levels&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;factor&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;logical_variable&amp;lt;-height == heightdf$height #this shows that all the elements in the height column of the heightdf dataframe are equivalent to those of the height vector
class(logical_variable)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;logical&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;matrix_variable &amp;lt;- matrix(height, nrow = 2, ncol = 3)#now we will make a matrix
matrix_variable #take a look at the matrix&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      [,1] [,2] [,3]
## [1,]  5.5  5.0  5.8
## [2,]  4.5  5.6  5.2&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;class(matrix_variable)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;matrix&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;subsetting-data&#34; class=&#34;section level6&#34;&gt;
&lt;h6&gt;6) Subsetting Data&lt;/h6&gt;
&lt;p&gt;Now that we can assign or instantiate objects, let‚Äôs try to look at or manipulate specific parts of more complex objects.&lt;/p&gt;
&lt;p&gt;Lets create an object of male heights by grabbing rows from heightdf.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;maleIndex&amp;lt;-which(heightdf$gender == &amp;quot;M&amp;quot;) #lets try subsetting just the male data out of the heightdf - first we need to determine which rows of the dataframe are male
maleIndex # this is now just a list of rows&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1]  7  8  9 10 11 12&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;heightmale&amp;lt;-heightdf[maleIndex,] #now we will use the brackets to grab these rows - we use the comma to indicate that we want rows not columns
heightmale # now this is just the males&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    height gender
## 7     6.0      M
## 8     6.2      M
## 9     5.9      M
## 10    5.8      M
## 11    6.0      M
## 12    5.9      M&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here is another way using a package called dpylr:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(&amp;quot;dplyr&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we are creating an object of height data for males over 6 feet.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(dplyr) #load a useful package for subsetting data&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;dplyr&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:stats&amp;#39;:
## 
##     filter, lag&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:base&amp;#39;:
## 
##     intersect, setdiff, setequal, union&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#heightmale_over6feet &amp;lt;- dplyr::subset(heightdf, gender ==&amp;quot;M&amp;quot; &amp;amp; height &amp;gt;=6)#need to use column names to describe what we want to pull out of our data
heightmale_over6feet &amp;lt;- subset(heightdf, gender ==&amp;quot;M&amp;quot; &amp;amp; height &amp;gt;=6)#need to use column names to describe what we want to pull out of our data

heightmale_over6feet#now we just have the males 6 feet or over&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    height gender
## 7     6.0      M
## 8     6.2      M
## 11    6.0      M&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now let‚Äôs create an object by grabbing part of an object based on its columns.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gender1&amp;lt;-heightdf[2]#notice how here we use the brackets but no comma
gender1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    gender
## 1       F
## 2       F
## 3       F
## 4       F
## 5       F
## 6       F
## 7       M
## 8       M
## 9       M
## 10      M
## 11      M
## 12      M&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gender2&amp;lt;-heightdf$gender#this does the same thing #notice this way we loose the data architecture - no longer a dataframe
gender2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] F F F F F F M M M M M M
## Levels: F M&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gender2&amp;lt;-data.frame(gender =heightdf$gender)# this however stays as a dataframe
gender2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    gender
## 1       F
## 2       F
## 3       F
## 4       F
## 5       F
## 6       F
## 7       M
## 8       M
## 9       M
## 10      M
## 11      M
## 12      M&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;genderindex&amp;lt;- which(colnames(heightdf) == &amp;quot;gender&amp;quot;) #now wwe will use which() to select columns named gender
genderindex&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gender3 &amp;lt;-heightdf[genderindex]#now we will use the brackets to grab just this column
gender3&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    gender
## 1       F
## 2       F
## 3       F
## 4       F
## 5       F
## 6       F
## 7       M
## 8       M
## 9       M
## 10      M
## 11      M
## 12      M&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;identical(gender1, gender2)#lets see if they are identical - this is a helpful function - can only compare two variables at a time&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gender1==gender2 # are they the same? should say true if they are&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##       gender
##  [1,]   TRUE
##  [2,]   TRUE
##  [3,]   TRUE
##  [4,]   TRUE
##  [5,]   TRUE
##  [6,]   TRUE
##  [7,]   TRUE
##  [8,]   TRUE
##  [9,]   TRUE
## [10,]   TRUE
## [11,]   TRUE
## [12,]   TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gender2==gender3 # are they the same? should say true if they are&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##       gender
##  [1,]   TRUE
##  [2,]   TRUE
##  [3,]   TRUE
##  [4,]   TRUE
##  [5,]   TRUE
##  [6,]   TRUE
##  [7,]   TRUE
##  [8,]   TRUE
##  [9,]   TRUE
## [10,]   TRUE
## [11,]   TRUE
## [12,]   TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now let‚Äôs try to look at/grab specific values.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;height2&amp;lt;-c(6, 5.5, 6, 6, 6, 6, 4.3) #6 and 5.5 are in our orignal height vector but not 4.3
which(height %in% height2) # what of our orignial data is also found in height2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1]  1  7 11&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;heightdf[which(height %in% height2),] # here we skipped making another variable for the index&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    height gender
## 1     5.5      F
## 7     6.0      M
## 11    6.0      M&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#we can also use a function clalled grep
wanted_heights_index&amp;lt;-grep(5.9, heightdf$height)
heightdf[wanted_heights_index,] #now we just have the samples who are 5.9&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    height gender
## 9     5.9      M
## 12    5.9      M&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#say we want to know the value of an element at a particular location
heightdf$height[2] #second value in the height column&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 4.5&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;heightdf$height[1:3]# first three valeus in the height column&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 5.5 4.5 5.0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This allows you to grab random data points.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sample(heightdf$height, 2)#takes a random sample from a vector of the specified number of elements&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 5.5 5.9&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sample.int(1000999, 2)#takes a random sample from 1 to the first whole number specified. Thue number of random values to output is given by the second number.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 161093 430020&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;plotting-data&#34; class=&#34;section level6&#34;&gt;
&lt;h6&gt;7) Plotting Data&lt;/h6&gt;
&lt;p&gt;Now let‚Äôs try plotting some data and perform some statistical tests.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;boxplot(heightdf$height~heightdf$gender)#simple boxplot&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-12-24-R_101_files/figure-html/unnamed-chunk-14-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#lets make a fancy boxplot
boxplot(heightdf$height~heightdf$gender, col = c(&amp;quot;red&amp;quot;, &amp;quot;blue&amp;quot;), ylab = &amp;quot;Height&amp;quot;, xlab = &amp;quot;Gender&amp;quot;, main = &amp;quot;Relationship of gender and height&amp;quot;, cex.lab =2, cex.main = 2, cex.axis = 1.3, par(mar=c(5, 5, 5, 5)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-12-24-R_101_files/figure-html/unnamed-chunk-14-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;hist(heightdf$height)#histogram&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-12-24-R_101_files/figure-html/unnamed-chunk-14-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;heightdf$age &amp;lt;-c(20, 30, 15, 20, 40, 14, 35, 40, 17, 16, 25, 16)##adding another variable to a dataframe
plot(heightdf$height)#one variable&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-12-24-R_101_files/figure-html/unnamed-chunk-14-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(y=heightdf$height, x=heightdf$age)#scatterplot of 2 variables
height_age&amp;lt;-lm(heightdf$height~heightdf$age)#perform a regression on the data - evaluate height and age relationship
summary(height_age)#shows the stats results from the regression&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = heightdf$height ~ heightdf$age)
## 
## Residuals:
##     Min      1Q  Median      3Q     Max 
## -1.1999 -0.1154  0.1348  0.3634  0.3943 
## 
## Coefficients:
##              Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept)   5.28384    0.39367  13.422 1.01e-07 ***
## heightdf$age  0.01387    0.01527   0.908    0.385    
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 0.4973 on 10 degrees of freedom
## Multiple R-squared:  0.07616,    Adjusted R-squared:  -0.01622 
## F-statistic: 0.8244 on 1 and 10 DF,  p-value: 0.3853&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;abline(height_age)#add regression line to plot&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-12-24-R_101_files/figure-html/unnamed-chunk-14-5.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cor.test(y=heightdf$height, x=heightdf$age)#shows the same p value when performing a correlation test&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##  Pearson&amp;#39;s product-moment correlation
## 
## data:  heightdf$age and heightdf$height
## t = 0.90797, df = 10, p-value = 0.3853
## alternative hypothesis: true correlation is not equal to 0
## 95 percent confidence interval:
##  -0.3539944  0.7336745
## sample estimates:
##       cor 
## 0.2759734&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;more-statistical-tests&#34; class=&#34;section level6&#34;&gt;
&lt;h6&gt;8) More Statistical Tests&lt;/h6&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;t.test(heightdf$height~heightdf$gender)#try a t test between male height and female height - this is significant!&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##  Welch Two Sample t-test
## 
## data:  heightdf$height by heightdf$gender
## t = -3.4903, df = 5.8325, p-value = 0.01359
## alternative hypothesis: true difference in means is not equal to 0
## 95 percent confidence interval:
##  -1.194177 -0.205823
## sample estimates:
## mean in group F mean in group M 
##        5.266667        5.966667&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#if p&amp;lt;0.05 it is generally considered significant
fit &amp;lt;-aov(heightdf$height~heightdf$gender + heightdf$age)#now lets perform an anova or multiple regression
summary(fit)# here are the results&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                 Df Sum Sq Mean Sq F value  Pr(&amp;gt;F)   
## heightdf$gender  1 1.4700  1.4700  12.167 0.00685 **
## heightdf$age     1 0.1193  0.1193   0.987 0.34638   
## Residuals        9 1.0874  0.1208                   
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;anova(fit)# same results&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Analysis of Variance Table
## 
## Response: heightdf$height
##                 Df  Sum Sq Mean Sq F value   Pr(&amp;gt;F)   
## heightdf$gender  1 1.47000 1.47000 12.1668 0.006851 **
## heightdf$age     1 0.11928 0.11928  0.9872 0.346383   
## Residuals        9 1.08739 0.12082                    
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;fit &amp;lt;-lm(heightdf$height~heightdf$gender + heightdf$age)# performing as multiple regression
summary(fit) #gives the same result as above - this is an anova but the results are presented differently&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = heightdf$height ~ heightdf$gender + heightdf$age)
## 
## Residuals:
##      Min       1Q   Median       3Q      Max 
## -0.83944 -0.07318  0.02918  0.12062  0.36706 
## 
## Coefficients:
##                  Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept)       5.01995    0.28600  17.552 2.86e-08 ***
## heightdf$genderM  0.68225    0.20148   3.386  0.00805 ** 
## heightdf$age      0.01065    0.01072   0.994  0.34638    
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 0.3476 on 9 degrees of freedom
## Multiple R-squared:  0.5938, Adjusted R-squared:  0.5035 
## F-statistic: 6.577 on 2 and 9 DF,  p-value: 0.01736&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;anova(fit)#also gives the same result&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Analysis of Variance Table
## 
## Response: heightdf$height
##                 Df  Sum Sq Mean Sq F value   Pr(&amp;gt;F)   
## heightdf$gender  1 1.47000 1.47000 12.1668 0.006851 **
## heightdf$age     1 0.11928 0.11928  0.9872 0.346383   
## Residuals        9 1.08739 0.12082                    
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let‚Äôs do a more classic anova - using a categorical variable with more than two categories.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;heightdf$country &amp;lt;-c(&amp;quot;British&amp;quot;, &amp;quot;French&amp;quot;, &amp;quot;British&amp;quot;, &amp;quot;Dutch&amp;quot;, &amp;quot;Dutch&amp;quot;, &amp;quot;French&amp;quot;, &amp;quot;Dutch&amp;quot;, &amp;quot;Dutch&amp;quot;, &amp;quot;British&amp;quot;, &amp;quot;French&amp;quot;, &amp;quot;British&amp;quot;, &amp;quot;French&amp;quot;)
fit &amp;lt;-aov(heightdf$height~heightdf$gender + heightdf$age + heightdf$country)
summary(fit)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                  Df Sum Sq Mean Sq F value  Pr(&amp;gt;F)   
## heightdf$gender   1 1.4700  1.4700  19.157 0.00325 **
## heightdf$age      1 0.1193  0.1193   1.554 0.25258   
## heightdf$country  2 0.5503  0.2751   3.586 0.08471 . 
## Residuals         7 0.5371  0.0767                   
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;fit &amp;lt;-aov(heightdf$height~ heightdf$country)
summary(fit)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                  Df Sum Sq Mean Sq F value Pr(&amp;gt;F)
## heightdf$country  2 0.6067  0.3033   1.319  0.315
## Residuals         9 2.0700  0.2300&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;anova(fit)# we see the results of country but not each country&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Analysis of Variance Table
## 
## Response: heightdf$height
##                  Df  Sum Sq Mean Sq F value Pr(&amp;gt;F)
## heightdf$country  2 0.60667 0.30333  1.3188 0.3146
## Residuals         9 2.07000 0.23000&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;TukeyHSD(fit)# this is how we get these results - none are significant&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   Tukey multiple comparisons of means
##     95% family-wise confidence level
## 
## Fit: aov(formula = heightdf$height ~ heightdf$country)
## 
## $`heightdf$country`
##                 diff        lwr       upr     p adj
## Dutch-British   0.30 -0.6468152 1.2468152 0.6627841
## French-British -0.25 -1.1968152 0.6968152 0.7484769
## French-Dutch   -0.55 -1.4968152 0.3968152 0.2860337&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;fit &amp;lt;-lm(heightdf$height~heightdf$gender + heightdf$age + heightdf$country)
summary(fit) #gives the same result as above - this is an anova just different output&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = heightdf$height ~ heightdf$gender + heightdf$age + 
##     heightdf$country)
## 
## Residuals:
##      Min       1Q   Median       3Q      Max 
## -0.36474 -0.13454  0.03405  0.15333  0.33097 
## 
## Coefficients:
##                        Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept)             5.46051    0.28225  19.346 2.46e-07 ***
## heightdf$genderM        0.71905    0.16131   4.458  0.00294 ** 
## heightdf$age           -0.01143    0.01263  -0.905  0.39547    
## heightdf$countryDutch   0.46574    0.26813   1.737  0.12596    
## heightdf$countryFrench -0.25286    0.19590  -1.291  0.23778    
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 0.277 on 7 degrees of freedom
## Multiple R-squared:  0.7993, Adjusted R-squared:  0.6847 
## F-statistic: 6.971 on 4 and 7 DF,  p-value: 0.01375&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;lets-use-some-real-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Lets use some &lt;strong&gt;real&lt;/strong&gt; data!&lt;/h3&gt;
&lt;div id=&#34;baby-name-data&#34; class=&#34;section level6&#34;&gt;
&lt;h6&gt;Baby Name Data&lt;/h6&gt;
&lt;p&gt;This is a very fun package to check out. If you have ever wondered about the popularity of your name or someone that you know, you will find this very interesting. I also have some friends who have used it to help them name their child.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#recall that we installed and loaded this data earlier
head(babynames)#this is a special data type called a tibble - it is basically a fancy dataframe&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 5
##    year sex   name          n   prop
##   &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;     &amp;lt;int&amp;gt;  &amp;lt;dbl&amp;gt;
## 1 1880. F     Mary       7065 0.0724
## 2 1880. F     Anna       2604 0.0267
## 3 1880. F     Emma       2003 0.0205
## 4 1880. F     Elizabeth  1939 0.0199
## 5 1880. F     Minnie     1746 0.0179
## 6 1880. F     Margaret   1578 0.0162&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tail(babynames)# we can see the data goes up to 2015&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 5
##    year sex   name       n       prop
##   &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;  &amp;lt;int&amp;gt;      &amp;lt;dbl&amp;gt;
## 1 2015. M     Zyah       5 0.00000247
## 2 2015. M     Zykell     5 0.00000247
## 3 2015. M     Zyking     5 0.00000247
## 4 2015. M     Zykir      5 0.00000247
## 5 2015. M     Zyrus      5 0.00000247
## 6 2015. M     Zyus       5 0.00000247&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#how many unique baby names are there?
length(unique(babynames$name))# that&amp;#39;s a lot of baby names!&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 95025&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#check to see if your name is included
grep(&amp;quot;Bob&amp;quot;, unique(babynames$name))#looks like bob is in there&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1]  1148  2502  4948  6510  6573  6999  9443 10761 13598 13794 18059
## [12] 18701 19278 19812 20116 20921 22002 23289 26242 27453 30231 34262
## [23] 35357 37057 37702 38171 41808 42382 43247 44135 44778 46568 50097&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Let&amp;#39;s look at the values
babynames$name [grep(&amp;quot;Bob&amp;quot;, unique(babynames$name))] # this is a vector so we don&amp;#39;t need to specify rows with a comma&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;Scott&amp;quot;     &amp;quot;Tessie&amp;quot;    &amp;quot;Sadye&amp;quot;     &amp;quot;Una&amp;quot;       &amp;quot;Philomena&amp;quot;
##  [6] &amp;quot;Belva&amp;quot;     &amp;quot;Rufus&amp;quot;     &amp;quot;Dovie&amp;quot;     &amp;quot;Janette&amp;quot;   &amp;quot;Mammie&amp;quot;   
## [11] &amp;quot;Melinda&amp;quot;   &amp;quot;Honor&amp;quot;     &amp;quot;Arch&amp;quot;      &amp;quot;Denis&amp;quot;     &amp;quot;Orrie&amp;quot;    
## [16] &amp;quot;Floyd&amp;quot;     &amp;quot;Al&amp;quot;        &amp;quot;Selina&amp;quot;    &amp;quot;Clora&amp;quot;     &amp;quot;Elvin&amp;quot;    
## [21] &amp;quot;Lafayette&amp;quot; &amp;quot;Lovie&amp;quot;     &amp;quot;Armilda&amp;quot;   &amp;quot;Nola&amp;quot;      &amp;quot;Icy&amp;quot;      
## [26] &amp;quot;Mahalia&amp;quot;   &amp;quot;Gordon&amp;quot;    &amp;quot;Seth&amp;quot;      &amp;quot;Claudia&amp;quot;   &amp;quot;Glada&amp;quot;    
## [31] &amp;quot;Floyd&amp;quot;     &amp;quot;Theodora&amp;quot;  &amp;quot;Vella&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# oops! this didn&amp;#39;t work. why? because were aren&amp;#39;t subsetting with an index derived from the data
unique(babynames$name) [grep(&amp;quot;Bob&amp;quot;, unique(babynames$name))] # here we go&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;Bob&amp;quot;        &amp;quot;Bobbie&amp;quot;     &amp;quot;Bobby&amp;quot;      &amp;quot;Bobie&amp;quot;      &amp;quot;Bobbye&amp;quot;    
##  [6] &amp;quot;Bobbe&amp;quot;      &amp;quot;Bobette&amp;quot;    &amp;quot;Bobetta&amp;quot;    &amp;quot;Boby&amp;quot;       &amp;quot;Bobbette&amp;quot;  
## [11] &amp;quot;Bobbi&amp;quot;      &amp;quot;Bobo&amp;quot;       &amp;quot;Bobra&amp;quot;      &amp;quot;Bobi&amp;quot;       &amp;quot;Bobbee&amp;quot;    
## [16] &amp;quot;Bobb&amp;quot;       &amp;quot;Bobbetta&amp;quot;   &amp;quot;Bobbyetta&amp;quot;  &amp;quot;Bobbijo&amp;quot;    &amp;quot;Bobbiejo&amp;quot;  
## [21] &amp;quot;Bobbyjo&amp;quot;    &amp;quot;Bobbiejean&amp;quot; &amp;quot;Bobbilynn&amp;quot;  &amp;quot;Boban&amp;quot;      &amp;quot;Bobijo&amp;quot;    
## [26] &amp;quot;Bobbyjoe&amp;quot;   &amp;quot;Bobak&amp;quot;      &amp;quot;Bobbilee&amp;quot;   &amp;quot;Bobbisue&amp;quot;   &amp;quot;Bobbiesue&amp;quot; 
## [31] &amp;quot;Boback&amp;quot;     &amp;quot;Bobbylee&amp;quot;   &amp;quot;Bobbielee&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#now we can see all the variations of Bob in the data
Bob&amp;lt;- subset(babynames,babynames$name == &amp;quot;Bob&amp;quot;)
#Let&amp;#39;s see how much the name has been used in the past
plot(Bob$n~Bob$year)#Bob was popular but it isn&amp;#39;t anymore  &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-12-24-R_101_files/figure-html/unnamed-chunk-17-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#what is the line of samples at the bottom?
plot(Bob$n~Bob$year, col= c(&amp;quot;red&amp;quot;, &amp;quot;blue&amp;quot;)[as.factor(Bob$sex)]) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-12-24-R_101_files/figure-html/unnamed-chunk-17-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#looks like most people named Bob were male, the line of samples at the bottom are females
#lets try another name
Lori&amp;lt;- subset(babynames,babynames$name == &amp;quot;Lori&amp;quot;)
plot(Lori$n~Lori$year, col= c(&amp;quot;red&amp;quot;, &amp;quot;blue&amp;quot;)[as.factor(Lori$sex)])&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-12-24-R_101_files/figure-html/unnamed-chunk-17-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Lori_M&amp;lt;- subset(babynames,name == &amp;quot;Lori&amp;quot; &amp;amp; sex == &amp;quot;M&amp;quot;)#lets look at when exactly some males were named Lori
head(Lori_M)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 5
##    year sex   name      n       prop
##   &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt;      &amp;lt;dbl&amp;gt;
## 1 1954. M     Lori      5 0.00000242
## 2 1955. M     Lori      5 0.00000239
## 3 1956. M     Lori     14 0.00000653
## 4 1957. M     Lori     20 0.00000914
## 5 1958. M     Lori     25 0.0000116 
## 6 1959. M     Lori     29 0.0000134&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# lets see how many samples are present for each year in the data
table(babynames$year)# so there are 2000 samples from 1880 and 1935 samples from 1881&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##  1880  1881  1882  1883  1884  1885  1886  1887  1888  1889  1890  1891 
##  2000  1935  2127  2084  2297  2294  2392  2373  2651  2590  2695  2660 
##  1892  1893  1894  1895  1896  1897  1898  1899  1900  1901  1902  1903 
##  2921  2831  2941  3049  3091  3028  3264  3042  3731  3153  3362  3389 
##  1904  1905  1906  1907  1908  1909  1910  1911  1912  1913  1914  1915 
##  3561  3655  3633  3948  4018  4227  4629  4867  6351  6967  7964  9358 
##  1916  1917  1918  1919  1920  1921  1922  1923  1924  1925  1926  1927 
##  9696  9915 10401 10368 10756 10856 10757 10641 10869 10641 10460 10405 
##  1928  1929  1930  1931  1932  1933  1934  1935  1936  1937  1938  1939 
## 10159  9816  9788  9293  9383  9011  9181  9035  8893  8945  9030  8919 
##  1940  1941  1942  1943  1944  1945  1946  1947  1948  1949  1950  1951 
##  8960  9087  9424  9405  9153  9026  9702 10370 10237 10264 10309 10460 
##  1952  1953  1954  1955  1956  1957  1958  1959  1960  1961  1962  1963 
## 10654 10831 10963 11114 11339 11564 11521 11771 11924 12178 12206 12278 
##  1964  1965  1966  1967  1968  1969  1970  1971  1972  1973  1974  1975 
## 12394 11953 12148 12400 12930 13746 14782 15291 15414 15676 16243 16934 
##  1976  1977  1978  1979  1980  1981  1982  1983  1984  1985  1986  1987 
## 17395 18171 18224 19032 19439 19470 19680 19398 19501 20076 20642 21399 
##  1988  1989  1990  1991  1992  1993  1994  1995  1996  1997  1998  1999 
## 22360 23769 24715 25104 25421 25959 25998 26080 26420 26966 27894 28546 
##  2000  2001  2002  2003  2004  2005  2006  2007  2008  2009  2010  2011 
## 29764 30264 30559 31179 32040 32539 34073 34941 35051 34689 34050 33880 
##  2012  2013  2014  2015 
## 33697 33229 33176 32952&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Ok, so more samples were included in the more recent years
hist(babynames$year)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-12-24-R_101_files/figure-html/unnamed-chunk-17-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Let‚Äôs look at some other data‚Ä¶&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;titanic-data&#34; class=&#34;section level6&#34;&gt;
&lt;h6&gt;Titanic Data&lt;/h6&gt;
&lt;p&gt;This package contains real data about the passengers that were aboard the Titanic.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(Titanic) # we can see that this may be an unusal data type&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1]  0  0 35  0  0  0&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;class(Titanic) # indeed this appears to be a table&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;table&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dim(Titanic)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 4 2 2 2&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dimnames(Titanic)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $Class
## [1] &amp;quot;1st&amp;quot;  &amp;quot;2nd&amp;quot;  &amp;quot;3rd&amp;quot;  &amp;quot;Crew&amp;quot;
## 
## $Sex
## [1] &amp;quot;Male&amp;quot;   &amp;quot;Female&amp;quot;
## 
## $Age
## [1] &amp;quot;Child&amp;quot; &amp;quot;Adult&amp;quot;
## 
## $Survived
## [1] &amp;quot;No&amp;quot;  &amp;quot;Yes&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;str(Titanic) # shows the structure of the data&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  table [1:4, 1:2, 1:2, 1:2] 0 0 35 0 0 0 17 0 118 154 ...
##  - attr(*, &amp;quot;dimnames&amp;quot;)=List of 4
##   ..$ Class   : chr [1:4] &amp;quot;1st&amp;quot; &amp;quot;2nd&amp;quot; &amp;quot;3rd&amp;quot; &amp;quot;Crew&amp;quot;
##   ..$ Sex     : chr [1:2] &amp;quot;Male&amp;quot; &amp;quot;Female&amp;quot;
##   ..$ Age     : chr [1:2] &amp;quot;Child&amp;quot; &amp;quot;Adult&amp;quot;
##   ..$ Survived: chr [1:2] &amp;quot;No&amp;quot; &amp;quot;Yes&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;help(&amp;quot;titanic_test&amp;quot;)#this shows more information about the data
help(&amp;quot;titanic_train&amp;quot;)# I would assume survived is a 1
#lets see if more males or females survived
boxplot(titanic_train$Survived~titanic_train$Sex)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-12-24-R_101_files/figure-html/unnamed-chunk-18-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;table(titanic_train$Survived,titanic_train$Sex)# it looks like males laregly did not survive&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    
##     female male
##   0     81  468
##   1    233  109&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# this might be a better way to view the data - here width represents the number of samples - thus there are more males overall
mosaicplot(Sex ~ Survived, data=titanic_train) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-12-24-R_101_files/figure-html/unnamed-chunk-18-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# It looks like even though there were many more males, the female passangers were much more likely to survive&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;How about some more data‚Ä¶&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;earthquake-data&#34; class=&#34;section level6&#34;&gt;
&lt;h6&gt;Earthquake Data&lt;/h6&gt;
&lt;p&gt;Here we will scrape data (or obtain data from a website) from the USGS website about earthquake rates in different US states. See our previous &lt;a href=&#34;http://research.libd.org/rstatsclub/2018/03/19/introduction-to-scraping-and-wranging-tables-from-research-articles/#.W_MStJNKhR4&#34;&gt;post&lt;/a&gt; from S. Semick on scraping data from research articles for more information on how to do this.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(&amp;quot;htmltab&amp;quot;)
install.packages(&amp;quot;reshape2&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(htmltab)
library(reshape2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;reshape2&amp;#39; was built under R version 3.4.3&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;url&amp;lt;-&amp;quot;https://earthquake.usgs.gov/earthquakes/browse/stats.php&amp;quot;
eq &amp;lt;- htmltab(doc = url, which = 5)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## No encoding supplied: defaulting to UTF-8.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rownames(eq)&amp;lt;-eq$States
eq&amp;lt;-eq[-1]
head(eq)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##            2010 2011 2012 2013 2014 2015
## Alabama       1    1    0    0    2    6
## Alaska     2245 1409 1166 1329 1296 1575
## Arizona       6    7    4    3   31   10
## Arkansas     15   44    4    4    1    0
## California  546  195  243  240  191  130
## Colorado      4   23    7    2   13    7&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;eq2 &amp;lt;- as.data.frame(sapply(eq, function(x) as.numeric(as.character(x))))
head(eq2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   2010 2011 2012 2013 2014 2015
## 1    1    1    0    0    2    6
## 2 2245 1409 1166 1329 1296 1575
## 3    6    7    4    3   31   10
## 4   15   44    4    4    1    0
## 5  546  195  243  240  191  130
## 6    4   23    7    2   13    7&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;convertoChar&amp;lt;-function(x) as.numeric(as.character(x)) # or you could create a function to use multiple times
factor_to_fix&amp;lt;-as.factor(c(1,2))
class(factor_to_fix)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;factor&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;class(trying_function&amp;lt;-convertoChar(x=factor_to_fix))# now the class is numeric&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;numeric&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;class(trying_function2&amp;lt;-convertoChar(factor_to_fix))# now the class is numeric&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;numeric&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rownames(eq2)&amp;lt;-rownames(eq)
head(eq2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##            2010 2011 2012 2013 2014 2015
## Alabama       1    1    0    0    2    6
## Alaska     2245 1409 1166 1329 1296 1575
## Arizona       6    7    4    3   31   10
## Arkansas     15   44    4    4    1    0
## California  546  195  243  240  191  130
## Colorado      4   23    7    2   13    7&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;colSums(eq2)#look at the col sums&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 2010 2011 2012 2013 2014 2015 
## 3026 1955 1603 1899 2628 3225&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;colMeans(eq2)# look at the col means&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  2010  2011  2012  2013  2014  2015 
## 60.52 39.10 32.06 37.98 52.56 64.50&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rowMeans(eq2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##        Alabama         Alaska        Arizona       Arkansas     California 
##      1.6666667   1503.3333333     10.1666667     11.3333333    257.5000000 
##       Colorado    Connecticut       Delaware        Florida        Georgia 
##      9.3333333      0.1666667      0.0000000      0.0000000      0.0000000 
##         Hawaii          Idaho       Illinois        Indiana           Iowa 
##     33.3333333     15.8333333      0.8333333      0.6666667      0.0000000 
##         Kansas       Kentucky      Louisiana          Maine       Maryland 
##     17.3333333      0.3333333      0.1666667      0.5000000      0.1666667 
##  Massachusetts       Michigan      Minnesota    Mississippi       Missouri 
##      0.0000000      0.3333333      0.1666667      0.5000000      2.1666667 
##        Montana       Nebraska         Nevada  New Hampshire     New Jersey 
##     14.8333333      1.0000000     85.5000000      0.1666667      0.0000000 
##     New Mexico       New York North Carolina   North Dakota           Ohio 
##      6.3333333      0.5000000      0.1666667      0.1666667      1.0000000 
##       Oklahoma         Oregon   Pennsylvania   Rhode Island South Carolina 
##    285.6666667      2.8333333      0.0000000      0.0000000      0.5000000 
##   South Dakota      Tennessee          Texas           Utah        Vermont 
##      1.0000000      1.3333333     13.8333333     11.5000000      0.0000000 
##       Virginia     Washington  West Virginia      Wisconsin        Wyoming 
##      2.1666667     10.0000000      0.3333333      0.0000000     84.6666667&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rowSums(eq2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##        Alabama         Alaska        Arizona       Arkansas     California 
##             10           9020             61             68           1545 
##       Colorado    Connecticut       Delaware        Florida        Georgia 
##             56              1              0              0              0 
##         Hawaii          Idaho       Illinois        Indiana           Iowa 
##            200             95              5              4              0 
##         Kansas       Kentucky      Louisiana          Maine       Maryland 
##            104              2              1              3              1 
##  Massachusetts       Michigan      Minnesota    Mississippi       Missouri 
##              0              2              1              3             13 
##        Montana       Nebraska         Nevada  New Hampshire     New Jersey 
##             89              6            513              1              0 
##     New Mexico       New York North Carolina   North Dakota           Ohio 
##             38              3              1              1              6 
##       Oklahoma         Oregon   Pennsylvania   Rhode Island South Carolina 
##           1714             17              0              0              3 
##   South Dakota      Tennessee          Texas           Utah        Vermont 
##              6              8             83             69              0 
##       Virginia     Washington  West Virginia      Wisconsin        Wyoming 
##             13             60              2              0            508&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;max(eq2)# maximum value&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2245&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;boxplot(eq2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-12-24-R_101_files/figure-html/unnamed-chunk-20-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;boxplot(eq2, ylim = c(0,40))# change the limit of the plot&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-12-24-R_101_files/figure-html/unnamed-chunk-20-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;boxplot(t(eq2), ylim =c(0,2000))#flip the data using t()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-12-24-R_101_files/figure-html/unnamed-chunk-20-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;eq3&amp;lt;-melt(eq2)#this puts the data in long form&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## No id variables; using all as measure variables&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;names(eq3)&amp;lt;-c(&amp;quot;year&amp;quot;, &amp;quot;quakes&amp;quot;)
head(eq3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   year quakes
## 1 2010      1
## 2 2010   2245
## 3 2010      6
## 4 2010     15
## 5 2010    546
## 6 2010      4&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;fit&amp;lt;-aov(eq3$quakes~eq3$year)
summary(fit)#no significant difference by year&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##              Df   Sum Sq Mean Sq F value Pr(&amp;gt;F)
## eq3$year      5    44161    8832   0.169  0.974
## Residuals   294 15405834   52401&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;in-addition-these-are-functions-that-the-members-of-libd-rstats-use-often&#34; class=&#34;section level6&#34;&gt;
&lt;h6&gt;In addition, these are functions that the members of &lt;a href=&#34;http://research.libd.org/rstatsclub/#.W_MMz5NKhR4&#34;&gt;LIBD Rstats&lt;/a&gt; use often:&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.rdocumentation.org/packages/utils/versions/3.5.1/topics/head&#34;&gt;head()&lt;/a&gt; / &lt;a href=&#34;https://www.rdocumentation.org/packages/utils/versions/3.5.1/topics/head&#34;&gt;tail()&lt;/a&gt; ‚Äì see the head and the tail - also check out the corner function of the &lt;a href=&#34;https://github.com/LieberInstitute/jaffelab&#34;&gt;jaffelab package&lt;/a&gt; created by LIBD Rstats founding member E. Burke&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.rdocumentation.org/packages/base/versions/3.5.1/topics/row%2Bcolnames&#34;&gt;colnames()&lt;/a&gt; / &lt;a href=&#34;https://www.rdocumentation.org/packages/base/versions/3.5.1/topics/row%2Bcolnames&#34;&gt;rownames()&lt;/a&gt; ‚Äì see and rename columns or row names&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.rdocumentation.org/packages/gmatrix/versions/0.3/topics/colMeans&#34;&gt;colMeans()&lt;/a&gt; / &lt;a href=&#34;https://www.rdocumentation.org/packages/fame/versions/1.03/topics/rowMeans&#34;&gt;rowMeans()&lt;/a&gt; / &lt;a href=&#34;https://www.rdocumentation.org/packages/base/versions/3.5.1/topics/colSums&#34;&gt;colSums()&lt;/a&gt; / &lt;a href=&#34;https://www.rdocumentation.org/packages/raster/versions/2.7-15/topics/rowSums&#34;&gt;rowSums()&lt;/a&gt; ‚Äì get means and sums of columns and rows&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.rdocumentation.org/packages/base/versions/3.5.1/topics/dim&#34;&gt;dim()&lt;/a&gt; and &lt;a href=&#34;https://www.rdocumentation.org/packages/base/versions/3.5.1/topics/length&#34;&gt;length()&lt;/a&gt; ‚Äì determine the dimensions/size of a data set ‚Äì need to use length() when evaluating a vector&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.rdocumentation.org/packages/hyperSpec/versions/0.98-20140523/topics/ncol&#34;&gt;ncol()&lt;/a&gt; / &lt;a href=&#34;https://www.rdocumentation.org/packages/hyperSpec/versions/0.98-20140523/topics/ncol&#34;&gt;nrow()&lt;/a&gt; ‚Äì number of columns and rows&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.rdocumentation.org/packages/utils/versions/3.5.1/topics/str&#34;&gt;str()&lt;/a&gt; ‚Äì displays the structure of an object - this is very useful with complex data structures&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.rdocumentation.org/packages/base/versions/3.5.1/topics/unique&#34;&gt;unique()&lt;/a&gt;/&lt;a href=&#34;https://www.rdocumentation.org/packages/data.table/versions/1.11.8/topics/duplicated&#34;&gt;duplicated()&lt;/a&gt; ‚Äì find unique and duplicated values&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.rdocumentation.org/packages/base/versions/3.5.1/topics/order&#34;&gt;order()&lt;/a&gt;/&lt;a href=&#34;https://www.rdocumentation.org/packages/base/versions/3.5.1/topics/sort&#34;&gt;sort()&lt;/a&gt;‚Äì order and sort your data&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.rdocumentation.org/packages/base/versions/3.5.1/topics/grep&#34;&gt;gsub()&lt;/a&gt; ‚Äì replace values&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.rdocumentation.org/packages/base/versions/3.5.1/topics/table&#34;&gt;table()&lt;/a&gt; ‚Äì summarize your data in table format&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.rdocumentation.org/packages/stats/versions/3.5.1/topics/t.test&#34;&gt;t.test()&lt;/a&gt; ‚Äì perform a t test&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.rdocumentation.org/packages/stats/versions/3.5.1/topics/cor.test&#34;&gt;cor.test()&lt;/a&gt; ‚Äì perform a correlation test&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.rdocumentation.org/packages/stats/versions/3.5.1/topics/lm&#34;&gt;lm()&lt;/a&gt; ‚Äì make a linear model&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.rdocumentation.org/packages/base/versions/3.5.1/topics/summary&#34;&gt;summary()&lt;/a&gt; ‚Äì if you use the lm() output ‚Äì this will give you the results&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.rdocumentation.org/packages/base/versions/3.5.1/topics/Random&#34;&gt;set.seed()&lt;/a&gt; ‚Äì allows for random permutations or random data to be the same every time your run your code&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;for-additional-help-take-a-look-at-these-links&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;For additional help take a look at these links:&lt;/h3&gt;
&lt;div id=&#34;free-courses-and-tutorials&#34; class=&#34;section level6&#34;&gt;
&lt;h6&gt;Free courses and tutorials&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.coursera.org/courses?query=r&#34; class=&#34;uri&#34;&gt;https://www.coursera.org/courses?query=r&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.pluralsight.com/courses/r-programming-fundamentals&#34; class=&#34;uri&#34;&gt;https://www.pluralsight.com/courses/r-programming-fundamentals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.rstudio.com/online-learning/&#34; class=&#34;uri&#34;&gt;https://www.rstudio.com/online-learning/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;community-support&#34; class=&#34;section level6&#34;&gt;
&lt;h6&gt;Community support&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://community.rstudio.com/&#34; class=&#34;uri&#34;&gt;https://community.rstudio.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://support.bioconductor.org/&#34; class=&#34;uri&#34;&gt;https://support.bioconductor.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://resources.rstudio.com/webinars/help-me-help-you-creating-reproducible-examples-jenny-bryan&#34; class=&#34;uri&#34;&gt;https://resources.rstudio.com/webinars/help-me-help-you-creating-reproducible-examples-jenny-bryan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;link helps you make examples of code errors that you need help with&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;tips-for-help&#34; class=&#34;section level6&#34;&gt;
&lt;h6&gt;Tips for help&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.r-project.org/help.html&#34; class=&#34;uri&#34;&gt;https://www.r-project.org/help.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Google! ‚Äì stackoverflow, biostars&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.rstudio.com/resources/cheatsheets/&#34; class=&#34;uri&#34;&gt;https://www.rstudio.com/resources/cheatsheets/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;also-follow-our-blog-for-more-helpful-posts.&#34; class=&#34;section level6&#34;&gt;
&lt;h6&gt;Also follow our blog for more helpful posts.&lt;/h6&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;thanks-for-reading-and-have-fun-getting-to-know-r&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Thanks for reading and have fun getting to know R!&lt;/h2&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-12-24-R_101_files/startnew.jpg&#34; width=&#34;500&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;This image came from: &lt;a href=&#34;https://www.pinterest.com/pin/89790586304535333/&#34; class=&#34;uri&#34;&gt;https://www.pinterest.com/pin/89790586304535333/&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;acknowledgements&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This blog post was made possible thanks to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;http://bioconductor.org/packages/BiocStyle&#34;&gt;BiocStyle&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Oles_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/Bioconductor/BiocStyle&#39;&gt;Ole≈õ, Morgan, and Huber, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Xie_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/rstudio/blogdown&#39;&gt;Xie, Hill, and Thomas, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;knitcitations&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Boettiger_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=knitcitations&#39;&gt;Boettiger, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=sessioninfo&#34;&gt;sessioninfo&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Csardi_2018&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=sessioninfo&#39;&gt;Cs√°rdi, core, Wickham, Chang, et al., 2018&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Boettiger_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Boettiger_2017&#34;&gt;[1]&lt;/a&gt;&lt;cite&gt; C. Boettiger. &lt;em&gt;knitcitations: Citations for ‚ÄòKnitr‚Äô Markdown Files&lt;/em&gt;. R package version 1.0.8. 2017. URL: &lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;https://CRAN.R-project.org/package=knitcitations&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Csardi_2018&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Csardi_2018&#34;&gt;[2]&lt;/a&gt;&lt;cite&gt; G. Cs√°rdi, R. core, H. Wickham, W. Chang, et al. &lt;em&gt;sessioninfo: R Session Information&lt;/em&gt;. R package version 1.1.1. 2018. URL: &lt;a href=&#34;https://CRAN.R-project.org/package=sessioninfo&#34;&gt;https://CRAN.R-project.org/package=sessioninfo&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Oles_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Oles_2017&#34;&gt;[3]&lt;/a&gt;&lt;cite&gt; A. Ole≈õ, M. Morgan and W. Huber. &lt;em&gt;BiocStyle: Standard styles for vignettes and other Bioconductor documents&lt;/em&gt;. R package version 2.6.1. 2017. URL: &lt;a href=&#34;https://github.com/Bioconductor/BiocStyle&#34;&gt;https://github.com/Bioconductor/BiocStyle&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Xie_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Xie_2017&#34;&gt;[4]&lt;/a&gt;&lt;cite&gt; Y. Xie, A. P. Hill and A. Thomas. &lt;em&gt;blogdown: Creating Websites with R Markdown&lt;/em&gt;. ISBN 978-0815363729. Boca Raton, Florida: Chapman and Hall/CRC, 2017. URL: &lt;a href=&#34;https://github.com/rstudio/blogdown&#34;&gt;https://github.com/rstudio/blogdown&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;reproducibility&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Reproducibility&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;## ‚îÄ Session info ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
##  setting  value                       
##  version  R version 3.4.0 (2017-04-21)
##  os       macOS Sierra 10.12.6        
##  system   x86_64, darwin15.6.0        
##  ui       X11                         
##  language (EN)                        
##  collate  en_US.UTF-8                 
##  ctype    en_US.UTF-8                 
##  tz       America/New_York            
##  date     2018-11-19                  
## 
## ‚îÄ Packages ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
##  package       * version   date       lib source                           
##  assertthat      0.2.0     2017-04-11 [1] CRAN (R 3.4.0)                   
##  babynames     * 0.3.0     2017-04-14 [1] CRAN (R 3.4.0)                   
##  backports       1.1.2     2018-04-18 [1] Github (r-lib/backports@cee9348) 
##  bibtex          0.4.2     2017-06-30 [1] CRAN (R 3.4.1)                   
##  bindr           0.1       2016-11-13 [1] CRAN (R 3.4.0)                   
##  bindrcpp        0.2       2017-06-17 [1] CRAN (R 3.4.0)                   
##  BiocStyle     * 2.6.1     2017-11-30 [1] Bioconductor                     
##  blogdown        0.5.9     2018-03-08 [1] Github (rstudio/blogdown@dc1f41c)
##  bookdown        0.7       2018-02-18 [1] CRAN (R 3.4.3)                   
##  cli             1.0.0     2017-11-05 [1] CRAN (R 3.4.2)                   
##  crayon          1.3.4     2017-09-16 [1] CRAN (R 3.4.1)                   
##  curl            3.2       2018-03-28 [1] CRAN (R 3.4.4)                   
##  digest          0.6.15    2018-01-28 [1] CRAN (R 3.4.3)                   
##  dplyr         * 0.7.4     2017-09-28 [1] CRAN (R 3.4.2)                   
##  evaluate        0.11      2018-07-17 [1] CRAN (R 3.4.4)                   
##  glue            1.3.0     2018-07-17 [1] CRAN (R 3.4.4)                   
##  htmltab       * 0.7.1     2016-12-29 [1] CRAN (R 3.4.0)                   
##  htmltools       0.3.6     2017-04-28 [1] CRAN (R 3.4.0)                   
##  httr            1.3.1     2017-08-20 [1] CRAN (R 3.4.1)                   
##  jsonlite        1.5       2017-06-01 [1] CRAN (R 3.4.0)                   
##  knitcitations * 1.0.8     2017-07-04 [1] CRAN (R 3.4.1)                   
##  knitr           1.20      2018-02-20 [1] CRAN (R 3.4.3)                   
##  lubridate       1.7.4     2018-04-11 [1] CRAN (R 3.4.4)                   
##  magrittr        1.5       2014-11-22 [1] CRAN (R 3.4.0)                   
##  pillar          1.2.1     2018-02-27 [1] CRAN (R 3.4.3)                   
##  pkgconfig       2.0.1     2017-03-21 [1] CRAN (R 3.4.0)                   
##  plyr            1.8.4     2016-06-08 [1] CRAN (R 3.4.0)                   
##  R6              2.2.2     2017-06-17 [1] CRAN (R 3.4.0)                   
##  Rcpp            0.12.16   2018-03-13 [1] CRAN (R 3.4.4)                   
##  RefManageR      1.2.0     2018-04-25 [1] CRAN (R 3.4.4)                   
##  reshape2      * 1.4.3     2017-12-11 [1] CRAN (R 3.4.3)                   
##  rlang           0.2.0     2018-02-20 [1] CRAN (R 3.4.3)                   
##  rmarkdown       1.10      2018-06-11 [1] CRAN (R 3.4.4)                   
##  rprojroot       1.3-2     2018-01-03 [1] CRAN (R 3.4.3)                   
##  sessioninfo   * 1.1.1     2018-11-05 [1] CRAN (R 3.4.4)                   
##  stringi         1.2.4     2018-07-20 [1] CRAN (R 3.4.4)                   
##  stringr         1.3.1     2018-05-10 [1] CRAN (R 3.4.4)                   
##  tibble          1.4.2     2018-01-22 [1] CRAN (R 3.4.3)                   
##  titanic       * 0.1.0     2015-08-31 [1] CRAN (R 3.4.0)                   
##  utf8            1.1.3     2018-01-03 [1] CRAN (R 3.4.3)                   
##  withr           2.1.2     2018-03-15 [1] CRAN (R 3.4.4)                   
##  xfun            0.3       2018-07-06 [1] CRAN (R 3.4.4)                   
##  XML             3.98-1.10 2018-02-19 [1] CRAN (R 3.4.3)                   
##  xml2            1.2.0     2018-01-24 [1] CRAN (R 3.4.3)                   
##  yaml            2.2.0     2018-07-25 [1] CRAN (R 3.4.4)                   
## 
## [1] /Library/Frameworks/R.framework/Versions/3.4/Resources/library&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Quality Surrogate Variable Analysis </title>
      <link>/post/quality-surrogate-variable-analysis/</link>
      <pubDate>Tue, 11 Dec 2018 00:00:00 +0000</pubDate>
      <guid>/post/quality-surrogate-variable-analysis/</guid>
      <description>


&lt;p&gt;By &lt;a href=&#34;https://amy-peterson.github.io/&#34;&gt;Amy Peterson&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Studying genetic differential expression using postmortem human brain tissue requires an understanding of the effect brain tissue degradation has on genetic expression. Particularly when brain tissue degradation confounds&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; the differences in gene expression levels between subject groups. This problem of confounding necessitates measures from a control dataset of postmortem tissue from individuals who do not have the outcome of interest. Doing so provides a comparative measure of the impact of tissue degradation on expression that can then be used in a case-control study to examine the impact of the outcome of interest on genetic expression. Incorporating the determinations of tissue degradation in control brains in an algorithm to assess the results of genetic differential expression in brains that have the outcome of interest leads to more accurate results and reduces the number of false positive genes that are incorrectly identified as differentially expressed between cases and controls.&lt;/p&gt;
&lt;div id=&#34;sva-background&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;SVA background&lt;/h3&gt;
&lt;p&gt;RNA-sequencing (RNA-seq) is a high-throughput method for quantifying gene expression levels that requires using high-quality RNA. The effect of RNA quality on detecting genetic differential expression accurately was previously addressed with surrogate variable analysis (SVA), which includes batch effects to address the issue of heterogeneity in expression studies &lt;a id=&#39;cite-Leek_2007&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://doi.org/10.1371/journal.pgen.0030161&#39;&gt;Leek and Storey, 2007&lt;/a&gt;). The problem of confounding requires a more robust approach to identifying genes that are differentially expressed.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;qsva&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;qSVA&lt;/h3&gt;
&lt;p&gt;The quality surrogate variable analysis (qSVA) algorithmic framework, an extended version of SVA, was developed by Andrew Jaffe and colleagues &lt;a id=&#39;cite-Jaffe_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://doi.org/10.1073/pnas.1617384114&#39;&gt;Jaffe, Tao, Norris, Kealhofer, et al., 2017&lt;/a&gt;) to provide a method for solving the issue of confounding by brain degradation. The qSVA framework reduces the number of false positive genes, since genes may be identified because RNA quality confounding is not controlled for adequately. This conservative approach uses stricter criteria and involves processing methods that are well established, applying expression cutoffs, avoiding potential batch effects, and adjusting for RNA quality degradation confounding using qSVA.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;datasets&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Datasets&lt;/h3&gt;
&lt;p&gt;The qSVA algorithm requires the use of two datasets. Here, the dataset of interest is part of BrainSeq, A Human Brain Genomics Consortium, which was initiated with the goal of generating a public database of gene expression in postmortem brain tissue to enhance the understanding of psychiatric disorders through neurogenomic data &lt;a id=&#39;cite-bsc2015&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://doi.org/10.1016/j.neuron.2015.10.047&#39;&gt;Schubert, O‚ÄôDonnell, Quan, Wendland, et al., 2015&lt;/a&gt;). The other dataset is a control dataset, which can also be referred to as the degradation dataset, since it is the measure of the impact of degradation on gene expression in postmortem tissue for individuals who do not have the outcome of interest. The degradation dataset is a much smaller dataset and helps determine the genomic regions most associated with brain degradation. This addresses the concern of an association between the outcome of interest and genetic expression, and helps better understand metrics that demonstrate RNA quality through experimental approaches. Using these two datasets, and by extending qSVA to more than one brain region, we are able to examine the issue of RNA quality confounding using RNA-seq data from multiple brain regions in a case-control study comparing degradation of tissue in patients with schizophrenia to non-psychiatric controls using BrainSeq consortium data &lt;a id=&#39;cite-colladotorres2018&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://doi.org/10.1101/426213&#39;&gt;Collado-Torres, Burke, Peterson, Shin, et al., 2018&lt;/a&gt;). We focused on the hippocampus (HIPPO) and dorsolateral prefrontal cortex (DLPFC), two brain regions that have been identified as functionally-altered in schizophrenia &lt;a id=&#39;cite-Rasetti_2014&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://doi.org/10.1001/jamapsychiatry.2013.3911&#39;&gt;Rasetti, Mattay, White, Sambataro, et al., 2014&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;algorithm-and-workflow&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Algorithm and Workflow&lt;/h3&gt;
&lt;p&gt;The algorithm has terms that account for measured covariates, including diagnosis, age, sex, mitochondrial rate, rRNA rate, gene assignment rate, RNA integrity number (RIN), ethnicity principal components (PCs)&lt;a href=&#34;#fn2&#34; class=&#34;footnote-ref&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;, and the region-specific quality surrogate variables, or qSVs, identified using the degradation dataset.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-12-11-quality-surrogate-variable-analysis_files/Picture1.png&#34; width=&#34;600&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;results&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Results&lt;/h3&gt;
&lt;p&gt;After using qSVA to adjust for the confounding effect of RNA, differential expression quality (DEqual) plots are used to assess the effectiveness of the statistical correction. These plots compare the differential expression statistics for the degradation data experiments on the y axis to statistics for the outcome from the dataset of interest on the x axis. The plots are shown for the HIPPO samples, looking at the log-fold change in expression per minute, with each point representing a gene. The goal is to assess the correlation between these two datasets, and how the correlation changes after including the quality surrogate variables (qSVs) in the model. There should not be correlation between the degradation dataset and the schizophrenia disorder case-control BrainSeq dataset, labeled as Dx on the axis for diagnosis, since they are independent datasets and the degradation dataset is serving as a control. Model 1 is a na√Øve model that includes diagnosis only. Model 2 includes diagnosis and measures for RNA-quality and demographic covariates. Model 3 includes all of the terms from the previous models, with the added qSVs. The number of genes identified as differentially expressed are shown in parentheses next to each model, and the number of genes identified as differentially expressed reduces drastically from over 6,000 in model 1, to 63 in model 2, to 48 in model 3.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-12-11-quality-surrogate-variable-analysis_files/Picture2.png&#34; width=&#34;600&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-12-11-quality-surrogate-variable-analysis_files/Picture3.png&#34; width=&#34;600&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;conclusions&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Conclusions&lt;/h3&gt;
&lt;p&gt;Once we are confident that confounding has been removed from the samples of interest, we are able to assess differential expression between cases and controls. Using the 48 genes identified from model 3, we can then perform gene biological process ontology enrichment analysis to determine which genes show enrichment, and to gain clearer insights into which genes are most affected in brain tissue of individuals with schizophrenia. For more information please check the freely available pre-print describing the BrainSeq Phase II project (&lt;a href=&#39;https://doi.org/10.1101/426213&#39;&gt;Collado-Torres, Burke, Peterson, Shin, et al., 2018&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://amy-peterson.github.io/&#34;&gt;Amy Peterson&lt;/a&gt; extended the qSVA statistical framework to from one to multiple brain regions as part of her &lt;a href=&#34;https://www.jhsph.edu/&#34;&gt;JHBSPH&lt;/a&gt; &lt;a href=&#34;https://www.jhsph.edu/academics/degree-programs/master-of-public-health/curriculum/capstone.html&#34;&gt;MPH Capstone&lt;/a&gt; project that she carried out with &lt;a href=&#34;http://aejaffe.com/&#34;&gt;Andrew E. Jaffe&lt;/a&gt; and &lt;a href=&#34;http://lcolladotor.github.io/&#34;&gt;Leonardo Collado-Torres&lt;/a&gt; at the &lt;a href=&#34;https://www.libd.org/&#34;&gt;Lieber Institute for Brain Development&lt;/a&gt;. The &lt;code&gt;R&lt;/code&gt; and &lt;code&gt;bash&lt;/code&gt; code Amy Peterson wrote is available online via GitHub at &lt;a href=&#34;https://github.com/LieberInstitute/qsva_brain&#34;&gt;LieberInstitute/qsva_brain&lt;/a&gt;. &lt;/em&gt;&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;A few days late, but here&amp;#39;s Amy &lt;a href=&#34;https://t.co/A0OSUVD9Nw&#34;&gt;https://t.co/A0OSUVD9Nw&lt;/a&gt; after successfully presenting her &lt;a href=&#34;https://twitter.com/JohnsHopkinsSPH?ref_src=twsrc%5Etfw&#34;&gt;@JohnsHopkinsSPH&lt;/a&gt; MPH capstone project. It was a great experience for me to mentor her along with &lt;a href=&#34;https://twitter.com/AndrewJaffe?ref_src=twsrc%5Etfw&#34;&gt;@andrewjaffe&lt;/a&gt; at &lt;a href=&#34;https://twitter.com/LieberInstitute?ref_src=twsrc%5Etfw&#34;&gt;@lieberinstitute&lt;/a&gt; I look forward to seeing where her career takes her üôåüèæ ^^ &lt;a href=&#34;https://t.co/hbUiHQOVq3&#34;&gt;pic.twitter.com/hbUiHQOVq3&lt;/a&gt;&lt;/p&gt;&amp;mdash; üá≤üáΩ Dr. Leonardo Collado-Torres (@fellgernon) &lt;a href=&#34;https://twitter.com/fellgernon/status/993683427131092993?ref_src=twsrc%5Etfw&#34;&gt;May 8, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;/div&gt;
&lt;div id=&#34;acknowledgements&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This blog post was made possible thanks to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://bioconductor.org/packages/3.8/BiocStyle&#34;&gt;BiocStyle&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Oles_2018&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/Bioconductor/BiocStyle&#39;&gt;Ole≈õ, Morgan, and Huber, 2018&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Xie_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/rstudio/blogdown&#39;&gt;Xie, Hill, and Thomas, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;knitcitations&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Boettiger_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=knitcitations&#39;&gt;Boettiger, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=sessioninfo&#34;&gt;sessioninfo&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Csardi_2018&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=sessioninfo&#39;&gt;Cs√°rdi, core, Wickham, Chang, et al., 2018&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Boettiger_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Boettiger_2017&#34;&gt;[1]&lt;/a&gt;&lt;cite&gt;
C. Boettiger.
&lt;em&gt;knitcitations: Citations for ‚ÄòKnitr‚Äô Markdown Files&lt;/em&gt;.
R package version 1.0.8.
2017.
URL: &lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;https://CRAN.R-project.org/package=knitcitations&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-colladotorres2018&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-colladotorres2018&#34;&gt;[2]&lt;/a&gt;&lt;cite&gt;
L. Collado-Torres, E. E. Burke, A. Peterson, J. H. Shin, et al.
‚ÄúRegional heterogeneity in gene expression, regulation and coherence in hippocampus and dorsolateral prefrontal cortex across development and in schizophrenia‚Äù.
In: &lt;em&gt;bioRxiv&lt;/em&gt; (2018).
DOI: &lt;a href=&#34;https://doi.org/10.1101/426213&#34;&gt;10.1101/426213&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Csardi_2018&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Csardi_2018&#34;&gt;[3]&lt;/a&gt;&lt;cite&gt;
G. Cs√°rdi, R. core, H. Wickham, W. Chang, et al.
&lt;em&gt;sessioninfo: R Session Information&lt;/em&gt;.
R package version 1.1.1.
2018.
URL: &lt;a href=&#34;https://CRAN.R-project.org/package=sessioninfo&#34;&gt;https://CRAN.R-project.org/package=sessioninfo&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Jaffe_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Jaffe_2017&#34;&gt;[4]&lt;/a&gt;&lt;cite&gt;
A. E. Jaffe, R. Tao, A. L. Norris, M. Kealhofer, et al.
‚ÄúqSVA framework for RNA quality correction in differential expression analysis‚Äù.
In: &lt;em&gt;Proceedings of the National Academy of Sciences&lt;/em&gt; 114.27 (Jun.¬†2017), pp.¬†7130‚Äì7135.
DOI: &lt;a href=&#34;https://doi.org/10.1073/pnas.1617384114&#34;&gt;10.1073/pnas.1617384114&lt;/a&gt;.
URL: &lt;a href=&#34;https://doi.org/10.1073/pnas.1617384114&#34;&gt;https://doi.org/10.1073/pnas.1617384114&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Leek_2007&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Leek_2007&#34;&gt;[5]&lt;/a&gt;&lt;cite&gt;
J. T. Leek and J. D. Storey.
‚ÄúCapturing Heterogeneity in Gene Expression Studies by Surrogate Variable Analysis‚Äù.
In: &lt;em&gt;PLoS Genetics&lt;/em&gt; 3.9 (2007), p.¬†e161.
DOI: &lt;a href=&#34;https://doi.org/10.1371/journal.pgen.0030161&#34;&gt;10.1371/journal.pgen.0030161&lt;/a&gt;.
URL: &lt;a href=&#34;https://doi.org/10.1371/journal.pgen.0030161&#34;&gt;https://doi.org/10.1371/journal.pgen.0030161&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Oles_2018&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Oles_2018&#34;&gt;[6]&lt;/a&gt;&lt;cite&gt;
A. Ole≈õ, M. Morgan and W. Huber.
&lt;em&gt;BiocStyle: Standard styles for vignettes and other Bioconductor documents&lt;/em&gt;.
R package version 2.10.0.
2018.
URL: &lt;a href=&#34;https://github.com/Bioconductor/BiocStyle&#34;&gt;https://github.com/Bioconductor/BiocStyle&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Rasetti_2014&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Rasetti_2014&#34;&gt;[7]&lt;/a&gt;&lt;cite&gt;
R. Rasetti, V. S. Mattay, M. G. White, F. Sambataro, et al.
‚ÄúAltered Hippocampal-Parahippocampal Function During Stimulus Encoding‚Äù.
In: &lt;em&gt;JAMA Psychiatry&lt;/em&gt; 71.3 (Mar.¬†2014), p.¬†236.
DOI: &lt;a href=&#34;https://doi.org/10.1001/jamapsychiatry.2013.3911&#34;&gt;10.1001/jamapsychiatry.2013.3911&lt;/a&gt;.
URL: &lt;a href=&#34;https://doi.org/10.1001/jamapsychiatry.2013.3911&#34;&gt;https://doi.org/10.1001/jamapsychiatry.2013.3911&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-bsc2015&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-bsc2015&#34;&gt;[8]&lt;/a&gt;&lt;cite&gt;
Schubert, O‚ÄôDonnell, Quan, Wendland, et al.
‚ÄúBrainSeq: Neurogenomics to Drive Novel Target Discovery for Neuropsychiatric Disorders‚Äù.
In: &lt;em&gt;Neuron&lt;/em&gt; (2015).
DOI: &lt;a href=&#34;https://doi.org/10.1016/j.neuron.2015.10.047&#34;&gt;10.1016/j.neuron.2015.10.047&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Xie_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Xie_2017&#34;&gt;[9]&lt;/a&gt;&lt;cite&gt;
Y. Xie, A. P. Hill and A. Thomas.
&lt;em&gt;blogdown: Creating Websites with R Markdown&lt;/em&gt;.
ISBN 978-0815363729.
Boca Raton, Florida: Chapman and Hall/CRC, 2017.
URL: &lt;a href=&#34;https://github.com/rstudio/blogdown&#34;&gt;https://github.com/rstudio/blogdown&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;reproducibility&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Reproducibility&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;## ‚îÄ Session info ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
##  setting  value                       
##  version  R version 3.5.1 (2018-07-02)
##  os       macOS Mojave 10.14.1        
##  system   x86_64, darwin15.6.0        
##  ui       X11                         
##  language (EN)                        
##  collate  en_US.UTF-8                 
##  ctype    en_US.UTF-8                 
##  tz       America/New_York            
##  date     2018-12-11                  
## 
## ‚îÄ Packages ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
##  package       * version date       lib source                            
##  assertthat      0.2.0   2017-04-11 [1] CRAN (R 3.5.0)                    
##  backports       1.1.2   2017-12-13 [1] CRAN (R 3.5.0)                    
##  bibtex          0.4.2   2017-06-30 [1] CRAN (R 3.5.0)                    
##  BiocManager     1.30.4  2018-11-13 [1] CRAN (R 3.5.0)                    
##  BiocStyle     * 2.10.0  2018-10-30 [1] Bioconductor                      
##  blogdown        0.9     2018-10-23 [1] CRAN (R 3.5.0)                    
##  bookdown        0.8     2018-12-03 [1] CRAN (R 3.5.0)                    
##  cli             1.0.1   2018-09-25 [1] CRAN (R 3.5.0)                    
##  colorout      * 1.2-0   2018-05-03 [1] Github (jalvesaq/colorout@c42088d)
##  crayon          1.3.4   2017-09-16 [1] CRAN (R 3.5.0)                    
##  curl            3.2     2018-03-28 [1] CRAN (R 3.5.0)                    
##  digest          0.6.18  2018-10-10 [1] CRAN (R 3.5.0)                    
##  evaluate        0.12    2018-10-09 [1] CRAN (R 3.5.0)                    
##  htmltools       0.3.6   2017-04-28 [1] CRAN (R 3.5.0)                    
##  httr            1.3.1   2017-08-20 [1] CRAN (R 3.5.0)                    
##  jsonlite        1.5     2017-06-01 [1] CRAN (R 3.5.0)                    
##  knitcitations * 1.0.8   2017-07-04 [1] CRAN (R 3.5.0)                    
##  knitr           1.20    2018-02-20 [1] CRAN (R 3.5.0)                    
##  lubridate       1.7.4   2018-04-11 [1] CRAN (R 3.5.0)                    
##  magrittr        1.5     2014-11-22 [1] CRAN (R 3.5.0)                    
##  plyr            1.8.4   2016-06-08 [1] CRAN (R 3.5.0)                    
##  R6              2.3.0   2018-10-04 [1] CRAN (R 3.5.0)                    
##  Rcpp            1.0.0   2018-11-07 [1] CRAN (R 3.5.0)                    
##  RefManageR      1.2.0   2018-04-25 [1] CRAN (R 3.5.0)                    
##  rmarkdown       1.10    2018-06-11 [1] CRAN (R 3.5.0)                    
##  rprojroot       1.3-2   2018-01-03 [1] CRAN (R 3.5.0)                    
##  sessioninfo   * 1.1.1   2018-11-05 [1] CRAN (R 3.5.0)                    
##  stringi         1.2.4   2018-07-20 [1] CRAN (R 3.5.0)                    
##  stringr         1.3.1   2018-05-10 [1] CRAN (R 3.5.0)                    
##  withr           2.1.2   2018-03-15 [1] CRAN (R 3.5.0)                    
##  xfun            0.4     2018-10-23 [1] CRAN (R 3.5.0)                    
##  xml2            1.2.0   2018-01-24 [1] CRAN (R 3.5.0)                    
##  yaml            2.2.0   2018-07-25 [1] CRAN (R 3.5.0)                    
## 
## [1] /Library/Frameworks/R.framework/Versions/3.5devel/Resources/library&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;As defined in &lt;a href=&#34;https://en.wikipedia.org/wiki/Confounding&#34;&gt;Wikipedia&lt;/a&gt;, confounding is: ‚ÄúIn statistics, a confounder (also confounding variable, confounding factor or lurking variable) is a variable that influences both the dependent variable and independent variable causing a spurious association. Confounding is a causal concept, and as such, cannot be described in terms of correlations or associations.‚Äù&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;‚Ü©&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;These are PCs computed on the genotype information from the individuals in this study. We use them to adjust for ethnicity in a more rigorous form than a categorical &lt;em&gt;race&lt;/em&gt; variable would be able to do.&lt;a href=&#34;#fnref2&#34; class=&#34;footnote-back&#34;&gt;‚Ü©&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Quick overview on the new Bioconductor 3.8 release</title>
      <link>/post/quick-overview-on-the-new-bioconductor-3-8-release/</link>
      <pubDate>Fri, 02 Nov 2018 00:00:00 +0000</pubDate>
      <guid>/post/quick-overview-on-the-new-bioconductor-3-8-release/</guid>
      <description>


&lt;p&gt;Every six months the Bioconductor project releases it‚Äôs new version of packages. This allows developers a time window to try out new methods and test them rigorously before releasing them to the community at large. It also means that this is an exciting time üéâ. With every release there are dozens&lt;a href=&#34;#fn1&#34; class=&#34;footnoteRef&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; of new software packages. Bioconductor version 3.8 was &lt;a href=&#34;https://www.bioconductor.org/news/bioc_3_8_release/&#34;&gt;just released&lt;/a&gt; on Halloween: October 31st, 2018. Thus, this is the perfect time to browse through their descriptions and find out what‚Äôs new that can be of use to your research.&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Bioconductor 3.8 *released*: 1649 software pkgs, 360 expt data pkgs, 941 annotation pkgs, and 23 workflows; 95 new software pkgs, updates and improvements to existing pkgs; compatible with R 3.5.0, supported on Linux, Windows, and Mac&lt;a href=&#34;https://t.co/QLsoxG7EXw&#34;&gt;https://t.co/QLsoxG7EXw&lt;/a&gt;&lt;a href=&#34;https://twitter.com/hashtag/bioconductor?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#bioconductor&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/rstats?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#rstats&lt;/a&gt;&lt;/p&gt;&amp;mdash; Sean Davis (@seandavis12) &lt;a href=&#34;https://twitter.com/seandavis12/status/1057725752165232641?ref_src=twsrc%5Etfw&#34;&gt;October 31, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;That‚Äôs exactly what our post today is about. We looked at the list of new packages as well as updates to find those that we think could be useful for us. That is, packages that we might want to explore further.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-11-02-quick-overview-on-the-new-bioconductor-3-8-release_files/Screen%20Shot%202018-11-02%20at%2010.48.18%20AM.png&#34; width=&#34;400&#34; /&gt;

&lt;/div&gt;
&lt;div id=&#34;affixcan&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;AffiXcan&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://bioconductor.org/packages/3.8/AffiXcan&#34;&gt;AffiXcan&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Impute a GReX (Genetically Regulated Expression) for a set of genes in a sample of individuals, using a method based on the Total Binding Affinity (TBA). Statistical models to impute GReX can be trained with a training dataset where the real total expression values are known.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Looks interesting from the name but the description is too vague.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;biocpkgtools&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;BiocPkgTools&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://bioconductor.org/packages/3.8/BiocPkgTools&#34;&gt;BiocPkgTools&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Bioconductor has a rich ecosystem of metadata around packages, usage, and build status. This package is a simple collection of functions to access that metadata from R. The goal is to expose metadata for data mining and value-added functionality such as package searching, text mining, and analytics on packages.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As Bioconductor developers this package sounds useful. Maybe it can be used to see if any of your packages is broken (errors, warnings) in BioC release or BioC devel.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;brainimager&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;brainImageR&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://bioconductor.org/packages/3.8/brainImageR&#34;&gt;brainImageR&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;BrainImageR is a package that provides the user with information of where in the human brain their gene set corresponds to. This is provided both as a continuous variable and as a easily-interpretable image. BrainImageR has additional functionality of identifying approximately when in developmental time that a gene expression dataset corresponds to. Both the spatial gene set enrichment and the developmental time point prediction are assessed in comparison to the Allen Brain Atlas reference data.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Sounds interesting since we work with brain data ourselves. We are curious about where the data comes from!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;buscorrect&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;BUScorrect&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://bioconductor.org/packages/3.8/BUScorrect&#34;&gt;BUScorrect&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;High-throughput experimental data are accumulating exponentially in public databases. However, mining valid scientific discoveries from these abundant resources is hampered by technical artifacts and inherent biological heterogeneity. The former are usually termed ‚Äúbatch effects,‚Äù and the latter is often modelled by ‚Äúsubtypes.‚Äù The R package BUScorrect fits a Bayesian hierarchical model, the Batch-effects-correction-with-Unknown-Subtypes model (BUS), to correct batch effects in the presence of unknown subtypes. BUS is capable of (a) correcting batch effects explicitly, (b) grouping samples that share similar characteristics into subtypes, (c) identifying features that distinguish subtypes, and (d) enjoying a linear-order computation complexity.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Hm‚Ä¶ maybe this can be used with data from &lt;em&gt;&lt;a href=&#34;https://bioconductor.org/packages/3.8/recount&#34;&gt;recount&lt;/a&gt;&lt;/em&gt;. We also have to work sometimes with data from multiple labs.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;consensusde&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;consensusDE&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://bioconductor.org/packages/3.8/consensusDE&#34;&gt;consensusDE&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This package allows users to perform DE analysis using multiple algorithms. It seeks consensus from multiple methods. Currently it supports ‚ÄúVoom‚Äù, ‚ÄúEdgeR‚Äù and ‚ÄúDESeq‚Äù, but can be easily extended. It uses RUV-seq (optional) to remove batch effects.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Depending how flexible this new package is, it could be useful for saving time. If it‚Äôs not flexible we won‚Äôt really use it.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;enhancedvolcano&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;EnhancedVolcano&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://bioconductor.org/packages/3.8/EnhancedVolcano&#34;&gt;EnhancedVolcano&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Volcano plots represent a useful way to visualise the results of differential expression analyses. Here, we present a highly-configurable function that produces publication-ready volcano plots. EnhancedVolcano will attempt to fit as many transcript names in the plot window as possible, thus avoiding ‚Äòclogging‚Äô up the plot with labels that could not otherwise have been read.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Enhanced volcano plots? Cool! We use volcano plots all the time, so they sold us with the name. Plus, who doesn‚Äôt want &lt;em&gt;publication ready plots&lt;/em&gt;?&lt;a href=&#34;#fn2&#34; class=&#34;footnoteRef&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;excluster&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;ExCluster&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://bioconductor.org/packages/3.8/ExCluster&#34;&gt;ExCluster&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ExCluster flattens Ensembl and GENCODE GTF files into GFF files, which are used to count reads per non-overlapping exon bin from BAM files. This read counting is done using the function featureCounts from the package Rsubread. Library sizes are normalized across all biological replicates, and ExCluster then compares two different conditions to detect signifcantly differentially spliced genes. This process requires at least two independent biological repliates per condition, and ExCluster accepts only exactly two conditions at a time. ExCluster ultimately produces false discovery rates (FDRs) per gene, which are used to detect significance. Exon log2 fold change (log2FC) means and variances may be plotted for each significantly differentially spliced gene, which helps scientists develop hypothesis and target differential splicing events for RT-qPCR validation in the wet lab.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Hm‚Ä¶ this one could be useful for some future work related to &lt;em&gt;&lt;a href=&#34;https://bioconductor.org/packages/3.8/recount&#34;&gt;recount&lt;/a&gt;&lt;/em&gt;. Specially the part about simplifying a GTF file.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;maser&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;maser&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://bioconductor.org/packages/3.8/maser&#34;&gt;maser&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This package provides functionalities for analysis, annotation and visualizaton of alternative splicing events.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Visualization of splicing events is something that can be useful. But the description is too vague and will require more investigation.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;mirsm&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;miRSM&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://bioconductor.org/packages/3.8/miRSM&#34;&gt;miRSM&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The package aims to identify miRNA sponge modules by integrating expression data and miRNA-target binding information. It provides several functions to study miRNA sponge modules, including popular methods for inferring gene modules (candidate miRNA sponge modules), and a function to identify miRNA sponge modules, as well as a function to conduct functional analysis of miRNA sponge modules.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;I‚Äôm still reading the description&lt;/em&gt;, hold on! We‚Äôll look into this more!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;outrider&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;OUTRIDER&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://bioconductor.org/packages/3.8/OUTRIDER&#34;&gt;OUTRIDER&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Identification of aberrent gene expression in RNA-seq data. Read count expectations are modeled by an autoencoder to control for confounders in the data. Given these expectations, the RNA-seq read counts are assumed to follow a negative binomial distribution with a gene-specific dispersion. Outliers are then identified as read counts that significantly deviate from this distribution. Further OUTRIDER provides useful plotting function to analyze and visualize the results.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We‚Äôd be interested in testing the performance of OUTRIDER in our already analyzed datasets.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;primirtss&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;primirTSS&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://bioconductor.org/packages/3.8/primirTSS&#34;&gt;primirTSS&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A fast, convenient tool to identify the TSSs of miRNAs by integrating the data of H3K4me3 and Pol II as well as combining the conservation level and sequence feature, provided within both command-line and graphical interfaces, which achieves a better performance than the previous non-cell-specific methods on miRNA TSSs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We don‚Äôt have this kind of data (Pol II ChIP-seq) but it looks useful if you do have it.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;timeseriesexperiment&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;TimeSeriesExperiment&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://bioconductor.org/packages/3.8/TimeSeriesExperiment&#34;&gt;TimeSeriesExperiment&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Visualization and analysis toolbox for short time course data which includes dimensionality reduction, clustering, two-sample differential expression testing and gene ranking techniques. The package also provides methods for retrieving enriched pathways.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We have time series data and could maybe try this package out for clustering and pathway analyses. We are not sure why it matters that the time course is &lt;em&gt;short&lt;/em&gt;, what does this really mean? Could they mean that the time course is complete (no dropouts) unlike a longitudinal time course project? From the vignette: they are talking about small number of time points: that is, statistical methods for this scenario.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;trna&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;tRNA&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://bioconductor.org/packages/3.8/tRNA&#34;&gt;tRNA&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The tRNA package allows tRNA sequences and structures to be accessed and used for subsetting. In addition, it provides visualization tools to compare feature parameters of multiple tRNA sets and correlate them to additional data. The tRNA package uses GRanges objects as inputs requiring only few additional column data sets.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Wow! tRNAs!? Let‚Äôs look into this!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;tximeta&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;tximeta&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://bioconductor.org/packages/3.8/tximeta&#34;&gt;tximeta&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Transcript quantification import from Salmon with automatic population of metadata and transcript ranges. Filtered, combined, or de novo transcriptomes can be linked to the appropriate sources with linkedTxomes and shared for reproducible analyses.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Just look at this great video tweet by Michael Love!&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;.&lt;a href=&#34;https://twitter.com/Bioconductor?ref_src=twsrc%5Etfw&#34;&gt;@Bioconductor&lt;/a&gt; 3.8 is released, which means so is tximeta! this idea came up more than 2 years ago, to auto-populate metadata for Salmon quant directories. the goal is no more guessing for the data you quantified earlier in a project, or from public archive. here&amp;#39;s a demo &lt;a href=&#34;https://t.co/6r1yoNcIyj&#34;&gt;pic.twitter.com/6r1yoNcIyj&lt;/a&gt;&lt;/p&gt;&amp;mdash; Michael Love (@mikelove) &lt;a href=&#34;https://twitter.com/mikelove/status/1057948391261511680?ref_src=twsrc%5Etfw&#34;&gt;November 1, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;/div&gt;
&lt;div id=&#34;ularcirc&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Ularcirc&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://bioconductor.org/packages/3.8/Ularcirc&#34;&gt;Ularcirc&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ularcirc reads in STAR aligned splice junction files and provides visualisation and analysis tools for splicing analysis. Users can assess backsplice junctions and forward canonical junctions.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We are interested in exploring its visualization tools and if they are specific STAR output files or if this package works with a wider set of aligners.&lt;/p&gt;
&lt;p&gt;We also appreciate the name of this package!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;wrapping-up&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Wrapping up&lt;/h3&gt;
&lt;p&gt;We liked how many of the new software packages emphasized visualization! The package with the best name was &lt;em&gt;&lt;a href=&#34;https://bioconductor.org/packages/3.8/COCOA&#34;&gt;COCOA&lt;/a&gt;&lt;/em&gt; hehe.&lt;/p&gt;
&lt;p&gt;We hope that you are as excited as we are about trying out the new &lt;a href=&#34;https://www.bioconductor.org/news/bioc_3_8_release/&#34;&gt;Bioconductor 3.8 packages&lt;/a&gt;! If we implement any of these packages into our analysis routine we &lt;em&gt;want&lt;/em&gt; to come back and write a blog post about them&lt;a href=&#34;#fn3&#34; class=&#34;footnoteRef&#34; id=&#34;fnref3&#34;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;acknowledgements&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This blog post was made possible thanks to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://bioconductor.org/packages/3.8/BiocStyle&#34;&gt;BiocStyle&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Oles_2018&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/Bioconductor/BiocStyle&#39;&gt;Ole≈õ, Morgan, and Huber, 2018&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Xie_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/rstudio/blogdown&#39;&gt;Xie, Hill, and Thomas, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;knitcitations&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Boettiger_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=knitcitations&#39;&gt;Boettiger, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=sessioninfo&#34;&gt;sessioninfo&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Csardi_2018&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/r-lib/sessioninfo#readme&#39;&gt;Cs√°rdi, core, Wickham, Chang, et al., 2018&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and all the Bioconductor package developers and maintainers!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Boettiger_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Boettiger_2017&#34;&gt;[1]&lt;/a&gt;&lt;cite&gt; C. Boettiger. &lt;em&gt;knitcitations: Citations for ‚ÄòKnitr‚Äô Markdown Files&lt;/em&gt;. R package version 1.0.8. 2017. URL: &lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;https://CRAN.R-project.org/package=knitcitations&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Csardi_2018&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Csardi_2018&#34;&gt;[2]&lt;/a&gt;&lt;cite&gt; G. Cs√°rdi, R. core, H. Wickham, W. Chang, et al. &lt;em&gt;sessioninfo: R Session Information&lt;/em&gt;. R package version 1.1.0.9000. 2018. URL: &lt;a href=&#34;https://github.com/r-lib/sessioninfo#readme&#34;&gt;https://github.com/r-lib/sessioninfo#readme&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Oles_2018&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Oles_2018&#34;&gt;[3]&lt;/a&gt;&lt;cite&gt; A. Ole≈õ, M. Morgan and W. Huber. &lt;em&gt;BiocStyle: Standard styles for vignettes and other Bioconductor documents&lt;/em&gt;. R package version 2.10.0. 2018. URL: &lt;a href=&#34;https://github.com/Bioconductor/BiocStyle&#34;&gt;https://github.com/Bioconductor/BiocStyle&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Xie_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Xie_2017&#34;&gt;[4]&lt;/a&gt;&lt;cite&gt; Y. Xie, A. P. Hill and A. Thomas. &lt;em&gt;blogdown: Creating Websites with R Markdown&lt;/em&gt;. ISBN 978-0815363729. Boca Raton, Florida: Chapman and Hall/CRC, 2017. URL: &lt;a href=&#34;https://github.com/rstudio/blogdown&#34;&gt;https://github.com/rstudio/blogdown&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;reproducibility&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Reproducibility&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;## ‚îÄ Session info ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
##  setting  value                                      
##  version  R version 3.5.1 Patched (2018-10-14 r75439)
##  os       macOS Mojave 10.14.1                       
##  system   x86_64, darwin15.6.0                       
##  ui       X11                                        
##  language (EN)                                       
##  collate  en_US.UTF-8                                
##  ctype    en_US.UTF-8                                
##  tz       America/New_York                           
##  date     2018-11-02                                 
## 
## ‚îÄ Packages ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
##  package       * version    date       lib source                            
##  assertthat      0.2.0      2017-04-11 [1] CRAN (R 3.5.0)                    
##  backports       1.1.2      2017-12-13 [1] CRAN (R 3.5.0)                    
##  bibtex          0.4.2      2017-06-30 [1] CRAN (R 3.5.0)                    
##  BiocManager     1.30.3     2018-10-10 [1] CRAN (R 3.5.0)                    
##  BiocStyle     * 2.10.0     2018-10-30 [1] Bioconductor                      
##  blogdown        0.9        2018-10-23 [1] CRAN (R 3.5.0)                    
##  bookdown        0.7        2018-02-18 [1] CRAN (R 3.5.0)                    
##  cli             1.0.1      2018-09-25 [1] CRAN (R 3.5.0)                    
##  colorout      * 1.2-0      2018-05-03 [1] Github (jalvesaq/colorout@c42088d)
##  crayon          1.3.4      2017-09-16 [1] CRAN (R 3.5.0)                    
##  digest          0.6.18     2018-10-10 [1] CRAN (R 3.5.0)                    
##  evaluate        0.12       2018-10-09 [1] CRAN (R 3.5.0)                    
##  htmltools       0.3.6      2017-04-28 [1] CRAN (R 3.5.0)                    
##  httr            1.3.1      2017-08-20 [1] CRAN (R 3.5.0)                    
##  jsonlite        1.5        2017-06-01 [1] CRAN (R 3.5.0)                    
##  knitcitations * 1.0.8      2017-07-04 [1] CRAN (R 3.5.0)                    
##  knitr           1.20       2018-02-20 [1] CRAN (R 3.5.0)                    
##  lubridate       1.7.4      2018-04-11 [1] CRAN (R 3.5.0)                    
##  magrittr        1.5        2014-11-22 [1] CRAN (R 3.5.0)                    
##  plyr            1.8.4      2016-06-08 [1] CRAN (R 3.5.0)                    
##  R6              2.3.0      2018-10-04 [1] CRAN (R 3.5.0)                    
##  Rcpp            0.12.19    2018-10-01 [1] CRAN (R 3.5.1)                    
##  RefManageR      1.2.0      2018-04-25 [1] CRAN (R 3.5.0)                    
##  rmarkdown       1.10       2018-06-11 [1] CRAN (R 3.5.0)                    
##  rprojroot       1.3-2      2018-01-03 [1] CRAN (R 3.5.0)                    
##  sessioninfo   * 1.1.0.9000 2018-10-02 [1] Github (r-lib/sessioninfo@4f91fad)
##  stringi         1.2.4      2018-07-20 [1] CRAN (R 3.5.0)                    
##  stringr         1.3.1      2018-05-10 [1] CRAN (R 3.5.0)                    
##  withr           2.1.2      2018-03-15 [1] CRAN (R 3.5.0)                    
##  xfun            0.4        2018-10-23 [1] CRAN (R 3.5.0)                    
##  xml2            1.2.0      2018-01-24 [1] CRAN (R 3.5.0)                    
##  yaml            2.2.0      2018-07-25 [1] CRAN (R 3.5.0)                    
## 
## [1] /Library/Frameworks/R.framework/Versions/3.5devel/Resources/library&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;Soon it‚Äôll be in the hundreds! Wow!&lt;a href=&#34;#fnref1&#34;&gt;‚Ü©&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;We‚Äôll see if that‚Äôs true hehe.&lt;a href=&#34;#fnref2&#34;&gt;‚Ü©&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn3&#34;&gt;&lt;p&gt;Time permitting :P&lt;a href=&#34;#fnref3&#34;&gt;‚Ü©&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>‚ÄúDemystifying Data Science‚Äù remote notes</title>
      <link>/post/demystifying-data-science-remote-notes/</link>
      <pubDate>Wed, 24 Oct 2018 00:00:00 +0000</pubDate>
      <guid>/post/demystifying-data-science-remote-notes/</guid>
      <description>


&lt;p&gt;To carry on our momentum from a few weeks ago from our &lt;a href=&#34;http://research.libd.org/rstatsclub/2018/07/13/libd-rstats-club-remote-user-2018-notes&#34;&gt;useR!2018 remote notes blog post&lt;/a&gt;, this time we will be summarizing the &lt;a href=&#34;https://www.thisismetis.com/demystifying-data-science&#34;&gt;Demystifying Data Sience 2018&lt;/a&gt; conference for which you can register for free. We are just following &lt;a href=&#34;https://twitter.com/drob&#34;&gt;David Robinson‚Äôs&lt;/a&gt; advice to blog all the time!&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;So what should you blog about? &lt;a href=&#34;https://twitter.com/drob?ref_src=twsrc%5Etfw&#34;&gt;@drob&lt;/a&gt; says no matter what stage you&amp;#39;re at in your career, you have a lot to share. Analyze a data set; analyze data from your work; analyze data from current events, &amp;amp; more. Also, take him up on his awesome offer featured below! &lt;a href=&#34;https://twitter.com/hashtag/DemystifyDS?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#DemystifyDS&lt;/a&gt; &lt;a href=&#34;https://t.co/RJOpNGJy7f&#34;&gt;pic.twitter.com/RJOpNGJy7f&lt;/a&gt;&lt;/p&gt;&amp;mdash; Metis (@thisismetis) &lt;a href=&#34;https://twitter.com/thisismetis/status/1021767760949469185?ref_src=twsrc%5Etfw&#34;&gt;July 24, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;conference-overview&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Conference overview&lt;/h3&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-10-24-demystifying-data-science-remote-notes_files/2018-10-20%2018.40.37.jpg&#34; width=&#34;600&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;We got interested in this conference&lt;a href=&#34;#fn1&#34; class=&#34;footnoteRef&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; thanks to tweets like these ones that highlight that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;data scientists are young!&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Data scientists are young! Most have 0-5 yrs experience. This is Important to consider when writing job descriptions. Doesn&amp;#39;t make a ton of sense to focus on finding someone with 15 years of experience in certain areas ‚Äì they likely don&amp;#39;t exist. - Naomi Keller, &lt;a href=&#34;https://twitter.com/hashtag/DemystifyDS?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#DemystifyDS&lt;/a&gt; &lt;a href=&#34;https://t.co/iqhLzFIdLd&#34;&gt;pic.twitter.com/iqhLzFIdLd&lt;/a&gt;&lt;/p&gt;&amp;mdash; Metis (@thisismetis) &lt;a href=&#34;https://twitter.com/thisismetis/status/1022197581361889280?ref_src=twsrc%5Etfw&#34;&gt;July 25, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;ul&gt;
&lt;li&gt;specialists are more in demand!&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;In the past 6-9 months, says Noami Keller, &amp;quot;specialists have become more and more the norm&amp;quot; in terms of who&amp;#39;s getting hired. As data science/analytics has matured, the need for the all-knowing &amp;quot;unicorn&amp;quot; has shifted. Specialists are now in demand. &lt;a href=&#34;https://twitter.com/hashtag/DemystifyDS?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#DemystifyDS&lt;/a&gt;&lt;/p&gt;&amp;mdash; Metis (@thisismetis) &lt;a href=&#34;https://twitter.com/thisismetis/status/1022198588368150529?ref_src=twsrc%5Etfw&#34;&gt;July 25, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;Hopefully you find these tweets interesting as well. We can find more about the conference on Twitter using the &lt;a href=&#34;https://twitter.com/search?q=%23DemystifyDS&amp;amp;src=typd&#34;&gt;DemystifyDS&lt;/a&gt; hashtag which also covers previous conferences. We see that the official event account &lt;a href=&#34;https://twitter.com/thisismetis&#34;&gt;thisismetis&lt;/a&gt; really went all out with branded summary tweets! You can find recordings of all the talks and there were many interesting titles. So we decided to spend 2 sessions and watched 4 full talks.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://youtu.be/NGMFq5MQcOI&#34;&gt;Navigating the Maze of the Data Science Job Hunt&lt;/a&gt; by &lt;a href=&#34;https://www.linkedin.com/in/markmeloon/&#34;&gt;Mark Meloon&lt;/a&gt;, Data Scientist, ServiceNow.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://youtu.be/M_dc-XzApGA&#34;&gt;How to Get a Foothold in the Field of Data Science&lt;/a&gt; by &lt;a href=&#34;https://www.linkedin.com/in/brohrer/&#34;&gt;Brandon Rohrer&lt;/a&gt;, Data Scientist, Facebook.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://youtu.be/KI-1GA5Zotc&#34;&gt;Data Visualization: How to Overcome Common Challenges&lt;/a&gt; by &lt;a href=&#34;https://www.linkedin.com/in/kate-strachnyi-data/&#34;&gt;Kate Strachnyi&lt;/a&gt;, Manager and Data Visualization Specialist, Deloitte.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://youtu.be/nF315csYx3U&#34;&gt;The Art of &amp;amp; Science of Creating a Actionable Data Story&lt;/a&gt; by &lt;a href=&#34;https://www.linkedin.com/in/micoyuk/&#34;&gt;Mico Yuk&lt;/a&gt;, Chief Executive Officer, BI-Brainz Group | Author, Data Visualization for Dummies &amp;amp; More.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;talks-summaries&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Talks summaries&lt;/h3&gt;
&lt;div id=&#34;mark-meloon-markmeloon&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Mark Meloon &lt;a href=&#34;https://twitter.com/MarkMeloon&#34;&gt;&lt;code&gt;MarkMeloon&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;In the &lt;a href=&#34;https://youtu.be/NGMFq5MQcOI&#34;&gt;first talk&lt;/a&gt;, by &lt;a href=&#34;https://www.linkedin.com/in/markmeloon/&#34;&gt;Mark Meloon&lt;/a&gt;, we learned about the power of &lt;a href=&#34;https://www.linkedin.com/&#34;&gt;LinkedIn&lt;/a&gt; for networking and finding your next job. He suggested posting regularly on LinkedIn as your feed will show up more on others‚Äô, allowing you to connect with more people. If you write something about content described by someone you especially admire or hope to work for, you are more likely to catch their attention. It‚Äôs best to not ask people directly for a job, but to contact them first to discuss their work or to ask for advice. He also suggested adding key data analysis techniques to your profile. He suggested that describing the techniques with specificity would be best, instead of using more vague terms.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;brandon-rohrer-_brohrer_&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Brandon Rohrer &lt;a href=&#34;https://twitter.com/_brohrer_&#34;&gt;&lt;code&gt;_brohrer_&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;In the &lt;a href=&#34;https://youtu.be/M_dc-XzApGA&#34;&gt;second talk&lt;/a&gt;, by &lt;a href=&#34;https://www.linkedin.com/in/brohrer/&#34;&gt;Brandon Rohrer&lt;/a&gt;, we learned about the different data science careers that are possible.&lt;/p&gt;
&lt;p&gt;The major fields are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Data Analysis - statistics and interpretation&lt;/li&gt;
&lt;li&gt;Data Modeling - machine learning, prediction&lt;/li&gt;
&lt;li&gt;Data Engineering - automation, databases, programming&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The major roles/archetypes are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Generalist - decent at all three fields&lt;/li&gt;
&lt;li&gt;Detective - master of analysis&lt;/li&gt;
&lt;li&gt;Oracle - master of modeling&lt;/li&gt;
&lt;li&gt;Maker - master of engineering&lt;/li&gt;
&lt;li&gt;Unicorn - master of all!!!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;He ended by mentioning that job postings using the term ‚Äúdata science‚Äù often vary widely, and he recommends ignoring the posted job titles and de-emphasizing the specific tools listed, and instead focus on the &lt;em&gt;skills&lt;/em&gt; that are being asked for to get a real sense of the job and how you would perform.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;kate-strachnyi-storybydata&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Kate Strachnyi &lt;a href=&#34;https://twitter.com/StorybyData&#34;&gt;&lt;code&gt;StorybyData&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;In the &lt;a href=&#34;https://youtu.be/KI-1GA5Zotc&#34;&gt;third talk&lt;/a&gt; by &lt;a href=&#34;https://www.linkedin.com/in/kate-strachnyi-data/&#34;&gt;Kate Strachnyi&lt;/a&gt; we learned about how to overcome challenges in data visualization. She described data visualizations as ‚ÄúInformation Maps‚Äù that should ideally be:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Informative&lt;/li&gt;
&lt;li&gt;Efficient&lt;/li&gt;
&lt;li&gt;Appealing&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Common issues were:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Wrong chart choice - some charts will be much more effective&lt;/li&gt;
&lt;li&gt;Improper use of color - use to tell a story in a useful way - not just to be decorative&lt;/li&gt;
&lt;li&gt;Information overload - don‚Äôt try to do too much at once - loses impact&lt;/li&gt;
&lt;li&gt;Clutter - leave out the nonessential&lt;/li&gt;
&lt;li&gt;Not speaking the same language - know your audience (jargon/lingo)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;She also noted that we should be careful about color schemes. She suggested that there are websites to check how your figures would appear to others with colorblindness.&lt;/p&gt;
&lt;p&gt;She mostly uses tableau in her work and suggested that it makes a nice free option for data visualization.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;mico-yuk-micoyuk&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Mico Yuk &lt;a href=&#34;https://twitter.com/micoyuk&#34;&gt;&lt;code&gt;micoyuk&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;In the &lt;a href=&#34;https://youtu.be/nF315csYx3U&#34;&gt;fourth and last talk&lt;/a&gt; by &lt;a href=&#34;https://www.linkedin.com/in/micoyuk/&#34;&gt;Mico Yuk&lt;/a&gt; we learned about storyboards and remembering that our data analyses are always to try to tell story about the data. She pointed out that the human mind is wired visually, that we retain about 80% of what we see, 20% of what we read, and 10% of what we hear. She suggested that we create &lt;a href=&#34;https://en.wikipedia.org/wiki/SMART_criteria&#34;&gt;SMART goals&lt;/a&gt; (she credits Peter Drucker) to make sure that our work is driven efficiently in the correct direction. She suggested that communicating our work in a SMART goal-based framework based would concisely and clearly communicate the purpose and results of work.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;our-impressions&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Our impressions&lt;/h3&gt;
&lt;p&gt;Given our diversity of impressions we thought it would be more useful to share our impressions. Without further ado, here they are.&lt;/p&gt;
&lt;div id=&#34;p1&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;P1&lt;/h4&gt;
&lt;p&gt;I found &lt;a href=&#34;https://www.linkedin.com/in/markmeloon/&#34;&gt;Mark Meloon&lt;/a&gt;‚Äôs talk very useful. I have actually started posting more regularly on my own LinkedIn account and it has indeed captured more attention from others. In fact, I have even received emails from companies interested in hiring someone with my expertise. &lt;a href=&#34;https://www.linkedin.com/in/brohrer/&#34;&gt;Brandon Rohrer&lt;/a&gt; clarified some trends that I had noticed about data science. I identify with the ‚ÄúDetective‚Äù role and I see that while I may aspire at times (unsuccessfully) to be a ‚ÄúGeneralist - or someday a Unicorn‚Äù, my experience as a Detective is very worthwhile as well. I love data visualization and I loved &lt;a href=&#34;https://www.linkedin.com/in/kate-strachnyi-data/&#34;&gt;Kate Strachnyi&lt;/a&gt;‚Äôs talk. I found her tips to be very clear reminders for how to continue with my own visualizations. The talk by &lt;a href=&#34;https://www.linkedin.com/in/micoyuk/&#34;&gt;Mico Yuk&lt;/a&gt; was a good reminder to keep overall goals in mind as you work and to regularly take a step back and assess if your work is really proceeding in the direction and at the rate that you planned.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;p2&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;P2&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/in/markmeloon/&#34;&gt;Mark Meloon‚Äôs&lt;/a&gt; talk emphasized the use of LinkedIn for networking and job hunting. He interviews job candidates for his company so his viewpoint was a direct reflection of someone who uses the website to find and/or assess job applicants. I liked that he gave both good and bad examples of actual profiles and messages he‚Äôs seen on LinkedIn. He also noted that, to get a foot in the door of a job posting, you don‚Äôt need to directly know the hiring manager, but reaching out to anyone you know in the company, even if it‚Äôs a second- or third-level connection (i.e.¬†friend of a friend), is better than nothing, as long as you do it right. I do wish he had spoken about other social media platforms, such as Twitter, and how they compare to LinkedIn for networking.&lt;/p&gt;
&lt;p&gt;I found the breakdown of skills and job types by &lt;a href=&#34;https://www.linkedin.com/in/brohrer/&#34;&gt;Brandon Rohrer&lt;/a&gt; to be really instructive. It made me reflect on my own interests and skills in a broken down way, and I think it will help to have this framework for both future job hunts and interviews. I particularly like that he emphasized it‚Äôs okay/normal to not be great at &lt;em&gt;everything&lt;/em&gt; related to data science - it‚Äôs a broad field - and that people with a narrower set of expertise are still needed and valuable for specific jobs. His talk also gave me some ideas of skills I may be able to work on and add to my portfolio to round out my skill-set. I would recommend this talk to anyone in the data science or analysis fields that is looking for clarity or definition in their current job or career path!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;p3&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;P3&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/in/kate-strachnyi-data/&#34;&gt;Kate Strachnyi&lt;/a&gt;‚Äôs talk was a great reminder of the importance of keeping your audience in mind when presenting information and making sure that visualizations are not just accurate but also easily understood. Her list of common issues was a helpful summary of guidelines I‚Äôve heard before, and I appreciated the examples she used. In particular, I think I often run into the challenge of ‚Äúinformation overload‚Äù when I present informally to others ‚Äì I need to remember that it‚Äôs not enough for the information to be there, it also needs to be arranged in way that lets people understand it quickly.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/in/micoyuk/&#34;&gt;Mico Yuk&lt;/a&gt;‚Äôs talk was probably more applicable to someone working in a corporate field rather than an academic one, but the main idea of framing data as a story and keeping the goal in mind was still relevant to me. Some of the suggestions, like asking the ‚Äúright questions‚Äù of your user, could easily be reworked for research (even if the user is just be me). I haven‚Äôt worked with a storyboard before, but it would be interesting to see if that approach could also apply to planning out analyses for a research paper ‚Äì the goal might be the question we‚Äôre asking, KPI the metrics we‚Äôre using to answer that question, trends the conclusions we can draw, and actions the next direction of analysis. The translation from business to academic research probably needs some tweaking, but I might try this approach on a future project to help with organization and keeping the bigger story in mind.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;p4&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;P4&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/in/markmeloon/&#34;&gt;Mark Meloon&lt;/a&gt;‚Äôs talk reminded me that many use &lt;a href=&#34;https://www.linkedin.com/&#34;&gt;LinkedIn&lt;/a&gt; for networking which hasn‚Äôt been that common in my experience in academia. This is something I would need to keep in mind for advising students in the future that are either unsure of staying in academia or want to go to industry. I do brush up my profile once in a while, and parts of Mark‚Äôs advice applies also to CVs (writing them and sending them via email): basically, be genuine and respectful of others.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/in/brohrer/&#34;&gt;Brandon Rohrer&lt;/a&gt; verbalized distinctions in data science roles that I had either heard of before or had some intuition behind them, but hadn‚Äôt actually spent the time to see them as clearly defined as Brandon did. I was also quite curious of everyone‚Äôs reaction to his talk and how each of us labelled ourselves. For example, maybe &lt;em&gt;X&lt;/em&gt; thought &lt;em&gt;Z&lt;/em&gt; was a &lt;em&gt;unicorn&lt;/em&gt;, but &lt;em&gt;Z&lt;/em&gt; perceived themselves as a &lt;em&gt;beginner&lt;/em&gt;. In my case, I think that it‚Äôs probably too ambitious to get to the unicorn level. I‚Äôm simply aiming to get to (or am at) a level where I can understand most of the terms and conversations, but then go back and research a bit more if I need to as preparation for a follow up meeting. I guess that I‚Äôm a generalist.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/in/kate-strachnyi-data/&#34;&gt;Kate Strachnyi&lt;/a&gt;‚Äôs key points are I guess topics that I‚Äôve heard before and loosely follow. I think that her audience is different from mine as she seems to create visualizations that are used in many company presentations. I‚Äôm frequently under pressure to get a simple version of a plot done where we can see the trend in the data and only work on polishing a few selected plots that get highlighted in a research paper. Though I guess that I could/should spend a bit more time thinking about the plot design and colors before I make the next one. For that, I would like to learn more about the &lt;code&gt;paletteer&lt;/code&gt; R package:&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;ICYMI, üé® With more palettes than a tweet could possibly contain‚Ä¶&lt;br&gt;&amp;quot;paletteer: Collection of most color palettes in a single R üì¶&amp;quot; üë®‚Äçüé® &lt;a href=&#34;https://twitter.com/Emil_Hvitfeldt?ref_src=twsrc%5Etfw&#34;&gt;@Emil_Hvitfeldt&lt;/a&gt; &lt;a href=&#34;https://t.co/7kKSyohQN4&#34;&gt;https://t.co/7kKSyohQN4&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/rstats?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#rstats&lt;/a&gt; &lt;a href=&#34;https://t.co/zibFhW03EU&#34;&gt;pic.twitter.com/zibFhW03EU&lt;/a&gt;&lt;/p&gt;&amp;mdash; Mara Averick (@dataandme) &lt;a href=&#34;https://twitter.com/dataandme/status/1021828886160654336?ref_src=twsrc%5Etfw&#34;&gt;July 24, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/in/micoyuk/&#34;&gt;Mico Yuk&lt;/a&gt; talked about SMART goals. Hmm‚Ä¶ I don‚Äôt remember what that stood for, so I clearly would need to re-watch her talk. After skimming through it again I guess that I can only say that it was hard for me to relate to her talk because I haven‚Äôt been in a project that involved all planning steps that she talked about. While it wasn‚Äôt for me, it might be useful to you, so give it a try!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;wrapping-up&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Wrapping up&lt;/h3&gt;
&lt;p&gt;Thanks for getting this far. We are curious to hear what where your own impressions in these and other talks from the &lt;a href=&#34;https://www.thisismetis.com/demystifying-data-science&#34;&gt;Demystifying Data Sience 2018&lt;/a&gt;: they have &lt;a href=&#34;https://www.youtube.com/channel/UCpbU53RP134D9qy9GzKBAXA/videos&#34;&gt;28 recorded talks&lt;/a&gt; in total! We also hope that you enjoyed reading about our different perspectives.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;acknowledgements&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;We are grateful to everyone that tweeted about the conference and shared their materials online! We are also happy that &lt;em&gt;Metis&lt;/em&gt; got interested in our summary blog post:&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;We would love to see a copy of the blog upon completion. Send me a note at grace@thisismetis.com - thanks!&lt;/p&gt;&amp;mdash; Metis (@thisismetis) &lt;a href=&#34;https://twitter.com/thisismetis/status/1022196313499295745?ref_src=twsrc%5Etfw&#34;&gt;July 25, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;This blog post was made possible thanks to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Xie_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/rstudio/blogdown&#39;&gt;Xie, Hill, and Thomas, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;knitcitations&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Boettiger_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=knitcitations&#39;&gt;Boettiger, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=sessioninfo&#34;&gt;sessioninfo&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Csardi_2018&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/r-lib/sessioninfo#readme&#39;&gt;Cs√°rdi, core, Wickham, Chang, et al., 2018&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Boettiger_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Boettiger_2017&#34;&gt;[1]&lt;/a&gt;&lt;cite&gt; C. Boettiger. &lt;em&gt;knitcitations: Citations for ‚ÄòKnitr‚Äô Markdown Files&lt;/em&gt;. R package version 1.0.8. 2017. URL: &lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;https://CRAN.R-project.org/package=knitcitations&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Csardi_2018&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Csardi_2018&#34;&gt;[2]&lt;/a&gt;&lt;cite&gt; G. Cs√°rdi, R. core, H. Wickham, W. Chang, et al. &lt;em&gt;sessioninfo: R Session Information&lt;/em&gt;. R package version 1.1.0.9000. 2018. URL: &lt;a href=&#34;https://github.com/r-lib/sessioninfo#readme&#34;&gt;https://github.com/r-lib/sessioninfo#readme&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Xie_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Xie_2017&#34;&gt;[3]&lt;/a&gt;&lt;cite&gt; Y. Xie, A. P. Hill and A. Thomas. &lt;em&gt;blogdown: Creating Websites with R Markdown&lt;/em&gt;. ISBN 978-0815363729. Boca Raton, Florida: Chapman and Hall/CRC, 2017. URL: &lt;a href=&#34;https://github.com/rstudio/blogdown&#34;&gt;https://github.com/rstudio/blogdown&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;reproducibility&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Reproducibility&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;## ‚îÄ Session info ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
##  setting  value                                      
##  version  R version 3.5.1 Patched (2018-10-14 r75439)
##  os       macOS High Sierra 10.13.6                  
##  system   x86_64, darwin15.6.0                       
##  ui       X11                                        
##  language (EN)                                       
##  collate  en_US.UTF-8                                
##  ctype    en_US.UTF-8                                
##  tz       America/New_York                           
##  date     2018-10-24                                 
## 
## ‚îÄ Packages ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
##  package       * version    date       lib source                            
##  assertthat      0.2.0      2017-04-11 [1] CRAN (R 3.5.0)                    
##  backports       1.1.2      2017-12-13 [1] CRAN (R 3.5.0)                    
##  bibtex          0.4.2      2017-06-30 [1] CRAN (R 3.5.0)                    
##  BiocStyle     * 2.8.2      2018-05-30 [1] Bioconductor                      
##  blogdown        0.8        2018-07-15 [1] CRAN (R 3.5.0)                    
##  bookdown        0.7        2018-02-18 [1] CRAN (R 3.5.0)                    
##  cli             1.0.1      2018-09-25 [1] CRAN (R 3.5.0)                    
##  colorout      * 1.2-0      2018-05-03 [1] Github (jalvesaq/colorout@c42088d)
##  crayon          1.3.4      2017-09-16 [1] CRAN (R 3.5.0)                    
##  digest          0.6.18     2018-10-10 [1] CRAN (R 3.5.0)                    
##  evaluate        0.12       2018-10-09 [1] CRAN (R 3.5.0)                    
##  htmltools       0.3.6      2017-04-28 [1] CRAN (R 3.5.0)                    
##  httr            1.3.1      2017-08-20 [1] CRAN (R 3.5.0)                    
##  jsonlite        1.5        2017-06-01 [1] CRAN (R 3.5.0)                    
##  knitcitations * 1.0.8      2017-07-04 [1] CRAN (R 3.5.0)                    
##  knitr           1.20       2018-02-20 [1] CRAN (R 3.5.0)                    
##  lubridate       1.7.4      2018-04-11 [1] CRAN (R 3.5.0)                    
##  magrittr        1.5        2014-11-22 [1] CRAN (R 3.5.0)                    
##  plyr            1.8.4      2016-06-08 [1] CRAN (R 3.5.0)                    
##  R6              2.3.0      2018-10-04 [1] CRAN (R 3.5.0)                    
##  Rcpp            0.12.19    2018-10-01 [1] CRAN (R 3.5.1)                    
##  RefManageR      1.2.0      2018-04-25 [1] CRAN (R 3.5.0)                    
##  rmarkdown       1.10       2018-06-11 [1] CRAN (R 3.5.0)                    
##  rprojroot       1.3-2      2018-01-03 [1] CRAN (R 3.5.0)                    
##  sessioninfo   * 1.1.0.9000 2018-10-02 [1] Github (r-lib/sessioninfo@4f91fad)
##  stringi         1.2.4      2018-07-20 [1] CRAN (R 3.5.0)                    
##  stringr         1.3.1      2018-05-10 [1] CRAN (R 3.5.0)                    
##  withr           2.1.2      2018-03-15 [1] CRAN (R 3.5.0)                    
##  xfun            0.3        2018-07-06 [1] CRAN (R 3.5.0)                    
##  xml2            1.2.0      2018-01-24 [1] CRAN (R 3.5.0)                    
##  yaml            2.2.0      2018-07-25 [1] CRAN (R 3.5.0)                    
## 
## [1] /Library/Frameworks/R.framework/Versions/3.5/Resources/library&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;This conference covered a large spectrum of data science topics, hence the picture for the post!&lt;a href=&#34;#fnref1&#34;&gt;‚Ü©&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Hacking our way through UpSetR</title>
      <link>/post/hacking-our-way-through-upsetr/</link>
      <pubDate>Fri, 27 Jul 2018 00:00:00 +0000</pubDate>
      <guid>/post/hacking-our-way-through-upsetr/</guid>
      <description>


&lt;p&gt;For our club meeting today we were going to summarize the &lt;a href=&#34;https://www.thisismetis.com/demystifying-data-science&#34;&gt;Demystifying Data Science&lt;/a&gt; conference but we forgot that the videos are not released yet.&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Oops, we&amp;#39;ll have to postpone our blog post. We didn&amp;#39;t read the fine print that talk recordings will be available sometime next week. Sorry about that!&lt;/p&gt;&amp;mdash; LIBD rstats club (@LIBDrstats) &lt;a href=&#34;https://twitter.com/LIBDrstats/status/1022862435869450240?ref_src=twsrc%5Etfw&#34;&gt;July 27, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;So we adjusted plans and decided to continue our work on the &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=UpSetR&#34;&gt;UpSetR&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Gehlenborg_2016&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;http://github.com/hms-dbmi/UpSetR&#39;&gt;Gehlenborg, 2016&lt;/a&gt;) package by &lt;a href=&#34;https://twitter.com/ngehlenborg&#34;&gt;Nils Gehlenborg&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Yesterday we discussed various options for visualizing large numbers of overlapping groups. We explored uses of the &lt;a href=&#34;https://twitter.com/hashtag/venneuler?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#venneuler&lt;/a&gt; package from Lee Wilkinson and Simon Urbanek and the &lt;a href=&#34;https://twitter.com/hashtag/UpSetR?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#UpSetR&lt;/a&gt; package from Jake Conway, Alexander Lex, and &lt;a href=&#34;https://twitter.com/ngehlenborg?ref_src=twsrc%5Etfw&#34;&gt;@ngehlenborg&lt;/a&gt;. &lt;a href=&#34;https://twitter.com/hashtag/rstats?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#rstats&lt;/a&gt; &lt;a href=&#34;https://t.co/k55YfihmiP&#34;&gt;pic.twitter.com/k55YfihmiP&lt;/a&gt;&lt;/p&gt;&amp;mdash; LIBD rstats club (@LIBDrstats) &lt;a href=&#34;https://twitter.com/LIBDrstats/status/1007992479159812101?ref_src=twsrc%5Etfw&#34;&gt;June 16, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;what-you-can-currently-do&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;What you can currently do&lt;/h3&gt;
&lt;p&gt;First, let‚Äôs install the version we used for this post:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;devtools::install_github(&amp;#39;hms-dbmi/UpSetR@fe2812c&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Our ultimate goal is to submit a pull request that enables &lt;code&gt;UpSetR&lt;/code&gt; users to specify a color by row for the dots instead of the actual rows. We had already identified an example that we could work with.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;#39;UpSetR&amp;#39;)
movies &amp;lt;- read.csv( system.file(&amp;quot;extdata&amp;quot;, &amp;quot;movies.csv&amp;quot;, package = &amp;quot;UpSetR&amp;quot;), 
                    header=T, sep=&amp;quot;;&amp;quot; )

require(ggplot2); require(plyr); require(gridExtra); require(grid);&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: ggplot2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: plyr&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: gridExtra&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: grid&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;upset(movies, 
      sets = c(&amp;quot;Action&amp;quot;, &amp;quot;Comedy&amp;quot;, &amp;quot;Drama&amp;quot;), 
      order.by=&amp;quot;degree&amp;quot;, matrix.color=&amp;quot;blue&amp;quot;, point.size=5,
      sets.bar.color=c(&amp;quot;maroon&amp;quot;,&amp;quot;blue&amp;quot;,&amp;quot;orange&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-07-27-hacking-our-way-through-upsetr_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We also explored the &lt;a href=&#34;https://cran.rstudio.com/web/packages/UpSetR/vignettes/set.metadata.plots.html&#34;&gt;set metadata vignette&lt;/a&gt; that includes examples such as the following one.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(20180727)

## Create the metadata object first
sets &amp;lt;- names(movies[3:19])
avgRottenTomatoesScore &amp;lt;- round(runif(17, min = 0, max = 90))
metadata &amp;lt;- as.data.frame(cbind(sets, avgRottenTomatoesScore))
names(metadata) &amp;lt;- c(&amp;quot;sets&amp;quot;, &amp;quot;avgRottenTomatoesScore&amp;quot;)
metadata$avgRottenTomatoesScore &amp;lt;- as.numeric(as.character(metadata$avgRottenTomatoesScore))
Cities &amp;lt;- sample(c(&amp;quot;Boston&amp;quot;, &amp;quot;NYC&amp;quot;, &amp;quot;LA&amp;quot;), 17, replace = T)
metadata &amp;lt;- cbind(metadata, Cities)
metadata$Cities &amp;lt;- as.character(metadata$Cities)
metadata[which(metadata$sets %in% c(&amp;quot;Drama&amp;quot;, &amp;quot;Comedy&amp;quot;, &amp;quot;Action&amp;quot;, &amp;quot;Thriller&amp;quot;, 
    &amp;quot;Romance&amp;quot;)), ]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##        sets avgRottenTomatoesScore Cities
## 1    Action                     68 Boston
## 4    Comedy                     40    NYC
## 7     Drama                     48     LA
## 13  Romance                     77 Boston
## 15 Thriller                     19    NYC&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;accepted &amp;lt;- round(runif(17, min = 0, max = 1))
metadata &amp;lt;- cbind(metadata, accepted)
metadata[which(metadata$sets %in% c(&amp;quot;Drama&amp;quot;, &amp;quot;Comedy&amp;quot;, &amp;quot;Action&amp;quot;, &amp;quot;Thriller&amp;quot;, 
    &amp;quot;Romance&amp;quot;)), ]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##        sets avgRottenTomatoesScore Cities accepted
## 1    Action                     68 Boston        0
## 4    Comedy                     40    NYC        1
## 7     Drama                     48     LA        0
## 13  Romance                     77 Boston        1
## 15 Thriller                     19    NYC        0&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Now make the plot
upset(movies, set.metadata = list(data = metadata, plots = list(list(type = &amp;quot;hist&amp;quot;, 
    column = &amp;quot;avgRottenTomatoesScore&amp;quot;, assign = 20), list(type = &amp;quot;matrix_rows&amp;quot;, 
    column = &amp;quot;Cities&amp;quot;, colors = c(Boston = &amp;quot;green&amp;quot;, NYC = &amp;quot;navy&amp;quot;, LA = &amp;quot;purple&amp;quot;), 
    alpha = 0.5))))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-07-27-hacking-our-way-through-upsetr_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;hacking-our-way&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Hacking our way&lt;/h3&gt;
&lt;p&gt;Using the &lt;code&gt;metadata&lt;/code&gt; looked complicated to us and hopefully not necessary for what we are trying to accomplish. That is, we really wanted to change the colors of the circles in each row, not the rows themselves. So we found the GitHub repo with &lt;a href=&#34;https://github.com/hms-dbmi/UpSetR&#34;&gt;the code&lt;/a&gt;, plugged a laptop to a TV and started exploring as a group. We went the rabbit hole to see how the &lt;code&gt;matrix.color&lt;/code&gt; argument got used. To actually hack our way through, we downloaded the latest version of the code using &lt;code&gt;git&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone git@github.com:hms-dbmi/UpSetR.git
cd UpSetR&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next, we created the objects that match the default arguments of &lt;code&gt;upset()&lt;/code&gt; by finding and replacing commas by semi-colons. Well, not all of the commas. Also, for inputs that specified a vector (mostly 2 options), we chose the first one to match the default R behavior. This way we could execute them and have them in our session.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Default upset() arguments
nsets = 5; nintersects = 40; sets = NULL; keep.order = F; set.metadata = NULL; intersections = NULL;
matrix.color = &amp;quot;gray23&amp;quot;; main.bar.color = &amp;quot;gray23&amp;quot;; mainbar.y.label = &amp;quot;Intersection Size&amp;quot;; mainbar.y.max = NULL;
sets.bar.color = &amp;quot;gray23&amp;quot;; sets.x.label = &amp;quot;Set Size&amp;quot;; point.size = 2.2; line.size = 0.7;
mb.ratio = c(0.70,0.30); expression = NULL; att.pos = NULL; att.color = main.bar.color; order.by = &amp;#39;freq&amp;#39;;
decreasing = T; show.numbers = &amp;quot;yes&amp;quot;; number.angles = 0; group.by = &amp;quot;degree&amp;quot;;cutoff = NULL;
queries = NULL; query.legend = &amp;quot;none&amp;quot;; shade.color = &amp;quot;gray88&amp;quot;; shade.alpha = 0.25; matrix.dot.alpha =0.5;
empty.intersections = NULL; color.pal = 1; boxplot.summary = NULL; attribute.plots = NULL; scale.intersections = &amp;quot;identity&amp;quot;;
scale.sets = &amp;quot;identity&amp;quot;; text.scale = 1; set_size.angles = 0 ; set_size.show = FALSE &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next, we did the same (commas to semicolons) for the inputs of the first example.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Initial inputs on the first example
movies &amp;lt;- read.csv( system.file(&amp;quot;extdata&amp;quot;, &amp;quot;movies.csv&amp;quot;, package = &amp;quot;UpSetR&amp;quot;), 
                    header=T, sep=&amp;quot;;&amp;quot; )

## comma -&amp;gt; semicolon
data = movies; sets = c(&amp;quot;Action&amp;quot;, &amp;quot;Comedy&amp;quot;, &amp;quot;Drama&amp;quot;); 
      order.by=&amp;quot;degree&amp;quot;; matrix.color=&amp;quot;blue&amp;quot;; point.size=5;
      sets.bar.color=c(&amp;quot;maroon&amp;quot;,&amp;quot;blue&amp;quot;,&amp;quot;orange&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we were ready to start modifying some of the internal &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=UpSetR&#34;&gt;UpSetR&lt;/a&gt;&lt;/em&gt; (&lt;a href=&#39;http://github.com/hms-dbmi/UpSetR&#39;&gt;Gehlenborg, 2016&lt;/a&gt;) code.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;hacking-internals&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Hacking internals&lt;/h3&gt;
&lt;p&gt;The function &lt;code&gt;upset()&lt;/code&gt; is pretty long and uses many un-exported functions from the package itself. In order to test thing quickly we added &lt;code&gt;UpSetR:::&lt;/code&gt; calls before the un-exported functions. Here‚Äôs our modified version where we added a piece of code to modify the &lt;code&gt;Matrix_layout&lt;/code&gt; object and add some colors.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Piece of code we introduced
for(i in 1:3) {
      j &amp;lt;- which(Matrix_layout$y == i &amp;amp; Matrix_layout$value == 1)
      if(length(j) &amp;gt; 0) Matrix_layout$color[j] &amp;lt;- c(&amp;quot;maroon&amp;quot;,&amp;quot;blue&amp;quot;,&amp;quot;orange&amp;quot;)[i]
  }&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ok, here‚Äôs the full modified &lt;code&gt;upset()&lt;/code&gt; function.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Modified internal upset() code

startend &amp;lt;- UpSetR:::FindStartEnd(data)
  first.col &amp;lt;- startend[1]
  last.col &amp;lt;- startend[2]

  if(color.pal == 1){
    palette &amp;lt;- c(&amp;quot;#1F77B4&amp;quot;, &amp;quot;#FF7F0E&amp;quot;, &amp;quot;#2CA02C&amp;quot;, &amp;quot;#D62728&amp;quot;, &amp;quot;#9467BD&amp;quot;, &amp;quot;#8C564B&amp;quot;, &amp;quot;#E377C2&amp;quot;,
                 &amp;quot;#7F7F7F&amp;quot;, &amp;quot;#BCBD22&amp;quot;, &amp;quot;#17BECF&amp;quot;)
  } else{
    palette &amp;lt;- c(&amp;quot;#E69F00&amp;quot;, &amp;quot;#56B4E9&amp;quot;, &amp;quot;#009E73&amp;quot;, &amp;quot;#F0E442&amp;quot;, &amp;quot;#0072B2&amp;quot;, &amp;quot;#D55E00&amp;quot;,
                 &amp;quot;#CC79A7&amp;quot;)
  }

  if(is.null(intersections) == F){
    Set_names &amp;lt;- unique((unlist(intersections)))
    Sets_to_remove &amp;lt;- UpSetR:::Remove(data, first.col, last.col, Set_names)
    New_data &amp;lt;- UpSetR:::Wanted(data, Sets_to_remove)
    Num_of_set &amp;lt;- UpSetR:::Number_of_sets(Set_names)
    if(keep.order == F){
      Set_names &amp;lt;- UpSetR:::order_sets(New_data, Set_names)
    }
    All_Freqs &amp;lt;- UpSetR:::specific_intersections(data, first.col, last.col, intersections, order.by, group.by, decreasing,
                                        cutoff, main.bar.color, Set_names)
  } else if(is.null(intersections) == T){
    Set_names &amp;lt;- sets
    if(is.null(Set_names) == T || length(Set_names) == 0 ){
      Set_names &amp;lt;- UpSetR:::FindMostFreq(data, first.col, last.col, nsets)
    }
    Sets_to_remove &amp;lt;- UpSetR:::Remove(data, first.col, last.col, Set_names)
    New_data &amp;lt;- UpSetR:::Wanted(data, Sets_to_remove)
    Num_of_set &amp;lt;- UpSetR:::Number_of_sets(Set_names)
    if(keep.order == F){
    Set_names &amp;lt;- UpSetR:::order_sets(New_data, Set_names)
    }
    All_Freqs &amp;lt;- UpSetR:::Counter(New_data, Num_of_set, first.col, Set_names, nintersects, main.bar.color,
                         order.by, group.by, cutoff, empty.intersections, decreasing)
  }
  Matrix_setup &amp;lt;- UpSetR:::Create_matrix(All_Freqs)
  labels &amp;lt;- UpSetR:::Make_labels(Matrix_setup)
  #Chose NA to represent NULL case as result of NA being inserted when at least one contained both x and y
  #i.e. if one custom plot had both x and y, and others had only x, the y&amp;#39;s for the other plots were NA
  #if I decided to make the NULL case (all x and no y, or vice versa), there would have been alot more if/else statements
  #NA can be indexed so that we still get the non NA y aesthetics on correct plot. NULL cant be indexed.
  att.x &amp;lt;- c(); att.y &amp;lt;- c();
  if(is.null(attribute.plots) == F){
    for(i in seq_along(attribute.plots$plots)){
      if(length(attribute.plots$plots[[i]]$x) != 0){
        att.x[i] &amp;lt;- attribute.plots$plots[[i]]$x
      }
      else if(length(attribute.plots$plots[[i]]$x) == 0){
        att.x[i] &amp;lt;- NA
      }
      if(length(attribute.plots$plots[[i]]$y) != 0){
        att.y[i] &amp;lt;- attribute.plots$plots[[i]]$y
      }
      else if(length(attribute.plots$plots[[i]]$y) == 0){
        att.y[i] &amp;lt;- NA
      }
    }
  }

  BoxPlots &amp;lt;- NULL
  if(is.null(boxplot.summary) == F){
    BoxData &amp;lt;- UpSetR:::IntersectionBoxPlot(All_Freqs, New_data, first.col, Set_names)
    BoxPlots &amp;lt;- list()
    for(i in seq_along(boxplot.summary)){
      BoxPlots[[i]] &amp;lt;- UpSetR:::BoxPlotsPlot(BoxData, boxplot.summary[i], att.color)
    }
  }

  customAttDat &amp;lt;- NULL
  customQBar &amp;lt;- NULL
  Intersection &amp;lt;- NULL
  Element &amp;lt;- NULL
  legend &amp;lt;- NULL
  EBar_data &amp;lt;- NULL
  if(is.null(queries) == F){
    custom.queries &amp;lt;- UpSetR:::SeperateQueries(queries, 2, palette)
    customDat &amp;lt;- UpSetR:::customQueries(New_data, custom.queries, Set_names)
    legend &amp;lt;- UpSetR:::GuideGenerator(queries, palette)
    legend &amp;lt;- UpSetR:::Make_legend(legend)
    if(is.null(att.x) == F &amp;amp;&amp;amp; is.null(customDat) == F){
      customAttDat &amp;lt;- UpSetR:::CustomAttData(customDat, Set_names)
    }
    customQBar &amp;lt;- UpSetR:::customQueriesBar(customDat, Set_names, All_Freqs, custom.queries)
  }
  if(is.null(queries) == F){
    Intersection &amp;lt;- UpSetR:::SeperateQueries(queries, 1, palette)
    Matrix_col &amp;lt;- UpSetR:::intersects(QuerieInterData, Intersection, New_data, first.col, Num_of_set,
                             All_Freqs, expression, Set_names, palette)
    Element &amp;lt;- UpSetR:::SeperateQueries(queries, 1, palette)
    EBar_data &amp;lt;-UpSetR:::ElemBarDat(Element, New_data, first.col, expression, Set_names,palette, All_Freqs)
  } else{
    Matrix_col &amp;lt;- NULL
  }
  
  Matrix_layout &amp;lt;- UpSetR:::Create_layout(Matrix_setup, matrix.color, Matrix_col, matrix.dot.alpha)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As a little pause in &lt;code&gt;upset()&lt;/code&gt;, let‚Äôs check what actually &lt;code&gt;Matrix_layout&lt;/code&gt; looks.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Matrix_layout&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    y x value  color alpha Intersection
## 1  1 1     1   blue   1.0         1yes
## 2  2 1     1   blue   1.0         1yes
## 3  3 1     1   blue   1.0         1yes
## 4  1 2     0 gray83   0.5          4No
## 5  2 2     1   blue   1.0         2yes
## 6  3 2     1   blue   1.0         2yes
## 7  1 3     1   blue   1.0         3yes
## 8  2 3     0 gray83   0.5          8No
## 9  3 3     1   blue   1.0         3yes
## 10 1 4     1   blue   1.0         4yes
## 11 2 4     1   blue   1.0         4yes
## 12 3 4     0 gray83   0.5         12No
## 13 1 5     0 gray83   0.5         13No
## 14 2 5     0 gray83   0.5         14No
## 15 3 5     1   blue   1.0         5yes
## 16 1 6     0 gray83   0.5         16No
## 17 2 6     1   blue   1.0         6yes
## 18 3 6     0 gray83   0.5         18No
## 19 1 7     1   blue   1.0         7yes
## 20 2 7     0 gray83   0.5         20No
## 21 3 7     0 gray83   0.5         21No&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We figured out that we had to change the colors only the rows with &lt;code&gt;value = 1&lt;/code&gt; and that &lt;code&gt;y&lt;/code&gt; was the row grouping variable.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## our modification
  for(i in 1:3) {
      j &amp;lt;- which(Matrix_layout$y == i &amp;amp; Matrix_layout$value == 1)
      if(length(j) &amp;gt; 0) Matrix_layout$color[j] &amp;lt;- c(&amp;quot;maroon&amp;quot;,&amp;quot;blue&amp;quot;,&amp;quot;orange&amp;quot;)[i]
  }&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here‚Äôs our modified &lt;code&gt;Matrix_layout&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Matrix_layout&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    y x value  color alpha Intersection
## 1  1 1     1 maroon   1.0         1yes
## 2  2 1     1   blue   1.0         1yes
## 3  3 1     1 orange   1.0         1yes
## 4  1 2     0 gray83   0.5          4No
## 5  2 2     1   blue   1.0         2yes
## 6  3 2     1 orange   1.0         2yes
## 7  1 3     1 maroon   1.0         3yes
## 8  2 3     0 gray83   0.5          8No
## 9  3 3     1 orange   1.0         3yes
## 10 1 4     1 maroon   1.0         4yes
## 11 2 4     1   blue   1.0         4yes
## 12 3 4     0 gray83   0.5         12No
## 13 1 5     0 gray83   0.5         13No
## 14 2 5     0 gray83   0.5         14No
## 15 3 5     1 orange   1.0         5yes
## 16 1 6     0 gray83   0.5         16No
## 17 2 6     1   blue   1.0         6yes
## 18 3 6     0 gray83   0.5         18No
## 19 1 7     1 maroon   1.0         7yes
## 20 2 7     0 gray83   0.5         20No
## 21 3 7     0 gray83   0.5         21No&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ok, let‚Äôs continue with the rest of &lt;code&gt;upset()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## continuing with upset()
  
  Set_sizes &amp;lt;- UpSetR:::FindSetFreqs(New_data, first.col, Num_of_set, Set_names, keep.order)
  Bar_Q &amp;lt;- NULL
  if(is.null(queries) == F){
    Bar_Q &amp;lt;- UpSetR:::intersects(QuerieInterBar, Intersection, New_data, first.col, Num_of_set, All_Freqs, expression, Set_names, palette)
  }
  QInter_att_data &amp;lt;- NULL
  QElem_att_data &amp;lt;- NULL
  if((is.null(queries) == F) &amp;amp; (is.null(att.x) == F)){
    QInter_att_data &amp;lt;- UpSetR:::intersects(QuerieInterAtt, Intersection, New_data, first.col, Num_of_set, att.x, att.y,
                                  expression, Set_names, palette)
    QElem_att_data &amp;lt;- UpSetR:::elements(QuerieElemAtt, Element, New_data, first.col, expression, Set_names, att.x, att.y,
                               palette)
  }
  AllQueryData &amp;lt;- UpSetR:::combineQueriesData(QInter_att_data, QElem_att_data, customAttDat, att.x, att.y)

  ShadingData &amp;lt;- NULL

  if(is.null(set.metadata) == F){
    ShadingData &amp;lt;- get_shade_groups(set.metadata, Set_names, Matrix_layout, shade.alpha)
    output &amp;lt;- Make_set_metadata_plot(set.metadata, Set_names)
    set.metadata.plots &amp;lt;- output[[1]]
    set.metadata &amp;lt;- output[[2]]

    if(is.null(ShadingData) == FALSE){
    shade.alpha &amp;lt;- unique(ShadingData$alpha)
    }
  } else {
    set.metadata.plots &amp;lt;- NULL
  }
  if(is.null(ShadingData) == TRUE){
  ShadingData &amp;lt;- UpSetR:::MakeShading(Matrix_layout, shade.color)
  }
  Main_bar &amp;lt;- suppressMessages(UpSetR:::Make_main_bar(All_Freqs, Bar_Q, show.numbers, mb.ratio, customQBar, number.angles, EBar_data, mainbar.y.label,
                            mainbar.y.max, scale.intersections, text.scale, attribute.plots))
  Matrix &amp;lt;- UpSetR:::Make_matrix_plot(Matrix_layout, Set_sizes, All_Freqs, point.size, line.size,
                             text.scale, labels, ShadingData, shade.alpha)
  Sizes &amp;lt;- UpSetR:::Make_size_plot(Set_sizes, sets.bar.color, mb.ratio, sets.x.label, scale.sets, text.scale, set_size.angles,set_size.show)

  # Make_base_plot(Main_bar, Matrix, Sizes, labels, mb.ratio, att.x, att.y, New_data,
  #                expression, att.pos, first.col, att.color, AllQueryData, attribute.plots,
  #                legend, query.legend, BoxPlots, Set_names, set.metadata, set.metadata.plots)

  structure(class = &amp;quot;upset&amp;quot;,
    .Data=list(
      Main_bar = Main_bar,
      Matrix = Matrix,
      Sizes = Sizes,
      labels = labels,
      mb.ratio = mb.ratio,
      att.x = att.x,
      att.y = att.y,
      New_data = New_data,
      expression = expression,
      att.pos = att.pos,
      first.col = first.col,
      att.color = att.color,
      AllQueryData = AllQueryData,
      attribute.plots = attribute.plots,
      legend = legend,
      query.legend = query.legend,
      BoxPlots = BoxPlots,
      Set_names = Set_names,
      set.metadata = set.metadata,
      set.metadata.plots = set.metadata.plots)
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-07-27-hacking-our-way-through-upsetr_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;line-colors&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Line colors&lt;/h3&gt;
&lt;p&gt;Ok, that‚Äôs great but we have a problem with the lines. The color is no longer black, so we went deeper into the rabbit hole and found that the internal &lt;code&gt;Make_matrix_plot()&lt;/code&gt; function is where the lines are made. We made some edits but got a plot where the lines were on top of the circles as shown in this screenshot.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-07-27-hacking-our-way-through-upsetr_files/Screen%20Shot%202018-07-27%20at%2012.17.58%20PM.png&#34; width=&#34;500&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;Our club session was out of time, so we decided to continue our project another day and ask for help on twitter. And yay, we got help super fast!&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Thank you and &lt;a href=&#34;https://twitter.com/thatdnaguy?ref_src=twsrc%5Etfw&#34;&gt;@thatdnaguy&lt;/a&gt;, that did it! &lt;a href=&#34;https://t.co/tzQvhKFXgR&#34;&gt;pic.twitter.com/tzQvhKFXgR&lt;/a&gt;&lt;/p&gt;&amp;mdash; LIBD rstats club (@LIBDrstats) &lt;a href=&#34;https://twitter.com/LIBDrstats/status/1022903971416088577?ref_src=twsrc%5Etfw&#34;&gt;July 27, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;So here‚Äôs our modified version of &lt;code&gt;Make_matrix_plot()&lt;/code&gt; that keeps the lines black.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Make_matrix_plot &amp;lt;- function(Mat_data,Set_size_data, Main_bar_data, point_size, line_size, text_scale, labels,
                             shading_data, shade_alpha){

  if(length(text_scale) == 1){
    name_size_scale &amp;lt;- text_scale
  }
  if(length(text_scale) &amp;gt; 1 &amp;amp;&amp;amp; length(text_scale) &amp;lt;= 6){
    name_size_scale &amp;lt;- text_scale[5]
  }
  
  Mat_data$line_col &amp;lt;- &amp;#39;black&amp;#39;

  Matrix_plot &amp;lt;- (ggplot()
                  + theme(panel.background = element_rect(fill = &amp;quot;white&amp;quot;),
                          plot.margin=unit(c(-0.2,0.5,0.5,0.5), &amp;quot;lines&amp;quot;),
                          axis.text.x = element_blank(),
                          axis.ticks.x = element_blank(),
                          axis.ticks.y = element_blank(),
                          axis.text.y = element_text(colour = &amp;quot;gray0&amp;quot;,
                                                     size = 7*name_size_scale, hjust = 0.4),
                          panel.grid.major = element_blank(),
                          panel.grid.minor = element_blank())
                  + xlab(NULL) + ylab(&amp;quot;   &amp;quot;)
                  + scale_y_continuous(breaks = c(1:nrow(Set_size_data)),
                                       limits = c(0.5,(nrow(Set_size_data) +0.5)),
                                       labels = labels, expand = c(0,0))
                  + scale_x_continuous(limits = c(0,(nrow(Main_bar_data)+1 )), expand = c(0,0))
                  + geom_rect(data = shading_data, aes_string(xmin = &amp;quot;min&amp;quot;, xmax = &amp;quot;max&amp;quot;,
                                                              ymin = &amp;quot;y_min&amp;quot;, ymax = &amp;quot;y_max&amp;quot;),
                              fill = shading_data$shade_color, alpha = shade_alpha)
                  + geom_line(data= Mat_data, aes_string(group = &amp;quot;Intersection&amp;quot;, x=&amp;quot;x&amp;quot;, y=&amp;quot;y&amp;quot;,
                                                         colour = &amp;quot;line_col&amp;quot;), size = line_size)
                 + geom_point(data= Mat_data, aes_string(x= &amp;quot;x&amp;quot;, y= &amp;quot;y&amp;quot;), colour = Mat_data$color,
                     size= point_size, alpha = Mat_data$alpha, shape=16)
                  + scale_color_identity())
  Matrix_plot &amp;lt;- ggplot_gtable(ggplot_build(Matrix_plot))
  return(Matrix_plot)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Using that modified version we can then run the code again (note that we are not using &lt;code&gt;UpSetR:::&lt;/code&gt; before &lt;code&gt;Make_matrix_plot&lt;/code&gt;) and get the plot we wanted.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Matrix &amp;lt;- Make_matrix_plot(Matrix_layout, Set_sizes, All_Freqs, point.size, line.size,
                             text.scale, labels, ShadingData, shade.alpha)
  Sizes &amp;lt;- UpSetR:::Make_size_plot(Set_sizes, sets.bar.color, mb.ratio, sets.x.label, scale.sets, text.scale, set_size.angles,set_size.show)

  # Make_base_plot(Main_bar, Matrix, Sizes, labels, mb.ratio, att.x, att.y, New_data,
  #                expression, att.pos, first.col, att.color, AllQueryData, attribute.plots,
  #                legend, query.legend, BoxPlots, Set_names, set.metadata, set.metadata.plots)

  structure(class = &amp;quot;upset&amp;quot;,
    .Data=list(
      Main_bar = Main_bar,
      Matrix = Matrix,
      Sizes = Sizes,
      labels = labels,
      mb.ratio = mb.ratio,
      att.x = att.x,
      att.y = att.y,
      New_data = New_data,
      expression = expression,
      att.pos = att.pos,
      first.col = first.col,
      att.color = att.color,
      AllQueryData = AllQueryData,
      attribute.plots = attribute.plots,
      legend = legend,
      query.legend = query.legend,
      BoxPlots = BoxPlots,
      Set_names = Set_names,
      set.metadata = set.metadata,
      set.metadata.plots = set.metadata.plots)
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-07-27-hacking-our-way-through-upsetr_files/figure-html/unnamed-chunk-13-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We have quite a bit more to do in order to complete our pull request. We are also curious if you would have used a different approach to hack your way through &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=UpSetR&#34;&gt;UpSetR&lt;/a&gt;&lt;/em&gt; (&lt;a href=&#39;http://github.com/hms-dbmi/UpSetR&#39;&gt;Gehlenborg, 2016&lt;/a&gt;). For example, maybe some functions from &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=devtools&#34;&gt;devtools&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Wickham_2018&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=devtools&#39;&gt;Wickham, Hester, and Chang, 2018&lt;/a&gt;) would have enabled to do this equally fast without having to introduce &lt;code&gt;UpSetR:::&lt;/code&gt; calls.&lt;/p&gt;
&lt;p&gt;Thanks for reading!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;acknowledgements&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This blog post was made possible thanks to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;http://bioconductor.org/packages/BiocStyle&#34;&gt;BiocStyle&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Oles_2018&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/Bioconductor/BiocStyle&#39;&gt;Ole≈õ, Morgan, and Huber, 2018&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Xie_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/rstudio/blogdown&#39;&gt;Xie, Hill, and Thomas, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=devtools&#34;&gt;devtools&lt;/a&gt;&lt;/em&gt; (&lt;a href=&#39;https://CRAN.R-project.org/package=devtools&#39;&gt;Wickham, Hester, and Chang, 2018&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;knitcitations&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Boettiger_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=knitcitations&#39;&gt;Boettiger, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Boettiger_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Boettiger_2017&#34;&gt;[1]&lt;/a&gt;&lt;cite&gt; C. Boettiger. &lt;em&gt;knitcitations: Citations for ‚ÄòKnitr‚Äô Markdown Files&lt;/em&gt;. R package version 1.0.8. 2017. URL: &lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;https://CRAN.R-project.org/package=knitcitations&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Gehlenborg_2016&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Gehlenborg_2016&#34;&gt;[2]&lt;/a&gt;&lt;cite&gt; N. Gehlenborg. &lt;em&gt;UpSetR: A More Scalable Alternative to Venn and Euler Diagrams for Visualizing Intersecting Sets&lt;/em&gt;. R package version 1.4.0. 2016. URL: &lt;a href=&#34;http://github.com/hms-dbmi/UpSetR&#34;&gt;http://github.com/hms-dbmi/UpSetR&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Oles_2018&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Oles_2018&#34;&gt;[3]&lt;/a&gt;&lt;cite&gt; A. Ole≈õ, M. Morgan and W. Huber. &lt;em&gt;BiocStyle: Standard styles for vignettes and other Bioconductor documents&lt;/em&gt;. R package version 2.8.2. 2018. URL: &lt;a href=&#34;https://github.com/Bioconductor/BiocStyle&#34;&gt;https://github.com/Bioconductor/BiocStyle&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Wickham_2018&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Wickham_2018&#34;&gt;[4]&lt;/a&gt;&lt;cite&gt; H. Wickham, J. Hester and W. Chang. &lt;em&gt;devtools: Tools to Make Developing R Packages Easier&lt;/em&gt;. R package version 1.13.6. 2018. URL: &lt;a href=&#34;https://CRAN.R-project.org/package=devtools&#34;&gt;https://CRAN.R-project.org/package=devtools&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Xie_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Xie_2017&#34;&gt;[5]&lt;/a&gt;&lt;cite&gt; Y. Xie, A. P. Hill and A. Thomas. &lt;em&gt;blogdown: Creating Websites with R Markdown&lt;/em&gt;. ISBN 978-0815363729. Boca Raton, Florida: Chapman and Hall/CRC, 2017. URL: &lt;a href=&#34;https://github.com/rstudio/blogdown&#34;&gt;https://github.com/rstudio/blogdown&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;reproducibility&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Reproducibility&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;## Session info ----------------------------------------------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  setting  value                       
##  version  R version 3.5.1 (2018-07-02)
##  system   x86_64, darwin15.6.0        
##  ui       X11                         
##  language (EN)                        
##  collate  en_US.UTF-8                 
##  tz       America/New_York            
##  date     2018-07-27&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Packages --------------------------------------------------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  package       * version date       source                            
##  assertthat      0.2.0   2017-04-11 cran (@0.2.0)                     
##  backports       1.1.2   2017-12-13 cran (@1.1.2)                     
##  base          * 3.5.1   2018-07-05 local                             
##  bibtex          0.4.2   2017-06-30 CRAN (R 3.5.0)                    
##  bindr           0.1.1   2018-03-13 cran (@0.1.1)                     
##  bindrcpp        0.2.2   2018-03-29 cran (@0.2.2)                     
##  BiocStyle     * 2.8.2   2018-05-30 Bioconductor                      
##  blogdown        0.8     2018-07-15 CRAN (R 3.5.0)                    
##  bookdown        0.7     2018-02-18 CRAN (R 3.5.0)                    
##  colorout      * 1.2-0   2018-05-03 Github (jalvesaq/colorout@c42088d)
##  colorspace      1.3-2   2016-12-14 cran (@1.3-2)                     
##  compiler        3.5.1   2018-07-05 local                             
##  crayon          1.3.4   2017-09-16 cran (@1.3.4)                     
##  datasets      * 3.5.1   2018-07-05 local                             
##  devtools      * 1.13.6  2018-06-27 cran (@1.13.6)                    
##  digest          0.6.15  2018-01-28 CRAN (R 3.5.0)                    
##  dplyr           0.7.6   2018-06-29 CRAN (R 3.5.1)                    
##  evaluate        0.11    2018-07-17 CRAN (R 3.5.0)                    
##  ggplot2       * 3.0.0   2018-07-03 CRAN (R 3.5.0)                    
##  glue            1.3.0   2018-07-17 CRAN (R 3.5.0)                    
##  graphics      * 3.5.1   2018-07-05 local                             
##  grDevices     * 3.5.1   2018-07-05 local                             
##  grid          * 3.5.1   2018-07-05 local                             
##  gridExtra     * 2.3     2017-09-09 CRAN (R 3.5.0)                    
##  gtable          0.2.0   2016-02-26 CRAN (R 3.5.0)                    
##  htmltools       0.3.6   2017-04-28 cran (@0.3.6)                     
##  httr            1.3.1   2017-08-20 CRAN (R 3.5.0)                    
##  jsonlite        1.5     2017-06-01 CRAN (R 3.5.0)                    
##  knitcitations * 1.0.8   2017-07-04 CRAN (R 3.5.0)                    
##  knitr           1.20    2018-02-20 cran (@1.20)                      
##  labeling        0.3     2014-08-23 cran (@0.3)                       
##  lazyeval        0.2.1   2017-10-29 CRAN (R 3.5.0)                    
##  lubridate       1.7.4   2018-04-11 CRAN (R 3.5.0)                    
##  magrittr        1.5     2014-11-22 cran (@1.5)                       
##  memoise         1.1.0   2017-04-21 CRAN (R 3.5.0)                    
##  methods       * 3.5.1   2018-07-05 local                             
##  munsell         0.5.0   2018-06-12 CRAN (R 3.5.0)                    
##  pillar          1.3.0   2018-07-14 CRAN (R 3.5.0)                    
##  pkgconfig       2.0.1   2017-03-21 cran (@2.0.1)                     
##  plyr          * 1.8.4   2016-06-08 cran (@1.8.4)                     
##  purrr           0.2.5   2018-05-29 cran (@0.2.5)                     
##  R6              2.2.2   2017-06-17 CRAN (R 3.5.0)                    
##  Rcpp            0.12.18 2018-07-23 CRAN (R 3.5.1)                    
##  RefManageR      1.2.0   2018-04-25 CRAN (R 3.5.0)                    
##  rlang           0.2.1   2018-05-30 cran (@0.2.1)                     
##  rmarkdown       1.10    2018-06-11 CRAN (R 3.5.0)                    
##  rprojroot       1.3-2   2018-01-03 cran (@1.3-2)                     
##  scales          0.5.0   2017-08-24 cran (@0.5.0)                     
##  stats         * 3.5.1   2018-07-05 local                             
##  stringi         1.2.4   2018-07-20 CRAN (R 3.5.0)                    
##  stringr         1.3.1   2018-05-10 CRAN (R 3.5.0)                    
##  tibble          1.4.2   2018-01-22 cran (@1.4.2)                     
##  tidyselect      0.2.4   2018-02-26 cran (@0.2.4)                     
##  tools           3.5.1   2018-07-05 local                             
##  UpSetR        * 1.4.0   2018-07-27 Github (hms-dbmi/UpSetR@fe2812c)  
##  utils         * 3.5.1   2018-07-05 local                             
##  withr           2.1.2   2018-03-15 CRAN (R 3.5.0)                    
##  xfun            0.3     2018-07-06 CRAN (R 3.5.0)                    
##  xml2            1.2.0   2018-01-24 CRAN (R 3.5.0)                    
##  yaml            2.1.19  2018-05-01 CRAN (R 3.5.0)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>LIBD rstats club remote useR!2018 notes</title>
      <link>/post/libd-rstats-club-remote-user-2018-notes/</link>
      <pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate>
      <guid>/post/libd-rstats-club-remote-user-2018-notes/</guid>
      <description>


&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-07-13-libd-rstats-club-remote-user-2018-notes_files/Screen%20Shot%202018-07-13%20at%2011.51.37%20AM.png&#34; width=&#34;600&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;For our July 13th 2018 LIBD rstats club meeting we decided to check as much as we could the &lt;a href=&#34;https://user2018.r-project.org/&#34;&gt;useR!2018&lt;/a&gt; conference. Here‚Äôs what we were able to figure out about it in about an hour. Hopefully our quick notes will help other &lt;a href=&#34;https://twitter.com/search?q=%23rstats&#34;&gt;rstats&lt;/a&gt; enthusiasts, users and developers get a glimpse of the conference. Although there‚Äôs bound to me more videos and material about the conference coming out in the following days.&lt;/p&gt;
&lt;div id=&#34;main-links&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Main links:&lt;/h3&gt;
&lt;p&gt;First of all search all the Twitter history for tweets related to the conference by checking the &lt;a href=&#34;https://twitter.com/search?q=%23user2018&#34;&gt;user2018&lt;/a&gt; hashtag.&lt;/p&gt;
&lt;p&gt;Next, check the videos of the talks. There are more videos there than we can check right now but we hope to come back sometime later and check more talks.&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;All of the &lt;a href=&#34;https://twitter.com/hashtag/useR2018?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#useR2018&lt;/a&gt; presentations (unless specifically requested not), including tutorials are being recorded. These will be available at some point after the meeting, we think at this channel &lt;a href=&#34;https://t.co/lq6E2XnXP9&#34;&gt;https://t.co/lq6E2XnXP9&lt;/a&gt;&lt;br&gt;&lt;br&gt;Live streaming is a challenge, hope to attempt one keynote.&lt;/p&gt;&amp;mdash; useR!2018 (@useR2018_conf) &lt;a href=&#34;https://twitter.com/useR2018_conf/status/1016816371533938688?ref_src=twsrc%5Etfw&#34;&gt;July 10, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;/div&gt;
&lt;div id=&#34;talks&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Talks&lt;/h3&gt;
&lt;p&gt;From checking Twitter, we can say that there lots of great talks and tutorials. Here are some of the main ones we found in this hour.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/rdpeng&#34;&gt;Roger Peng&lt;/a&gt; talking about &lt;em&gt;Teaching R to New Users&lt;/em&gt; got lots of attention. Here are some tweets about it:&lt;/p&gt;
&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;.&lt;a href=&#34;https://twitter.com/rdpeng?ref_src=twsrc%5Etfw&#34;&gt;@rdpeng&lt;/a&gt; doing a better job of describing the &lt;a href=&#34;https://twitter.com/hashtag/tidyverse?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#tidyverse&lt;/a&gt; design philosophy than I ever have! &lt;a href=&#34;https://t.co/o3KunXe6qq&#34;&gt;https://t.co/o3KunXe6qq&lt;/a&gt;&lt;/p&gt;&amp;mdash; Hadley Wickham (@hadleywickham) &lt;a href=&#34;https://twitter.com/hadleywickham/status/1017553911782076416?ref_src=twsrc%5Etfw&#34;&gt;July 12, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
 &lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Last day of &lt;a href=&#34;https://twitter.com/hashtag/useR2018?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#useR2018&lt;/a&gt; kicking off with &lt;a href=&#34;https://twitter.com/rdpeng?ref_src=twsrc%5Etfw&#34;&gt;@rdpeng&lt;/a&gt; &amp;quot;Teaching R to new users&amp;quot; &lt;a href=&#34;https://t.co/yIJfiU7s8I&#34;&gt;pic.twitter.com/yIJfiU7s8I&lt;/a&gt;&lt;/p&gt;&amp;mdash; Luke Zappia (@_lazappi_) &lt;a href=&#34;https://twitter.com/_lazappi_/status/1017559295355846657?ref_src=twsrc%5Etfw&#34;&gt;July 13, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
 &lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Here is the narrative from my &lt;a href=&#34;https://twitter.com/hashtag/useR2018?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#useR2018&lt;/a&gt; keynote &lt;a href=&#34;https://t.co/SbrlShNaDL&#34;&gt;https://t.co/SbrlShNaDL&lt;/a&gt;&lt;/p&gt;&amp;mdash; Roger D. Peng (@rdpeng) &lt;a href=&#34;https://twitter.com/rdpeng/status/1017608009789259778?ref_src=twsrc%5Etfw&#34;&gt;July 13, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
 &lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Roger Peng‚Äôs &lt;a href=&#34;https://twitter.com/hashtag/useR2018?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#useR2018&lt;/a&gt; keynote this morning resonates with me, as another long time user/developer/instructor. Useful, opinionated take on where we are now in &lt;a href=&#34;https://twitter.com/hashtag/rstats?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#rstats&lt;/a&gt; and how we got here. &lt;a href=&#34;https://twitter.com/rdpeng?ref_src=twsrc%5Etfw&#34;&gt;@rdpeng&lt;/a&gt; &lt;a href=&#34;https://t.co/bOLSoaFupd&#34;&gt;https://t.co/bOLSoaFupd&lt;/a&gt; &lt;a href=&#34;https://t.co/ejc9yFYGVA&#34;&gt;pic.twitter.com/ejc9yFYGVA&lt;/a&gt;&lt;/p&gt;&amp;mdash; Jenny Bryan (@JennyBryan) &lt;a href=&#34;https://twitter.com/JennyBryan/status/1017579549435912194?ref_src=twsrc%5Etfw&#34;&gt;July 13, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/JennyBryan&#34;&gt;Jenny Bryan&lt;/a&gt; talked about &lt;em&gt;Code Smells and Feels&lt;/em&gt; which was one of the major highlights. We wish we could have been there. Here are some tweets about it:&lt;/p&gt;
&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Code Smells and Feels&lt;br&gt;^^ my keynote talk at &lt;a href=&#34;https://twitter.com/hashtag/useR2018?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#useR2018&lt;/a&gt;&lt;br&gt;Materials at: &lt;a href=&#34;https://t.co/e7dZRMZuSL&#34;&gt;https://t.co/e7dZRMZuSL&lt;/a&gt;&lt;br&gt;It was a great honour to speak and the Brisbane crew upheld the fine tradition of fun and informative useR! meetings üéâ &lt;a href=&#34;https://t.co/2XkJ64NgsM&#34;&gt;pic.twitter.com/2XkJ64NgsM&lt;/a&gt;&lt;/p&gt;&amp;mdash; Jenny Bryan (@JennyBryan) &lt;a href=&#34;https://twitter.com/JennyBryan/status/1017697356479729665?ref_src=twsrc%5Etfw&#34;&gt;July 13, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
 &lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;A really nice keynote to close &lt;a href=&#34;https://twitter.com/hashtag/user2018?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#user2018&lt;/a&gt; ‚ÄúCode smells and feels‚Äù &lt;a href=&#34;https://twitter.com/JennyBryan?ref_src=twsrc%5Etfw&#34;&gt;@JennyBryan&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/rstats?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#rstats&lt;/a&gt;&lt;a href=&#34;https://t.co/3pzXUhE9xh&#34;&gt;https://t.co/3pzXUhE9xh&lt;/a&gt; &lt;a href=&#34;https://t.co/BCDcMPKfXj&#34;&gt;pic.twitter.com/BCDcMPKfXj&lt;/a&gt;&lt;/p&gt;&amp;mdash; Micka√´l CANOUIL (@mickaelcanouil) &lt;a href=&#34;https://twitter.com/mickaelcanouil/status/1017772842371317761?ref_src=twsrc%5Etfw&#34;&gt;July 13, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;Check out her presentation materials on &lt;a href=&#34;https://github.com/jennybc/code-smells-and-feels&#34;&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The talk was centered around the idea of writing good code. Using senses such as smell and feel as an extended metaphor, Bryan explains that coding is a sense that is developed through experience. Taking a very supportive tone, she provides pro-tips to writing efficient and effective code, such as writing simple conditions and functions instead of relying on complex function and ‚ÄúTip #1: Do not comment and uncomment sections of code to alter behavior.‚Äù&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/thomasp85&#34;&gt;Thomas Lin Pedersen&lt;/a&gt; talked about the &lt;code&gt;gganimate&lt;/code&gt; package which seems to have included gifs in the talk.&lt;/p&gt;
&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;First keynote for the second day of &lt;a href=&#34;https://twitter.com/hashtag/useR2018?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#useR2018&lt;/a&gt;. &lt;a href=&#34;https://twitter.com/thomasp85?ref_src=twsrc%5Etfw&#34;&gt;@thomasp85&lt;/a&gt; &amp;quot;The Grammar of Animation&amp;quot; &lt;a href=&#34;https://twitter.com/hashtag/sketchnotes?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#sketchnotes&lt;/a&gt; &lt;a href=&#34;https://t.co/tvNjvbr4ag&#34;&gt;pic.twitter.com/tvNjvbr4ag&lt;/a&gt;&lt;/p&gt;&amp;mdash; Luke Zappia (@_lazappi_) &lt;a href=&#34;https://twitter.com/_lazappi_/status/1017198068360347648?ref_src=twsrc%5Etfw&#34;&gt;July 12, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
 &lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;üò¨ I said I wasn&amp;#39;t gonna gif it, but I also don&amp;#39;t want you to miss it‚Ä¶&lt;br&gt;&amp;quot;The Grammar of Animation&amp;quot; üë®‚Äçüé® &lt;a href=&#34;https://twitter.com/thomasp85?ref_src=twsrc%5Etfw&#34;&gt;@thomasp85&lt;/a&gt; &lt;a href=&#34;https://t.co/t2HYRTtHwO&#34;&gt;https://t.co/t2HYRTtHwO&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/rstats?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#rstats&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/useR2018?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#useR2018&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/gganimate?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#gganimate&lt;/a&gt; &lt;a href=&#34;https://t.co/YOyuNn5p1g&#34;&gt;pic.twitter.com/YOyuNn5p1g&lt;/a&gt;&lt;/p&gt;&amp;mdash; Mara Averick (@dataandme) &lt;a href=&#34;https://twitter.com/dataandme/status/1017393683379949568?ref_src=twsrc%5Etfw&#34;&gt;July 12, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/StephdeSilva&#34;&gt;Steph de Silva&lt;/a&gt; started the useR!2018 keynotes with her &lt;em&gt;Beyond syntax, towards culture&lt;/em&gt; talk which covered different R communities and how we all interact.&lt;/p&gt;
&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Kicking off the &lt;a href=&#34;https://twitter.com/hashtag/useR2018?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#useR2018&lt;/a&gt; talks with @StephdeSilva&amp;#39;s keynote &amp;quot;Beyond syntax, towards culture&amp;quot; &lt;a href=&#34;https://twitter.com/hashtag/sketchnotes?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#sketchnotes&lt;/a&gt; &lt;a href=&#34;https://t.co/vgBsfOIFJU&#34;&gt;pic.twitter.com/vgBsfOIFJU&lt;/a&gt;&lt;/p&gt;&amp;mdash; Luke Zappia (@_lazappi_) &lt;a href=&#34;https://twitter.com/_lazappi_/status/1016904394103668736?ref_src=twsrc%5Etfw&#34;&gt;July 11, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
 &lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Late to the party, I was a little busy: my slides for my talk &lt;a href=&#34;https://twitter.com/hashtag/useR2018?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#useR2018&lt;/a&gt;&lt;a href=&#34;https://t.co/OzqcSTEx2v&#34;&gt;https://t.co/OzqcSTEx2v&lt;/a&gt; &lt;a href=&#34;https://t.co/RNnCm6K2ym&#34;&gt;pic.twitter.com/RNnCm6K2ym&lt;/a&gt;&lt;/p&gt;&amp;mdash; Steph Stammel (@StephStammel) &lt;a href=&#34;https://twitter.com/StephStammel/status/1017757332254515201?ref_src=twsrc%5Etfw&#34;&gt;July 13, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;The slides and video for the &lt;code&gt;workflowr&lt;/code&gt; talk by &lt;a href=&#34;https://twitter.com/jdblischak&#34;&gt;John Blischak&lt;/a&gt; are already online too which got the big thumbs up by &lt;a href=&#34;https://twitter.com/PeteHaitch&#34;&gt;Peter Hickey&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Here are the slides for my &lt;a href=&#34;https://twitter.com/hashtag/useR2018?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#useR2018&lt;/a&gt; presentation on my &lt;a href=&#34;https://twitter.com/hashtag/rstats?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#rstats&lt;/a&gt; package &lt;a href=&#34;https://twitter.com/hashtag/workflowr?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#workflowr&lt;/a&gt; for reproducible research &lt;a href=&#34;https://t.co/O2yZ7RemN6&#34;&gt;https://t.co/O2yZ7RemN6&lt;/a&gt;&lt;/p&gt;&amp;mdash; John Blischak (@jdblischak) &lt;a href=&#34;https://twitter.com/jdblischak/status/1016912611529510913?ref_src=twsrc%5Etfw&#34;&gt;July 11, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
 &lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;I feel like &lt;a href=&#34;https://twitter.com/jdblischak?ref_src=twsrc%5Etfw&#34;&gt;@jdblischak&lt;/a&gt; has read my mind with workflowr. It&amp;#39;s like my current workflow but, like, actually good and reproducible! Will be especially great for collaborative and consulting type projects &lt;a href=&#34;https://twitter.com/hashtag/useR2018?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#useR2018&lt;/a&gt; &lt;a href=&#34;https://t.co/tZtqyH3sc2&#34;&gt;https://t.co/tZtqyH3sc2&lt;/a&gt;&lt;/p&gt;&amp;mdash; Peter Hickey (@PeteHaitch) &lt;a href=&#34;https://twitter.com/PeteHaitch/status/1016920426792943616?ref_src=twsrc%5Etfw&#34;&gt;July 11, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;If you are starting out with the tidyverse, this tutorial about &lt;em&gt;Wrangling with the Tidyverse&lt;/em&gt; by &lt;a href=&#34;https://twitter.com/drsimonj&#34;&gt;Simon Jackson&lt;/a&gt; seems interesting!&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Great to meet everyone today who attended my &lt;a href=&#34;https://twitter.com/hashtag/useR2018?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#useR2018&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/rstats?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#rstats&lt;/a&gt; tutorial, &amp;quot;Wrangling with the Tidyverse!&amp;quot;&lt;br&gt;&lt;br&gt;Missed out or forgot anything? Get all the material at &lt;a href=&#34;https://t.co/YfYZBlkwMs&#34;&gt;https://t.co/YfYZBlkwMs&lt;/a&gt;&lt;br&gt;&lt;br&gt;Special thanks to &lt;a href=&#34;https://twitter.com/Rhydwyn?ref_src=twsrc%5Etfw&#34;&gt;@Rhydwyn&lt;/a&gt; &lt;a href=&#34;https://twitter.com/orchid00?ref_src=twsrc%5Etfw&#34;&gt;@orchid00&lt;/a&gt; and @SayaniGupta5 for their support too &lt;a href=&#34;https://t.co/5MnXLSQxq9&#34;&gt;pic.twitter.com/5MnXLSQxq9&lt;/a&gt;&lt;/p&gt;&amp;mdash; Simon Jackson (@drsimonj) &lt;a href=&#34;https://twitter.com/drsimonj/status/1016592786865287169?ref_src=twsrc%5Etfw&#34;&gt;July 10, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;Did anyone else think about the Diablo game with the &lt;code&gt;deckard&lt;/code&gt; package? This new package by &lt;a href=&#34;https://twitter.com/VergeLabsAI&#34;&gt;Verge Labs&lt;/a&gt; could be very useful when working with large datasets.&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Introducing deckard for large scale visualisations in &lt;a href=&#34;https://twitter.com/hashtag/rstats?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#rstats&lt;/a&gt;! If you want to hear more about it come catch us present this Thursday at 4:30 at &lt;a href=&#34;https://twitter.com/hashtag/user2018?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#user2018&lt;/a&gt;. &lt;a href=&#34;https://t.co/sIcd3ztqVl&#34;&gt;https://t.co/sIcd3ztqVl&lt;/a&gt; &lt;a href=&#34;https://t.co/ggu0N7JMWH&#34;&gt;pic.twitter.com/ggu0N7JMWH&lt;/a&gt;&lt;/p&gt;&amp;mdash; Verge Labs (@VergeLabsAI) &lt;a href=&#34;https://twitter.com/VergeLabsAI/status/1016793618051301376?ref_src=twsrc%5Etfw&#34;&gt;July 10, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;&lt;a href=&#34;https://twitter.com/jimhester_&#34;&gt;Jim Hester&lt;/a&gt;‚Äôs talk about the &lt;code&gt;glue&lt;/code&gt; package was highly recommended by Jenny Bryan. And more likely than not, you are using R packages that Jim has helped in some way or the other.&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Slides for my talk at &lt;a href=&#34;https://t.co/7JO8G1nQup&#34;&gt;https://t.co/7JO8G1nQup&lt;/a&gt;&lt;/p&gt;&amp;mdash; Jim Hester (@jimhester_) &lt;a href=&#34;https://twitter.com/jimhester_/status/1017226381082558464?ref_src=twsrc%5Etfw&#34;&gt;July 12, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;&lt;a href=&#34;https://twitter.com/tslumley&#34;&gt;Thomas Lumley&lt;/a&gt; talked about &lt;code&gt;fasteR&lt;/code&gt;: ways to speed up R code; check the video of his talk at &lt;a href=&#34;https://www.youtube.com/watch?v=P2MDIzflp9k&#34;&gt;YouTube&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://imgs.xkcd.com/comics/is_it_worth_the_time.png&#34; width=&#34;600&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;Major takehomes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you repeat a task frequently, it is worth taking the time to optimize it for speed. (See xkcd cartoon!)&lt;/li&gt;
&lt;li&gt;Packages are available to measure how ‚Äúefficient‚Äù your code is, in time and/or memory. Options: &lt;code&gt;microbenchmark()&lt;/code&gt;, &lt;code&gt;Rprof()&lt;/code&gt;, &lt;code&gt;system.time()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Reasons your code may be slower than necessary:
&lt;ul&gt;
&lt;li&gt;Dataframes are slower than matrices, data.tables, tbls, and lists&lt;/li&gt;
&lt;li&gt;Vectorize your code whenever possible&lt;/li&gt;
&lt;li&gt;Preallocate for the size of your objects, rather than ‚Äúgrowing‚Äù your objects.&lt;/li&gt;
&lt;li&gt;Linear algebra / matrix algebra functions can be much faster than alternatives because they are coded in C. E.g. for a large matrix, &lt;code&gt;crossprod(scale(x))&lt;/code&gt; &lt;em&gt;if you know there is no missing data or NAs&lt;/em&gt; is many times faster than &lt;code&gt;cor(x)&lt;/code&gt;. If you know the linear algebra, use matrix operations when possible.&lt;/li&gt;
&lt;li&gt;Packages exist for modeling large data. Example: &lt;code&gt;biglm&lt;/code&gt; for linear models.&lt;/li&gt;
&lt;li&gt;Thomas Lumley is a Rosalind Franklin fan :)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;miscellaneous&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Miscellaneous&lt;/h3&gt;
&lt;p&gt;They made an awesome hex wall with the hex stickers from packages represented at useR!2018. It‚Äôs awesome!&lt;/p&gt;
&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;The &lt;a href=&#34;https://twitter.com/hashtag/useR2018?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#useR2018&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/hexwall?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#hexwall&lt;/a&gt; has been revealed! Read about how it was created in &lt;a href=&#34;https://twitter.com/hashtag/rstats?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#rstats&lt;/a&gt; on this blog post: &lt;a href=&#34;https://t.co/krYYOQ3N84&#34;&gt;https://t.co/krYYOQ3N84&lt;/a&gt;&lt;br&gt;&lt;br&gt;A huge thanks to everyone who has submitted stickers and provided feedback. I hope you enjoy the end result as much as I have had creating it! üéâ &lt;a href=&#34;https://t.co/GnG9m2cZme&#34;&gt;pic.twitter.com/GnG9m2cZme&lt;/a&gt;&lt;/p&gt;&amp;mdash; Mitchell O&amp;#39;Hara-Wild (@mitchoharawild) &lt;a href=&#34;https://twitter.com/mitchoharawild/status/1016867974597074944?ref_src=twsrc%5Etfw&#34;&gt;July 11, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
 &lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Controversial choice of wearing a &lt;a href=&#34;https://twitter.com/hashtag/python?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#python&lt;/a&gt; in front of an &lt;a href=&#34;https://twitter.com/hashtag/hexwall?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#hexwall&lt;/a&gt; of &lt;a href=&#34;https://twitter.com/hashtag/R?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#R&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/packages?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#packages&lt;/a&gt; but hey, we&amp;#39;re all friends! &lt;a href=&#34;https://twitter.com/hashtag/useR2018?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#useR2018&lt;/a&gt; &lt;a href=&#34;https://t.co/rSG1EsH4Wi&#34;&gt;pic.twitter.com/rSG1EsH4Wi&lt;/a&gt;&lt;/p&gt;&amp;mdash; Anna Quaglieri (@annaquagli) &lt;a href=&#34;https://twitter.com/annaquagli/status/1016920889101709312?ref_src=twsrc%5Etfw&#34;&gt;July 11, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;Here‚Äôs a blog post summarizing the conference from someone that was there if you want to check it out.&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Last blog post for &lt;a href=&#34;https://twitter.com/hashtag/useR2018?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#useR2018&lt;/a&gt;. What a great week. Thank you to everyone who contributed. &lt;a href=&#34;https://t.co/VA55cZz0VZ&#34;&gt;https://t.co/VA55cZz0VZ&lt;/a&gt;&lt;/p&gt;&amp;mdash; David Neuzerling (@mdneuzerling) &lt;a href=&#34;https://twitter.com/mdneuzerling/status/1017666723015581696?ref_src=twsrc%5Etfw&#34;&gt;July 13, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;It‚Äôs awesome to see the &lt;a href=&#34;https://twitter.com/RLadiesGlobal&#34;&gt;RLadies&lt;/a&gt; community thriving! A few of us didn‚Äôt know about &lt;a href=&#34;https://r-posts.com/introducing-r-ladies-remote-chapter/&#34;&gt;RLadies Remote&lt;/a&gt; which everyone can join.&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Here are amazing &lt;a href=&#34;https://twitter.com/hashtag/RLadies?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#RLadies&lt;/a&gt; from around the world having dinner after an excellent day at &lt;a href=&#34;https://twitter.com/useR2018_conf?ref_src=twsrc%5Etfw&#34;&gt;@useR2018_conf&lt;/a&gt; &lt;a href=&#34;https://twitter.com/RLadiesGlobal?ref_src=twsrc%5Etfw&#34;&gt;@RLadiesGlobal&lt;/a&gt; &lt;a href=&#34;https://twitter.com/RLadiesBrisbane?ref_src=twsrc%5Etfw&#34;&gt;@RLadiesBrisbane&lt;/a&gt; &lt;a href=&#34;https://twitter.com/RLadiesSydney?ref_src=twsrc%5Etfw&#34;&gt;@RLadiesSydney&lt;/a&gt; &lt;a href=&#34;https://twitter.com/RLadiesIstanbul?ref_src=twsrc%5Etfw&#34;&gt;@RLadiesIstanbul&lt;/a&gt; &lt;a href=&#34;https://twitter.com/RLadiesIzmir?ref_src=twsrc%5Etfw&#34;&gt;@RLadiesIzmir&lt;/a&gt; &lt;a href=&#34;https://twitter.com/RLadiesAKL?ref_src=twsrc%5Etfw&#34;&gt;@RLadiesAKL&lt;/a&gt; &lt;a href=&#34;https://twitter.com/RLadiesDC?ref_src=twsrc%5Etfw&#34;&gt;@RLadiesDC&lt;/a&gt; &lt;a href=&#34;https://twitter.com/RLadiesRemote?ref_src=twsrc%5Etfw&#34;&gt;@RLadiesRemote&lt;/a&gt; &lt;a href=&#34;https://twitter.com/RLadiesMVD?ref_src=twsrc%5Etfw&#34;&gt;@RLadiesMVD&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/rladies?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#rladies&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/useR2018?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#useR2018&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/rstat?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#rstat&lt;/a&gt; &lt;a href=&#34;https://t.co/aZoSuAU0Gi&#34;&gt;pic.twitter.com/aZoSuAU0Gi&lt;/a&gt;&lt;/p&gt;&amp;mdash; R-Ladies Melbourne (@RLadiesMelb) &lt;a href=&#34;https://twitter.com/RLadiesMelb/status/1016604921154584576?ref_src=twsrc%5Etfw&#34;&gt;July 10, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;These are some awesome socks!&lt;/p&gt;
&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Packed my own hex socks for &lt;a href=&#34;https://twitter.com/hashtag/useR2018?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#useR2018&lt;/a&gt; &lt;a href=&#34;https://t.co/UxPcBp8CGh&#34;&gt;pic.twitter.com/UxPcBp8CGh&lt;/a&gt;&lt;/p&gt;&amp;mdash; Ben Harrap (@BHarrap) &lt;a href=&#34;https://twitter.com/BHarrap/status/1017237977599078400?ref_src=twsrc%5Etfw&#34;&gt;July 12, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
 &lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Sock party &lt;a href=&#34;https://twitter.com/hashtag/useR2018?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#useR2018&lt;/a&gt; (trying again with proper spelling) &lt;a href=&#34;https://t.co/gI6zcbTzDW&#34;&gt;pic.twitter.com/gI6zcbTzDW&lt;/a&gt;&lt;/p&gt;&amp;mdash; Dianne Cook (@visnut) &lt;a href=&#34;https://twitter.com/visnut/status/1016443338331807744?ref_src=twsrc%5Etfw&#34;&gt;July 9, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;And who doesn‚Äôt love this image of &lt;a href=&#34;https://twitter.com/hadleywickham&#34;&gt;Hadley Wickham&lt;/a&gt; being mobbed by deers? He even meme-fied it himself on this tweet.&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;People often ask why dplyr &amp;amp; tibble don&amp;#39;t support row names. I&amp;#39;ve (finally) written up my reasons at &lt;a href=&#34;https://t.co/UmZjaSk7UX&#34;&gt;https://t.co/UmZjaSk7UX&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/rstats?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#rstats&lt;/a&gt; (photo credit: &lt;a href=&#34;https://twitter.com/hspter?ref_src=twsrc%5Etfw&#34;&gt;@hspter&lt;/a&gt;) &lt;a href=&#34;https://t.co/IVbaVmKhYp&#34;&gt;pic.twitter.com/IVbaVmKhYp&lt;/a&gt;&lt;/p&gt;&amp;mdash; Hadley Wickham (@hadleywickham) &lt;a href=&#34;https://twitter.com/hadleywickham/status/1017562721456275456?ref_src=twsrc%5Etfw&#34;&gt;July 13, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;useR!2019 is already lined up, &lt;a href=&#34;http://www.user2019.fr/&#34;&gt;check it out&lt;/a&gt;. It‚Äôll be in Toulouse, France! Follow them on Twitter at &lt;a href=&#34;https://twitter.com/UseR2019_Conf&#34; class=&#34;uri&#34;&gt;https://twitter.com/UseR2019_Conf&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;acknowledgements&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;We are greatful to everyone that tweeted about the conference and shared their materials online!&lt;/p&gt;
&lt;p&gt;This blog post was made possible thanks to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Xie_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/rstudio/blogdown&#39;&gt;Xie, Hill, and Thomas, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=devtools&#34;&gt;devtools&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Wickham_2018&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=devtools&#39;&gt;Wickham, Hester, and Chang, 2018&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;knitcitations&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Boettiger_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=knitcitations&#39;&gt;Boettiger, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Boettiger_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Boettiger_2017&#34;&gt;[1]&lt;/a&gt;&lt;cite&gt; C. Boettiger. &lt;em&gt;knitcitations: Citations for ‚ÄòKnitr‚Äô Markdown Files&lt;/em&gt;. R package version 1.0.8. 2017. URL: &lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;https://CRAN.R-project.org/package=knitcitations&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Wickham_2018&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Wickham_2018&#34;&gt;[2]&lt;/a&gt;&lt;cite&gt; H. Wickham, J. Hester and W. Chang. &lt;em&gt;devtools: Tools to Make Developing R Packages Easier&lt;/em&gt;. R package version 1.13.6. 2018. URL: &lt;a href=&#34;https://CRAN.R-project.org/package=devtools&#34;&gt;https://CRAN.R-project.org/package=devtools&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Xie_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Xie_2017&#34;&gt;[3]&lt;/a&gt;&lt;cite&gt; Y. Xie, A. P. Hill and A. Thomas. &lt;em&gt;blogdown: Creating Websites with R Markdown&lt;/em&gt;. ISBN 978-0815363729. Boca Raton, Florida: Chapman and Hall/CRC, 2017. URL: &lt;a href=&#34;https://github.com/rstudio/blogdown&#34;&gt;https://github.com/rstudio/blogdown&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;reproducibility&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Reproducibility&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;## Session info ----------------------------------------------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  setting  value                       
##  version  R version 3.5.1 (2018-07-02)
##  system   x86_64, darwin15.6.0        
##  ui       X11                         
##  language (EN)                        
##  collate  en_US.UTF-8                 
##  tz       America/New_York            
##  date     2018-07-13&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Packages --------------------------------------------------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  package       * version date       source                            
##  backports       1.1.2   2017-12-13 cran (@1.1.2)                     
##  base          * 3.5.1   2018-07-05 local                             
##  bibtex          0.4.2   2017-06-30 CRAN (R 3.5.0)                    
##  BiocStyle     * 2.8.2   2018-05-30 Bioconductor                      
##  blogdown        0.7     2018-07-07 CRAN (R 3.5.0)                    
##  bookdown        0.7     2018-02-18 CRAN (R 3.5.0)                    
##  colorout      * 1.2-0   2018-05-03 Github (jalvesaq/colorout@c42088d)
##  compiler        3.5.1   2018-07-05 local                             
##  datasets      * 3.5.1   2018-07-05 local                             
##  devtools      * 1.13.6  2018-06-27 cran (@1.13.6)                    
##  digest          0.6.15  2018-01-28 CRAN (R 3.5.0)                    
##  evaluate        0.10.1  2017-06-24 cran (@0.10.1)                    
##  graphics      * 3.5.1   2018-07-05 local                             
##  grDevices     * 3.5.1   2018-07-05 local                             
##  htmltools       0.3.6   2017-04-28 cran (@0.3.6)                     
##  httr            1.3.1   2017-08-20 CRAN (R 3.5.0)                    
##  jsonlite        1.5     2017-06-01 CRAN (R 3.5.0)                    
##  knitcitations * 1.0.8   2017-07-04 CRAN (R 3.5.0)                    
##  knitr           1.20    2018-02-20 cran (@1.20)                      
##  lubridate       1.7.4   2018-04-11 CRAN (R 3.5.0)                    
##  magrittr        1.5     2014-11-22 cran (@1.5)                       
##  memoise         1.1.0   2017-04-21 CRAN (R 3.5.0)                    
##  methods       * 3.5.1   2018-07-05 local                             
##  plyr            1.8.4   2016-06-08 cran (@1.8.4)                     
##  R6              2.2.2   2017-06-17 CRAN (R 3.5.0)                    
##  Rcpp            0.12.17 2018-05-18 cran (@0.12.17)                   
##  RefManageR      1.2.0   2018-04-25 CRAN (R 3.5.0)                    
##  rmarkdown       1.10    2018-06-11 CRAN (R 3.5.0)                    
##  rprojroot       1.3-2   2018-01-03 cran (@1.3-2)                     
##  stats         * 3.5.1   2018-07-05 local                             
##  stringi         1.2.3   2018-06-12 CRAN (R 3.5.0)                    
##  stringr         1.3.1   2018-05-10 CRAN (R 3.5.0)                    
##  tools           3.5.1   2018-07-05 local                             
##  utils         * 3.5.1   2018-07-05 local                             
##  withr           2.1.2   2018-03-15 CRAN (R 3.5.0)                    
##  xfun            0.3     2018-07-06 CRAN (R 3.5.0)                    
##  xml2            1.2.0   2018-01-24 CRAN (R 3.5.0)                    
##  yaml            2.1.19  2018-05-01 CRAN (R 3.5.0)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Introduction to Scraping and Wrangling Tables from Research Articles</title>
      <link>/post/introduction-to-scraping-and-wranging-tables-from-research-articles/</link>
      <pubDate>Mon, 19 Mar 2018 00:00:00 +0000</pubDate>
      <guid>/post/introduction-to-scraping-and-wranging-tables-from-research-articles/</guid>
      <description>


&lt;p&gt;By &lt;a href=&#34;https://www.libd.org/team/Stephen-Semick/&#34;&gt;Steve Semick&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;What do you do when you want to use results from the literature to anchor your own analysis? When these results are in the form of an easily accessible table, such as a .csv file or .xlsx file, then it is simple enough to download them and incorporate them into your research. Often times, however, published findings are not so easy to handle. Today, we‚Äôll go through a practical scenario on scraping an html table from a &lt;a href=&#34;https://www.nature.com/articles/ng.2802/&#34;&gt;Nature Genetics article&lt;/a&gt; into R and wrangling the data into a useful format. This is what the online table we want to scrape looks like:&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-19-introduction-to-scraping-and-wranging-scientific-research-articles_files/blogpost01_table2_ng_screenshot.png&#34; width=&#34;800&#34; /&gt;

&lt;/div&gt;
&lt;div id=&#34;example-1a-scraping-a-html-table-from-a-webpage&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Example 1A: Scraping a html table from a webpage&lt;/h3&gt;
&lt;p&gt;Sometimes a table is online as part of a research article but can‚Äôt be easily coerced into a useful format. You can‚Äôt copy and paste the table into excel and its not stored elsewhere. In these situations you can use the handy R package &lt;code&gt;rvest&lt;/code&gt; to scrape it into R from the webpage.&lt;/p&gt;
&lt;p&gt;First load the &lt;code&gt;rvest&lt;/code&gt; package to scrape the table.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;rvest&amp;quot;)
library(&amp;quot;knitr&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next, get the url of the webpage where the table is stored.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;url &amp;lt;- &amp;quot;https://www.nature.com/articles/ng.2802/tables/2&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, the trickiest part of the process. We need find where the table lives on this webpage. An excellent guide to finding out how to do this can be found on &lt;a href=&#34;http://blog.corynissen.com/2015/01/using-rvest-to-scrape-html-table.html&#34;&gt;Cory Nissen‚Äôs blogpost&lt;/a&gt;‚Äì this is also where I learned about using &lt;code&gt;rvest&lt;/code&gt; to scrape html tables. Once you have copied the table location, the rest is easy!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;table_path=&amp;#39;//*[@id=&amp;quot;content&amp;quot;]/div/div/figure/div[1]/div/div[1]/table&amp;#39;
nature_genetics_table2 &amp;lt;- url %&amp;gt;%
  read_html() %&amp;gt;%
  html_nodes(xpath=table_path) %&amp;gt;%
  html_table(fill=T)
nature_genetics_table2 = nature_genetics_table2[[1]]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is what the first few lines of our scraped product looks like:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;kable(nature_genetics_table2[1:4,])&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;SNPa&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Chr.&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Positionb&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Closest genec&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Major/minor alleles&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;MAFd&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Stage 1&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Stage 1&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Stage 2&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Stage 2&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Overall&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Overall&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Overall&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;SNPa&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Chr.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Positionb&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Closest genec&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Major/minor alleles&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;MAFd&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;OR (95% CI)e&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Meta P value&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;OR (95% CI)e&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Meta P value&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;OR (95% CI)e&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Meta P value&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;I2 (%), P valuef&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Known GWAS-defined associated genes&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Known GWAS-defined associated genes&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Known GWAS-defined associated genes&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Known GWAS-defined associated genes&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Known GWAS-defined associated genes&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Known GWAS-defined associated genes&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Known GWAS-defined associated genes&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Known GWAS-defined associated genes&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Known GWAS-defined associated genes&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Known GWAS-defined associated genes&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Known GWAS-defined associated genes&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Known GWAS-defined associated genes&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Known GWAS-defined associated genes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;rs6656401&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;207692049&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CR1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;G/A&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.197&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.17 (1.12‚Äì1.22)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;7.7 √ó 10‚àí15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.21 (1.14‚Äì1.28)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;7.9 √ó 10‚àí11&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.18 (1.14‚Äì1.22)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;5.7 √ó 10‚àí24&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0, 7.8 √ó 10‚àí1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;rs6733839&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;127892810&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;BIN1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;C/T&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.409&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.21 (1.17‚Äì1.25)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.7 √ó 10‚àí26&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.24 (1.18‚Äì1.29)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;3.4 √ó 10‚àí19&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.22 (1.18‚Äì1.25)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;6.9 √ó 10‚àí44&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;28, 6.1 √ó 10‚àí2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;While this table has the information we want, it is clearly still a mess. Which brings us to‚Ä¶&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;example-1b-making-messy-data-useful&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Example 1B: Making messy data useful&lt;/h3&gt;
&lt;p&gt;Fortunately, there is the right number of columns, but there are lines of text breaking the table and stretching through at least one row of the table. There are two others (not shown), so getting these rows into better data format will be our first task.&lt;/p&gt;
&lt;div id=&#34;cleaning-up-the-rows&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Cleaning up the rows&lt;/h4&gt;
&lt;p&gt;We could look at the table and see these lines are on rows 2, 12, and 18. But let‚Äôs do this instead using some R code. The trick here is to note that all the elements of these rows contain the exact same text.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;v=which(apply(nature_genetics_table2,1, function(x) length(unique(unlist(x))) )==1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Great, now let‚Äôs get rid of these rows but retain the information. We are going to do this in three steps. First, we will split the data.frame into a list based on the location of these descriptions (rows 2,12, and 18). Then, we will clean this list up by keeping only the list elements with data. We will move the text taking up entire rows to an additional column titled ‚ÄúDescription‚Äù. Lastly, we will concatenate this cleaned list back into a data.frame.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;nature_genetics_table2_list = split(nature_genetics_table2, cumsum(1:nrow(nature_genetics_table2) %in% v))
nature_genetics_table2_list = lapply(nature_genetics_table2_list[2:4], function(y){ y$Description= unique(as.character(y[1,]) ) 
y[-1,] } )

nature_genetics_table2_clean = do.call(&amp;quot;rbind&amp;quot;,nature_genetics_table2_list)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now let‚Äôs look at our data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;kable(nature_genetics_table2_clean[1:3,])&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;SNPa&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Chr.&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Positionb&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Closest genec&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Major/minor alleles&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;MAFd&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Stage 1&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Stage 1&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Stage 2&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Stage 2&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Overall&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Overall&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Overall&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;1.3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;rs6656401&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;207692049&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CR1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;G/A&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.197&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.17 (1.12‚Äì1.22)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;7.7 √ó 10‚àí15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.21 (1.14‚Äì1.28)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;7.9 √ó 10‚àí11&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.18 (1.14‚Äì1.22)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;5.7 √ó 10‚àí24&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0, 7.8 √ó 10‚àí1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Known GWAS-defined associated genes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;1.4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;rs6733839&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;127892810&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;BIN1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;C/T&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.409&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.21 (1.17‚Äì1.25)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.7 √ó 10‚àí26&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.24 (1.18‚Äì1.29)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;3.4 √ó 10‚àí19&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.22 (1.18‚Äì1.25)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;6.9 √ó 10‚àí44&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;28, 6.1 √ó 10‚àí2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Known GWAS-defined associated genes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;1.5&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;rs10948363&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;47487762&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CD2AP&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;A/G&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.266&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.10 (1.07‚Äì1.14)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;3.1 √ó 10‚àí8&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.09 (1.04‚Äì1.15)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;4.1 √ó 10‚àí4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.10 (1.07‚Äì1.13)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;5.2 √ó 10‚àí11&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0, 9 √ó 10‚àí1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Known GWAS-defined associated genes&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;fixing-column-names&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Fixing column names&lt;/h4&gt;
&lt;p&gt;It‚Äôs getting better but is still messy. Let‚Äôs clean up those columns names. This part we will do by hand.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;colnames(nature_genetics_table2_clean) &amp;lt;- c(&amp;quot;SNP&amp;quot;, &amp;quot;Chr&amp;quot;, &amp;quot;Position&amp;quot;, &amp;quot;Closest gene&amp;quot;, &amp;quot;Major/minor alleles&amp;quot;, &amp;quot;MAF&amp;quot;, &amp;quot;Stage1_OR&amp;quot;, &amp;quot;Stage1_MetaP&amp;quot;, &amp;quot;Stage2_OR&amp;quot;,&amp;quot;Stage2_MetaP&amp;quot;,    &amp;quot;Overall_OR&amp;quot;, &amp;quot;Overall_MetaP&amp;quot;, &amp;quot;I2_Percent/P&amp;quot;,&amp;quot;Description&amp;quot;)
colnames(nature_genetics_table2_clean)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;SNP&amp;quot;                 &amp;quot;Chr&amp;quot;                 &amp;quot;Position&amp;quot;           
##  [4] &amp;quot;Closest gene&amp;quot;        &amp;quot;Major/minor alleles&amp;quot; &amp;quot;MAF&amp;quot;                
##  [7] &amp;quot;Stage1_OR&amp;quot;           &amp;quot;Stage1_MetaP&amp;quot;        &amp;quot;Stage2_OR&amp;quot;          
## [10] &amp;quot;Stage2_MetaP&amp;quot;        &amp;quot;Overall_OR&amp;quot;          &amp;quot;Overall_MetaP&amp;quot;      
## [13] &amp;quot;I2_Percent/P&amp;quot;        &amp;quot;Description&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;making-a-character-variable-into-a-numeric-variable&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Making a character variable into a numeric variable&lt;/h4&gt;
&lt;p&gt;It‚Äôs coming along.. Next, we need to make the numbers into, well numbers. This will be more useful in R than a character class of data. To do this, try using the &lt;code&gt;as.numeric&lt;/code&gt; function as shown.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;as.numeric(nature_genetics_table2_clean$Stage1_MetaP)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: NAs introduced by coercion&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It doesn‚Äôt work because there are weird symbols that R doesn‚Äôt understand. Get rid of them with the &lt;code&gt;gsub&lt;/code&gt; command and replace them an E (scientific notation).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;nature_genetics_table2_clean$Stage1_MetaP = gsub(&amp;quot; √ó 10&amp;quot;,&amp;quot;E&amp;quot;,nature_genetics_table2_clean$Stage1_MetaP)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now try converting to a numeric.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;as.numeric(nature_genetics_table2_clean$Stage1_MetaP)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: NAs introduced by coercion&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It still doesn‚Äôt work!! Take a second closer look at the data. Can you discern why the code failed?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;nature_genetics_table2_clean$Stage1_MetaP&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;7.7E-15&amp;quot; &amp;quot;1.7E-26&amp;quot; &amp;quot;3.1E-8&amp;quot;  &amp;quot;8.8E-10&amp;quot; &amp;quot;9.6E-17&amp;quot; &amp;quot;2.8E-11&amp;quot; &amp;quot;6.5E-16&amp;quot;
##  [8] &amp;quot;1.7E-9&amp;quot;  &amp;quot;5.1E-8&amp;quot;  &amp;quot;1.6E-8&amp;quot;  &amp;quot;3.3E-9&amp;quot;  &amp;quot;5.0E-11&amp;quot; &amp;quot;1.5E-7&amp;quot;  &amp;quot;4.6E-8&amp;quot; 
## [15] &amp;quot;9.6E-5&amp;quot;  &amp;quot;2.5E-6&amp;quot;  &amp;quot;1.3E-5&amp;quot;  &amp;quot;7.4E-6&amp;quot;  &amp;quot;6.7E-6&amp;quot;  &amp;quot;1.0E-5&amp;quot;  &amp;quot;1.6E-6&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Yep, that‚Äôs right the &lt;code&gt;‚àí&lt;/code&gt; symbol is not in fact the same as a minus symbol &lt;code&gt;-&lt;/code&gt;! We need to replace it. We‚Äôll use the fact that that symbol always appears immediately after a capital E to our advantage.&lt;/p&gt;
&lt;p&gt;Split the string on the E using &lt;code&gt;strsplit&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;s = strsplit(nature_genetics_table2_clean$Stage1_MetaP, &amp;quot;E&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Get the first and second half of each string.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;firstStr = lapply(s, `[[`, 1 )
secondStr=lapply(s, `[[`, 2 )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Knock off that first character: which the symbol we don‚Äôt want and slap a minus sign back on .&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;secondStr= lapply(secondStr,function(x) {paste0(&amp;quot;E-&amp;quot;,substring(x,2))})&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, stitch the two parts of the string back together now that the minus sign has been corrected and convert it to numeric.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mapply( function(firstStr, secondStr) {as.numeric(paste0(firstStr,secondStr) )}, firstStr, secondStr )&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 7.7e-15 1.7e-26 3.1e-08 8.8e-10 9.6e-17 2.8e-11 6.5e-16 1.7e-09
##  [9] 5.1e-08 1.6e-08 3.3e-09 5.0e-11 1.5e-07 4.6e-08 9.6e-05 2.5e-06
## [17] 1.3e-05 7.4e-06 6.7e-06 1.0e-05 1.6e-06&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It works! Make sure to replace the column in the data.frame.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;nature_genetics_table2_clean$Stage1_MetaP= mapply( function(firstStr, secondStr) {as.numeric(paste0(firstStr,secondStr) )}, firstStr, secondStr )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;See how it appears in the table now as a numeric? Try wrangling the rest of these columns into a useful format on your own and let me know how it goes.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;kable(nature_genetics_table2_clean[1:3,])&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;SNP&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Chr&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Position&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Closest gene&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Major/minor alleles&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;MAF&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Stage1_OR&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Stage1_MetaP&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Stage2_OR&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Stage2_MetaP&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Overall_OR&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Overall_MetaP&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;I2_Percent/P&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;1.3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;rs6656401&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;207692049&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CR1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;G/A&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.197&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.17 (1.12‚Äì1.22)&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.21 (1.14‚Äì1.28)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;7.9 √ó 10‚àí11&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.18 (1.14‚Äì1.22)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;5.7 √ó 10‚àí24&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0, 7.8 √ó 10‚àí1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Known GWAS-defined associated genes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;1.4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;rs6733839&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;127892810&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;BIN1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;C/T&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.409&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.21 (1.17‚Äì1.25)&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.24 (1.18‚Äì1.29)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;3.4 √ó 10‚àí19&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.22 (1.18‚Äì1.25)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;6.9 √ó 10‚àí44&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;28, 6.1 √ó 10‚àí2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Known GWAS-defined associated genes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;1.5&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;rs10948363&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;47487762&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CD2AP&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;A/G&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.266&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.10 (1.07‚Äì1.14)&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.09 (1.04‚Äì1.15)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;4.1 √ó 10‚àí4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.10 (1.07‚Äì1.13)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;5.2 √ó 10‚àí11&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0, 9 √ó 10‚àí1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Known GWAS-defined associated genes&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;conclusions&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Conclusions&lt;/h3&gt;
&lt;p&gt;Today we went through getting data directly into R from an html table (a table on a webpage) and demonstrated how to get the data into a useful format. There are a couple advantages of doing this work in R instead of using excel‚Äì if that‚Äôs even an option. First, R is more reproducible. Second, once you have code for wrangling one table, wrangling the next one will be much faster. At the end of the day though, it is always easiest when the table is shared as a csv or excel file; something to keep in mind when preparing your own papers.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;reproducibility&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Reproducibility&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;## Session info ----------------------------------------------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  setting  value                       
##  version  R version 3.4.4 (2018-03-15)
##  system   x86_64, mingw32             
##  ui       RTerm                       
##  language (EN)                        
##  collate  English_United States.1252  
##  tz       America/New_York            
##  date     2018-04-20&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Packages --------------------------------------------------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  package   * version date       source                           
##  backports   1.1.2   2017-12-13 CRAN (R 3.4.3)                   
##  base      * 3.4.4   2018-03-15 local                            
##  blogdown    0.5.12  2018-03-23 Github (rstudio/blogdown@21f14af)
##  bookdown    0.7     2018-02-18 CRAN (R 3.4.3)                   
##  compiler    3.4.4   2018-03-15 local                            
##  curl        3.1     2017-12-12 CRAN (R 3.4.3)                   
##  datasets  * 3.4.4   2018-03-15 local                            
##  devtools  * 1.13.5  2018-02-18 CRAN (R 3.4.3)                   
##  digest      0.6.15  2018-01-28 CRAN (R 3.4.3)                   
##  evaluate    0.10.1  2017-06-24 CRAN (R 3.4.3)                   
##  graphics  * 3.4.4   2018-03-15 local                            
##  grDevices * 3.4.4   2018-03-15 local                            
##  highr       0.6     2016-05-09 CRAN (R 3.4.3)                   
##  htmltools   0.3.6   2017-04-28 CRAN (R 3.4.3)                   
##  httr        1.3.1   2017-08-20 CRAN (R 3.4.3)                   
##  knitr     * 1.20    2018-02-20 CRAN (R 3.4.3)                   
##  magrittr    1.5     2014-11-22 CRAN (R 3.4.3)                   
##  memoise     1.1.0   2017-04-21 CRAN (R 3.4.3)                   
##  methods   * 3.4.4   2018-03-15 local                            
##  R6          2.2.2   2017-06-17 CRAN (R 3.4.3)                   
##  Rcpp        0.12.16 2018-03-13 CRAN (R 3.4.4)                   
##  rmarkdown   1.9     2018-03-01 CRAN (R 3.4.3)                   
##  rprojroot   1.3-2   2018-01-03 CRAN (R 3.4.3)                   
##  rvest     * 0.3.2   2016-06-17 CRAN (R 3.4.3)                   
##  selectr     0.3-2   2018-03-05 CRAN (R 3.4.3)                   
##  stats     * 3.4.4   2018-03-15 local                            
##  stringi     1.1.7   2018-03-12 CRAN (R 3.4.4)                   
##  stringr     1.3.0   2018-02-19 CRAN (R 3.4.3)                   
##  tools       3.4.4   2018-03-15 local                            
##  utils     * 3.4.4   2018-03-15 local                            
##  withr       2.1.2   2018-03-15 CRAN (R 3.4.4)                   
##  xfun        0.1     2018-01-22 CRAN (R 3.4.3)                   
##  xml2      * 1.2.0   2018-01-24 CRAN (R 3.4.3)                   
##  yaml        2.1.18  2018-03-08 CRAN (R 3.4.3)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Textmate setup (Mac only)</title>
      <link>/post/textmate-setup-mac-only/</link>
      <pubDate>Sun, 11 Mar 2018 00:00:00 +0000</pubDate>
      <guid>/post/textmate-setup-mac-only/</guid>
      <description>


&lt;p&gt;By &lt;a href=&#34;http://lcolladotor.github.io&#34;&gt;L. Collado-Torres&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For the past 6-7 years I have been using &lt;em&gt;TextMate 2&lt;/em&gt; as my text editor which I‚Äôve found useful for R code, bash, Markdown, etc. You could also look into &lt;em&gt;Sublime Text&lt;/em&gt; or use &lt;em&gt;RStudio&lt;/em&gt; (post about this setup coming soon).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 1.37.28 PM.png&#34; alt=&#34;textmate look&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;Sometimes students are interested in this setup, which is what I‚Äôll document here. Though I want to highlight that you can get a very similar setup using other tools. Note that this setup only works for Mac computers.&lt;/p&gt;
&lt;div id=&#34;setup&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Setup&lt;/h3&gt;
&lt;p&gt;First, install &lt;a href=&#34;http://macromates.com/download&#34;&gt;TextMate 2&lt;/a&gt; for free. &lt;em&gt;TextMate&lt;/em&gt; allows users to contribute &lt;em&gt;bundles&lt;/em&gt; which are a set of tools that enhance the editor. For example, if you want to quickly insert an R code chunk in a &lt;code&gt;.Rmd&lt;/code&gt; file you can add a &lt;em&gt;command&lt;/em&gt; for it inside a bundle. You can also use a bundle to get the editor to recognize R code inside an R markdown code chunk. Probably the easiest way to get jump-started is to copy my exact setup.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;change-some-preferences&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Change some preferences&lt;/h3&gt;
&lt;p&gt;So next, go to the &lt;em&gt;preferences&lt;/em&gt; menu&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 1.41.05 PM.png&#34; alt=&#34;preferences&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;and under bundle, choose the R bundle as shown below.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 1.40.54 PM.png&#34; alt=&#34;bundle&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;As you can see, it hasn‚Äôt been updated in a while. I have made a few edits myself here and there which I‚Äôll describe in the next section.&lt;/p&gt;
&lt;p&gt;You should also enable running &lt;em&gt;TextMate&lt;/em&gt; from the terminal.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 2.15.06 PM.png&#34; alt=&#34;enable terminal&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;Finally, here are my main file preferences: I want my files to be &lt;code&gt;.R&lt;/code&gt; files by default and to use linux line endings to avoid issues later on.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 2.39.09 PM.png&#34; alt=&#34;main prefs&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;adding-bundles-from-git&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Adding bundles from git&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;TextMate&lt;/em&gt; allows you to install bundles by adding the bundle files in a specific folder. The bundle files are most likely in a GitHub repository, so you just need to clone (download) them to where &lt;em&gt;TextMate&lt;/em&gt; expect them to be.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/lcolladotor/r.tmbundle&#34; class=&#34;uri&#34;&gt;https://github.com/lcolladotor/r.tmbundle&lt;/a&gt; for R and sending code to be evaluated in an iTerm2 terminal (setup explained later)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/noniq/Merge-Markers.tmbundle&#34; class=&#34;uri&#34;&gt;https://github.com/noniq/Merge-Markers.tmbundle&lt;/a&gt; for git merging&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/elia/base16-themes.tmbundle&#34; class=&#34;uri&#34;&gt;https://github.com/elia/base16-themes.tmbundle&lt;/a&gt; for theme colors&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/lcolladotor/criticmarkup.tmbundle&#34; class=&#34;uri&#34;&gt;https://github.com/lcolladotor/criticmarkup.tmbundle&lt;/a&gt; for CriticMarkup in Markdown files&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/lcolladotor/knitr.tmbundle&#34; class=&#34;uri&#34;&gt;https://github.com/lcolladotor/knitr.tmbundle&lt;/a&gt; for &lt;code&gt;knitr::knit()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/lcolladotor/markdown-redcarpet.tmbundle&#34; class=&#34;uri&#34;&gt;https://github.com/lcolladotor/markdown-redcarpet.tmbundle&lt;/a&gt; for basically running &lt;code&gt;rmarkdown::render()&lt;/code&gt; on the document at hand and previewing it live (if it‚Äôs an html doc). It also makes it so that R code inside code chunks will be recognized as such, enabling all the R code shortcuts.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;## Go to main bundle directory
cd ~/Library/Application\ Support/TextMate/

## Download Leonardo&amp;#39;s bundles (he uses the leo branch)
## For R, sendind code to iTerm2
git clone https://github.com/lcolladotor/r.tmbundle.git

## For merging
git clone https://github.com/noniq/Merge-Markers.tmbundle.git

## For more color themes
git clone https://github.com/elia/base16-themes.tmbundle.git

## For commenting Markdown files
git clone https://github.com/lcolladotor/criticmarkup.tmbundle.git

## For knitr::knit()
git clone https://github.com/lcolladotor/knitr.tmbundle.git

## For rmarkdown::render()
git clone https://github.com/lcolladotor/markdown-redcarpet.tmbundle.git&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As you can see, these bundles help adapt &lt;em&gt;TextMate2&lt;/em&gt; for working with R files of different flavors. But it‚Äôs not beginner friendly, hence the upcoming blog post about using RStudio.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;some-feature-highlights&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Some feature highlights&lt;/h3&gt;
&lt;p&gt;One of the features that I really like from &lt;em&gt;TextMate&lt;/em&gt; is searching/replacing (you can use regex) across all the files and sub-directories of a given directory. It‚Äôs very useful when trying to fix a common typo across different files or finding all the places where a function/argument was used. The latter one is handy when you are looking at someone else‚Äôs code. It‚Äôs basically like searching inside a GitHub repository: example, &lt;a href=&#34;https://github.com/rstudio/blogdown/search?utf8=%E2%9C%93&amp;amp;q=baseurl&amp;amp;type=&#34;&gt;search &lt;code&gt;baseurl&lt;/code&gt;&lt;/a&gt; in all of &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; for finding the code that reads it from a config file, which I did for this &lt;a href=&#34;https://github.com/rstudio/blogdown/pull/275&#34;&gt;PR&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 2.29.33 PM.png&#34; alt=&#34;search in dir&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;You can also comment all the lines of code you have selected fairly easily using the &lt;code&gt;Source&lt;/code&gt; bundle.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 2.41.31 PM.png&#34; alt=&#34;comment all lines&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;I‚Äôve also used the &lt;code&gt;Text&lt;/code&gt;, &lt;code&gt;LaTeX&lt;/code&gt; and &lt;code&gt;Gist&lt;/code&gt; bundles, though not as frequently. Also, &lt;em&gt;TextMate&lt;/em&gt; automatically spell checks for you and knows to ignore R markdown code chunks.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;evaluating-code-in-r-console-or-iterm2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Evaluating code in R console or iTerm2&lt;/h3&gt;
&lt;p&gt;If you download and install the &lt;a href=&#34;https://www.iterm2.com/&#34;&gt;iTerm2&lt;/a&gt; terminal, you can configure &lt;em&gt;TextMate&lt;/em&gt; to evaluate the code in that terminal. The particular code I have for doing this is in the &lt;code&gt;leo&lt;/code&gt; branch of the following repo &lt;a href=&#34;https://github.com/lcolladotor/r.tmbundle/commits/leo&#34; class=&#34;uri&#34;&gt;https://github.com/lcolladotor/r.tmbundle/commits/leo&lt;/a&gt;. In total I use 3 different keyboard shortcuts depending on whether I want to evaluate the code:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;in an R console window;&lt;/li&gt;
&lt;li&gt;in an R console window after automatically running &lt;code&gt;setwd()&lt;/code&gt; to the directory that contains the files I‚Äôm looking at;&lt;/li&gt;
&lt;li&gt;to the &lt;em&gt;iTerm2&lt;/em&gt; terminal, which is useful when working with a computing cluster.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;getwd() ## run in terminal with cmd + enter shortcut

getwd() ## run in R console using backtip (`) shortcut

getwd() ## run in R console using cmd + R, runs setwd() first&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 2.13.32 PM.png&#34; alt=&#34;evaluating code&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;running-rmarkdownrender&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Running &lt;code&gt;rmarkdown::render()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;If I‚Äôm working with an R Markdown file (&lt;code&gt;.Rmd&lt;/code&gt; extension), I frequently use the &lt;code&gt;alt (option) + t&lt;/code&gt; shortcut for running &lt;code&gt;rmarkdown::render()&lt;/code&gt; and viewing the output file.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 2.19.30 PM.png&#34; alt=&#34;knit with rmarkdown&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;For example, if I‚Äôm working with the &lt;code&gt;recount-brain/index.Rmd&lt;/code&gt; file (you can get it &lt;a href=&#34;https://github.com/LieberInstitute/recount-brain/blob/master/index.Rmd&#34;&gt;here&lt;/a&gt;), my setup allows me to run all the R shortcuts. That‚Äôs because it recognizes the R code chunk syntax and uses the &lt;code&gt;source.r&lt;/code&gt; &lt;em&gt;scope&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 2.23.57 PM.png&#34; alt=&#34;rmd scope&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;Anyway, after using &lt;code&gt;alt (option) + t&lt;/code&gt; &lt;em&gt;TextMate&lt;/em&gt; shows me the final html.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 2.21.37 PM.png&#34; alt=&#34;rendered html&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;A lot of the bundles in TextMate are from the days when we run &lt;code&gt;Sweave()&lt;/code&gt;. So they work well with &lt;code&gt;.Rnw&lt;/code&gt; files and all the like. I did modify one of them to use &lt;code&gt;knitr::knit()&lt;/code&gt; instead of &lt;code&gt;Sweave()&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;mate-and-rmate&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;code&gt;mate&lt;/code&gt; and &lt;code&gt;rmate&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;If you enable the terminal preferences you can now use the &lt;code&gt;mate&lt;/code&gt; command in any directory in your laptop. &lt;em&gt;TextMate&lt;/em&gt; will open and show you all the tabs of files you had last opened in that same directory. This behavior is also a part of the &lt;code&gt;.Rproj&lt;/code&gt; files with RStudio.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 2.46.51 PM.png&#34; alt=&#34;run mate&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;The command I &lt;em&gt;really&lt;/em&gt; like is &lt;code&gt;rmate&lt;/code&gt; because it enables me to remotely open a file from the cluster in &lt;em&gt;TextMate&lt;/em&gt;, which combined with the &lt;em&gt;evaluate in iTerm2&lt;/em&gt; command makes it easy to work. Basically, I power up an &lt;em&gt;iTerm2&lt;/em&gt; terminal, log into the cluster, navigate to the directory that contains the files I‚Äôm working with, and then open them remotely with &lt;code&gt;rmate&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 2.52.21 PM.png&#34; alt=&#34;rmate&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;Setting up &lt;code&gt;rmate&lt;/code&gt; takes a bit of work but it‚Äôs definitely worth it.&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;In the cluster, install &lt;code&gt;rmate&lt;/code&gt; following the instructions at &lt;a href=&#34;https://github.com/textmate/rmate&#34; class=&#34;uri&#34;&gt;https://github.com/textmate/rmate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Find a port that works for doing the forwarding. The default one will likely be taken already by another user. Find more about this &lt;a href=&#34;https://www.ssh.com/ssh/tunneling/example&#34;&gt;here&lt;/a&gt;. There they use &lt;code&gt;ssh -R 8080:localhost:80 public.example.com&lt;/code&gt; for testing. Sadly, I don‚Äôt know of a quick and easy way to find a port for you to use :/&lt;/li&gt;
&lt;li&gt;Edit your cluster‚Äôs &lt;code&gt;~/.bashrc&lt;/code&gt; file with the port information. Mine includes these lines where &lt;code&gt;someSecretPortNumber&lt;/code&gt; is replaced by my port number.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;## rmate port
# https://github.com/textmate/rmate
export RMATE_PORT=&amp;quot;someSecretPortNumber&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;4&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Edit your laptop‚Äôs &lt;code&gt;~/.ssh/config&lt;/code&gt; file so you don‚Äôt have to specify the port every time you &lt;code&gt;ssh&lt;/code&gt; into the &lt;code&gt;JHPCE&lt;/code&gt; cluster:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;## Will work later as (aka, less typing):
## ssh j
## ssh cluster
Host j cluster
    User yourUsernameGoesHere
    Hostname jhpce01.jhsph.edu
    RemoteForward someSecretPortNumber localhost:someSecretPortNumber
    ForwardX11 yes
    ForwardX11Trusted yes&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;5&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Edit your cluster‚Äôs &lt;code&gt;~/.ssh/config&lt;/code&gt; file so the port gets forwarded also when you access a compute node with &lt;code&gt;qrsh&lt;/code&gt;. All of JHPCE‚Äôs compute nodes are named &lt;code&gt;compute&lt;/code&gt;something, so we can take advantage of that in the config file.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;# For rmate
Host compute*
    RemoteForward someSecretPortNumber localhost:someSecretPortNumber&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once you do these steps, &lt;code&gt;rmate&lt;/code&gt; should work on a new terminal window.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/3oeSAz6FqXCKuNFX6o/giphy.gif&#34;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://giphy.com/reactions/featured/good-luck&#34;&gt;Source&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;textmate-variables&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;em&gt;TextMate&lt;/em&gt; variables&lt;/h3&gt;
&lt;p&gt;I don‚Äôt remember right now if I manually edited the &lt;em&gt;TextMate&lt;/em&gt; variables, but just in case, here‚Äôs the info.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-textmate-setup-mac-only_files/Screen Shot 2018-03-11 at 2.34.38 PM.png&#34; alt=&#34;textmate vars&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;acknowledgements&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This blog post was made possible thanks to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;http://bioconductor.org/packages/BiocStyle&#34;&gt;BiocStyle&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Oles_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/Bioconductor/BiocStyle&#39;&gt;Ole≈õ, Morgan, and Huber, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Xie_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/rstudio/blogdown&#39;&gt;Xie, Hill, and Thomas, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=devtools&#34;&gt;devtools&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Wickham_2018&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=devtools&#39;&gt;Wickham, Hester, and Chang, 2018&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;knitcitations&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Boettiger_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=knitcitations&#39;&gt;Boettiger, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Boettiger_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Boettiger_2017&#34;&gt;[1]&lt;/a&gt;&lt;cite&gt; C. Boettiger. &lt;em&gt;knitcitations: Citations for ‚ÄòKnitr‚Äô Markdown Files&lt;/em&gt;. R package version 1.0.8. 2017. URL: &lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;https://CRAN.R-project.org/package=knitcitations&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Oles_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Oles_2017&#34;&gt;[2]&lt;/a&gt;&lt;cite&gt; A. Ole≈õ, M. Morgan and W. Huber. &lt;em&gt;BiocStyle: Standard styles for vignettes and other Bioconductor documents&lt;/em&gt;. R package version 2.6.1. 2017. URL: &lt;a href=&#34;https://github.com/Bioconductor/BiocStyle&#34;&gt;https://github.com/Bioconductor/BiocStyle&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Wickham_2018&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Wickham_2018&#34;&gt;[3]&lt;/a&gt;&lt;cite&gt; H. Wickham, J. Hester and W. Chang. &lt;em&gt;devtools: Tools to Make Developing R Packages Easier&lt;/em&gt;. R package version 1.13.5. 2018. URL: &lt;a href=&#34;https://CRAN.R-project.org/package=devtools&#34;&gt;https://CRAN.R-project.org/package=devtools&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Xie_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Xie_2017&#34;&gt;[4]&lt;/a&gt;&lt;cite&gt; Y. Xie, A. P. Hill and A. Thomas. &lt;em&gt;blogdown: Creating Websites with R Markdown&lt;/em&gt;. ISBN 978-0815363729. Boca Raton, Florida: Chapman and Hall/CRC, 2017. URL: &lt;a href=&#34;https://github.com/rstudio/blogdown&#34;&gt;https://github.com/rstudio/blogdown&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;reproducibility&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Reproducibility&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;## Session info ----------------------------------------------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  setting  value                       
##  version  R version 3.4.3 (2017-11-30)
##  system   x86_64, darwin15.6.0        
##  ui       X11                         
##  language (EN)                        
##  collate  en_US.UTF-8                 
##  tz       America/New_York            
##  date     2018-03-11&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Packages --------------------------------------------------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  package       * version date       source                               
##  backports       1.1.2   2017-12-13 CRAN (R 3.4.3)                       
##  base          * 3.4.3   2017-12-07 local                                
##  bibtex          0.4.2   2017-06-30 CRAN (R 3.4.1)                       
##  BiocStyle     * 2.6.1   2017-11-30 Bioconductor                         
##  blogdown        0.5.10  2018-03-10 Github (lcolladotor/blogdown@471b086)
##  bookdown        0.7     2018-02-18 cran (@0.7)                          
##  colorout      * 1.2-0   2018-02-19 Github (jalvesaq/colorout@2f01173)   
##  compiler        3.4.3   2017-12-07 local                                
##  datasets      * 3.4.3   2017-12-07 local                                
##  devtools      * 1.13.5  2018-02-18 CRAN (R 3.4.3)                       
##  digest          0.6.15  2018-01-28 CRAN (R 3.4.3)                       
##  evaluate        0.10.1  2017-06-24 CRAN (R 3.4.1)                       
##  graphics      * 3.4.3   2017-12-07 local                                
##  grDevices     * 3.4.3   2017-12-07 local                                
##  htmltools       0.3.6   2017-04-28 CRAN (R 3.4.0)                       
##  httr            1.3.1   2017-08-20 CRAN (R 3.4.1)                       
##  jsonlite        1.5     2017-06-01 CRAN (R 3.4.0)                       
##  knitcitations * 1.0.8   2017-07-04 CRAN (R 3.4.1)                       
##  knitr           1.20    2018-02-20 cran (@1.20)                         
##  lubridate       1.7.3   2018-02-27 CRAN (R 3.4.3)                       
##  magrittr        1.5     2014-11-22 CRAN (R 3.4.0)                       
##  memoise         1.1.0   2017-04-21 CRAN (R 3.4.0)                       
##  methods       * 3.4.3   2017-12-07 local                                
##  plyr            1.8.4   2016-06-08 CRAN (R 3.4.0)                       
##  R6              2.2.2   2017-06-17 CRAN (R 3.4.0)                       
##  Rcpp            0.12.15 2018-01-20 CRAN (R 3.4.3)                       
##  RefManageR      0.14.20 2017-08-17 CRAN (R 3.4.1)                       
##  rmarkdown       1.9     2018-03-01 cran (@1.9)                          
##  rprojroot       1.3-2   2018-01-03 CRAN (R 3.4.3)                       
##  stats         * 3.4.3   2017-12-07 local                                
##  stringi         1.1.6   2017-11-17 CRAN (R 3.4.2)                       
##  stringr         1.3.0   2018-02-19 cran (@1.3.0)                        
##  tools           3.4.3   2017-12-07 local                                
##  utils         * 3.4.3   2017-12-07 local                                
##  withr           2.1.1   2017-12-19 CRAN (R 3.4.3)                       
##  xfun            0.1     2018-01-22 CRAN (R 3.4.3)                       
##  xml2            1.2.0   2018-01-24 CRAN (R 3.4.3)                       
##  yaml            2.1.18  2018-03-08 cran (@2.1.18)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Contributing to the LIBD rstats club</title>
      <link>/post/contributing-to-the-libd-rstats-club/</link>
      <pubDate>Fri, 09 Mar 2018 00:00:00 +0000</pubDate>
      <guid>/post/contributing-to-the-libd-rstats-club/</guid>
      <description>


&lt;p&gt;In this blog post &lt;a href=&#34;https://www.libd.org/team/Leonardo-Collado-Torres/&#34;&gt;Leonardo Collado-Torres&lt;/a&gt; explains how to contribute posts to the &lt;strong&gt;LIBD rstats club&lt;/strong&gt;. While some parameters are specific to this blog, you could also use this for creating your own community blog.&lt;/p&gt;
&lt;div id=&#34;install-necessary-tools&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Install necessary tools&lt;/h3&gt;
&lt;p&gt;We first need to get the appropriate tools installed in our computer.&lt;/p&gt;
&lt;div id=&#34;r&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;1. R&lt;/h4&gt;
&lt;p&gt;Lets start by installing the latest version of &lt;a href=&#34;https://cran.r-project.org/&#34;&gt;R&lt;/a&gt;. At the time of writing this post, that would be R 3.4.3 but in reality this should work with any R 3.4.x version. It might even work with earlier versions, but it‚Äôd be a bummer to find out that we have an R version problem later on.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;rstudio&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;2. RStudio&lt;/h4&gt;
&lt;p&gt;Once we have an up to date R version, lets install &lt;a href=&#34;https://www.rstudio.com/products/rstudio/download/&#34;&gt;RStudio&lt;/a&gt;. By using the latest version we will have access to &lt;em&gt;RStudio addin&lt;/em&gt; menus, which will make our life much easier. Since we will be using RStudio quite a bit, it‚Äôs best to work from your laptop/computer than any server or cluster where you might not have the flexibility to install/update RStudio and R.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;blogdown&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;3. &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt;&lt;/h4&gt;
&lt;p&gt;We next need to install the main package that we will be using for creating our blog posts, that is &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Xie_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/rstudio/blogdown&#39;&gt;Xie, Hill, and Thomas, 2017&lt;/a&gt;). At the time of writing this post, the version that we need to use is only available in the development branch. So we need to install &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; via &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=devtools&#34;&gt;devtools&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Wickham_2018&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=devtools&#39;&gt;Wickham, Hester, and Chang, 2018&lt;/a&gt;).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## If needed install devtools first:
install.packages(&amp;#39;devtools&amp;#39;)

## Install development version
devtools::install_github(&amp;#39;rstudio/blogdown&amp;#39;)

## If you are reading this in the fiture, you might only need
install.packages(&amp;#39;blogdown&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;At some point we might need two other extra packages that &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; uses. It will show you a message when that happens, so you can install them when you need them or you could go ahead and get them anyway.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(c(&amp;#39;later&amp;#39;, &amp;#39;processx&amp;#39;))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;hugo&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;4. &lt;code&gt;hugo&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;We are almost there! &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; uses &lt;a href=&#34;https://gohugo.io/&#34;&gt;hugo&lt;/a&gt; which they claim is &lt;em&gt;the world‚Äôs fastest framework for building websites&lt;/em&gt;. &lt;code&gt;hugo&lt;/code&gt; is a bit complicated, but it makes maintaining a complicated website such as a blog super easy. Basically, we will be working in the &lt;code&gt;rstatsclubsource&lt;/code&gt; directory and &lt;code&gt;hugo&lt;/code&gt; will create the final version we can share around in the directory &lt;code&gt;rstatsclubsource/public&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Ok, lets go head and install it with&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;blogdown::install_hugo()&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;git&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;5. &lt;code&gt;git&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;To get the files and interact with other &lt;strong&gt;LIBD rstats club&lt;/strong&gt; members you will need to use &lt;code&gt;git&lt;/code&gt;, which you can install following &lt;a href=&#34;http://happygitwithr.com/install-git.html&#34;&gt;these instructions&lt;/a&gt; from the &lt;a href=&#34;http://happygitwithr.com/&#34;&gt;happygitwithr&lt;/a&gt; website. A note for Windows users: &lt;a href=&#34;https://gitforwindows.org/&#34;&gt;get git for windows&lt;/a&gt; because it includes &lt;code&gt;git bash&lt;/code&gt; and will enable you to run some commands that we will need later on. Even more advanced for Windows users, when installing &lt;code&gt;git bash&lt;/code&gt; choose the &lt;em&gt;use git and optional Unix tools from the Windows Command Prompt&lt;/em&gt; as described &lt;a href=&#34;https://github.com/rstudio/rstudio/issues/2224#issuecomment-368260312&#34;&gt;in detail here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also get a &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; account if you don‚Äôt have one already. Optionally &lt;a href=&#34;https://help.github.com/articles/connecting-to-github-with-ssh/&#34;&gt;set up ssh keys&lt;/a&gt; for password-less login, though it‚Äôs not needed.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;access-blog-source-files&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Access blog source files&lt;/h3&gt;
&lt;p&gt;The file structure of our blog involves a total of 3 GitHub repositories that are related to each other as shown below. However, you will only need to interact with one of them.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rstatsclubsource
    ## From https://github.com/LieberInstitute/rstatsclubsource
    content/
        post/
        ...
    static/
        post/
        img/
        ...
    themes/
        hugo-academic/
        ## From https://github.com/gcushen/hugo-academic
        ## linked as a git submodule
    public/
        ## https://github.com/LieberInstitute/rstatsclub
        ## Hosts the files that make up the website
        ## http://LieberInstitute.github.io/rstatsclub/&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The main directory for the blog is &lt;code&gt;rstatsclubsource&lt;/code&gt; and you can access it at &lt;a href=&#34;https://github.com/LieberInstitute/rstatsclubsource&#34;&gt;github.com/LieberInstitute/rstatsclubsource&lt;/a&gt; if you are a member of the &lt;strong&gt;LIBD rstats club&lt;/strong&gt; and have logged in to your GitHub account. This directory contains many files that &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; understands and that you don‚Äôt really need to change. The main sub-directory that you will be interacting with is &lt;code&gt;rstatsclubsource/content/post&lt;/code&gt; where your new post files will get saved by &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt;. If you insert images, &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; will automatically create the directory &lt;code&gt;rstatsclubsource/static/post/2018-03-09_postTitle_files&lt;/code&gt; (&lt;a href=&#34;https://github.com/LieberInstitute/rstatsclubsource/tree/master/static/post/2018-03-06-test-post-for-checking-website_files&#34;&gt;example&lt;/a&gt;), but don‚Äôt worry about it.&lt;/p&gt;
&lt;p&gt;Ok, lets get the files. Open your terminal or &lt;code&gt;git bash&lt;/code&gt; (Windows) and navigate to the directory where you will store your copy of the source files.&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;## Works in Mac and Windows (with git bash)
cd ~/Desktop

## Windows example command if you have more than 1 disk
cd /f/Desktop&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next clone &lt;a href=&#34;https://github.com/LieberInstitute/rstatsclubsource&#34;&gt;github.com/LieberInstitute/rstatsclubsource&lt;/a&gt;. Here we use https since that doesn‚Äôt require extra setup, but cloning by ssh also works.&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;git clone https://github.com/LieberInstitute/rstatsclubsource.git&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-09-contributing-to-the-libd-rstats-club_files/Screen Shot 2018-03-08 at 8.47.18 PM.png&#34; alt=&#34;clone source repo&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;After a successful clone, we should have created the directory &lt;code&gt;~/Desktop/rstatsclubsource&lt;/code&gt;. Lets change to this new directory.&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;cd rstatsclubsource&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Our cloning process also created a placeholder for our hugo theme (&lt;a href=&#34;https://github.com/gcushen/hugo-academic&#34;&gt;hugo-academic&lt;/a&gt;) but it‚Äôs contents are empty.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ls -lh themes/hugo-academic/
total 0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Lets fill them up by running the following git command.&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;git submodule update --init --recursive&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-09-contributing-to-the-libd-rstats-club_files/Screen Shot 2018-03-08 at 9.05.56 PM.png&#34; alt=&#34;git submodule&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;If we now check the contents of the &lt;code&gt;themes/hugo-academic&lt;/code&gt; directory we should see several files now (here‚Äôs a screenshot from Windows using &lt;code&gt;git bash&lt;/code&gt;).&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;ls -lh themes/hugo-academic&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-09-contributing-to-the-libd-rstats-club_files/theme files.PNG&#34; alt=&#34;windows theme files&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;preview-website&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Preview website&lt;/h3&gt;
&lt;p&gt;Our setup is now complete! We can now start writing blog posts using &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt;. Open the &lt;code&gt;~/Desktop/rstatsclubsource/rstatsclubsource.Rproj&lt;/code&gt; file, which should open a new RStudio window automatically. Find the &lt;em&gt;Addins&lt;/em&gt; menu on the top of your window, and select the &lt;code&gt;Serve Site&lt;/code&gt; option in the drop-down menu.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-09-contributing-to-the-libd-rstats-club_files/Screen Shot 2018-03-08 at 9.35.34 PM.png&#34; alt=&#34;serve site&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;This addin will create a local version of the website you can preview in the RStudio Viewer pane.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-09-contributing-to-the-libd-rstats-club_files/Screen Shot 2018-03-08 at 9.19.02 PM.png&#34; alt=&#34;RStudio viewer pane&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;If you click in the &lt;em&gt;show in new window&lt;/em&gt; symbol as shown below&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-09-contributing-to-the-libd-rstats-club_files/Screen%20Shot%202018-03-08%20at%209.20.28%20PM.png&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;you then can preview the website in your main browser:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-09-contributing-to-the-libd-rstats-club_files/Screen Shot 2018-03-08 at 9.21.44 PM.png&#34; alt=&#34;preview browser&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;This will be super useful when you are writing a new blog post because any changes you make will automatically refresh the local preview version after a second of two (only after you save the file you are editing). Sometimes you might have to manually refresh your browser (like when you make too many updates in a row). The preview website works as long as you have the &lt;em&gt;Serve Site&lt;/em&gt; addin running on the background.&lt;/p&gt;
&lt;div id=&#34;all-our-files&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;All our files&lt;/h4&gt;
&lt;p&gt;By running &lt;em&gt;Serve Site&lt;/em&gt; &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; actually populated automatically our &lt;code&gt;rstatsclubsource/public&lt;/code&gt; directory. So our full list of files look somewhat like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## Found about tree from
## https://stackoverflow.com/questions/3455625/linux-command-to-print-directory-structure-in-the-form-of-a-tree
## Intall in a Mac with homebrew:
## brew install tree
$ tree -d rstatsclubsource
.
‚îú‚îÄ‚îÄ archetypes
‚îú‚îÄ‚îÄ content
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ home
‚îÇ¬†¬† ‚îî‚îÄ‚îÄ post
‚îú‚îÄ‚îÄ data
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ fonts
‚îÇ¬†¬† ‚îî‚îÄ‚îÄ themes
‚îú‚îÄ‚îÄ layouts
‚îÇ¬†¬† ‚îî‚îÄ‚îÄ partials
‚îú‚îÄ‚îÄ public
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ 2018
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ 03
‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ 06
‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ test-post-for-checking-website
‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ 09
‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îî‚îÄ‚îÄ welcome-to-the-libd-rstats-club
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ categories
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ page
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ 1
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ rstats
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ page
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ 1
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ setup
‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ page
‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îî‚îÄ‚îÄ 1
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ home
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ img
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ js
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ post
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ 2018-03-06-test-post-for-checking-website_files
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ figure-html
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ page
‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ 1
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ publication_types
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ page
‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ 1
‚îÇ¬†¬† ‚îî‚îÄ‚îÄ tags
‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ blog
‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ page
‚îÇ¬†¬†     ‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ 1
‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ page
‚îÇ¬†¬†         ‚îî‚îÄ‚îÄ 1
‚îú‚îÄ‚îÄ static
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ img
‚îÇ¬†¬† ‚îî‚îÄ‚îÄ post
‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ 2018-03-06-test-post-for-checking-website_files
‚îÇ¬†¬†         ‚îî‚îÄ‚îÄ figure-html
‚îî‚îÄ‚îÄ themes
    ‚îî‚îÄ‚îÄ hugo-academic
        ‚îú‚îÄ‚îÄ archetypes
        ‚îú‚îÄ‚îÄ data
        ‚îú‚îÄ‚îÄ exampleSite
        ‚îú‚îÄ‚îÄ i18n
        ‚îú‚îÄ‚îÄ images
        ‚îú‚îÄ‚îÄ layouts
        ‚îî‚îÄ‚îÄ static&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Some of the structure looks redundant right? Well, that‚Äôs because &lt;code&gt;hugo&lt;/code&gt; and &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; tried to keep everything super organized and re-use some of the file structure for the final version of the website (the one inside &lt;code&gt;rstatsclubsource/public&lt;/code&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;write-a-blog-post&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Write a blog post&lt;/h3&gt;
&lt;p&gt;We now have a working full preview version of the website in our computer. It‚Äôs finally time to write a blog post. The good thing is that we don‚Äôt need to do all the setup steps again!&lt;/p&gt;
&lt;div id=&#34;update-if-necessary&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Update if necessary&lt;/h4&gt;
&lt;p&gt;If you paused midway for a few days, it‚Äôs likely that your files are not the latest ones. So please &lt;code&gt;git pull&lt;/code&gt; the latest files from &lt;a href=&#34;https://github.com/LieberInstitute/rstatsclubsource&#34;&gt;github.com/LieberInstitute/rstatsclubsource&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;cd ~/Desktop/rstatsclubsource
git pull&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;start-a-blog-post&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Start a blog post&lt;/h4&gt;
&lt;p&gt;To start a new blog post, use the &lt;em&gt;New Post&lt;/em&gt; &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; addin.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-09-contributing-to-the-libd-rstats-club_files/Screen Shot 2018-03-08 at 9.18.21 PM.png&#34; alt=&#34;new post&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;This will open up a window where you can specify the blog post title. The title will automatically fill out the &lt;em&gt;slug&lt;/em&gt; which is used in the final URL of the post. It also lets you choose a date, when is when the blog post will be made publicly visible.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-09-contributing-to-the-libd-rstats-club_files/Screen Shot 2018-03-08 at 6.41.49 PM.png&#34; alt=&#34;New post addin&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;author-and-extension&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Author and extension&lt;/h4&gt;
&lt;p&gt;Lets start by entering the author information (leave blank if you want it to be anonymous) and selecting the post format. We highly recommend you use the &lt;code&gt;.Rmd&lt;/code&gt; format for your blog posts, even to the point that you should just make it our default option. To do so you have to edit/create an &lt;code&gt;.Rprofile&lt;/code&gt; file in your computer at your home directory, that is &lt;code&gt;~/.Rprofile&lt;/code&gt;. Then use these options (with how you prefer the author information to be).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# https://bookdown.org/yihui/blogdown/global-options.html
options(blogdown.author = &amp;#39;L. Collado-Torres&amp;#39;)
options(blogdown.ext = &amp;#39;.Rmd&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The next time you write a blog post, &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; will know what options you prefer.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-09-contributing-to-the-libd-rstats-club_files/Screen Shot 2018-03-08 at 6.42.04 PM.png&#34; alt=&#34;Author and extension&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;use-a-blog-template&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Use a blog template&lt;/h4&gt;
&lt;p&gt;Next lets choose the blog archetype (template) that for posts, that is &lt;code&gt;post&lt;/code&gt; under &lt;code&gt;Archetype&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-09-contributing-to-the-libd-rstats-club_files/Screen%20Shot%202018-03-08%20at%206.42.23%20PM.png&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;The reasons why a blog template is useful are described in full detail &lt;a href=&#34;http://lcolladotor.github.io/2018/03/08/blogdown-archetype-template/#.WqH1WJPwY0o&#34;&gt;in this blog post by L. Collado-Torres&lt;/a&gt;. The quick version is that it will pre-populate your new blog post with helpful information and reminders on how to do &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; or &lt;span class=&#34;math inline&#34;&gt;\(Y\)&lt;/span&gt;. For example, how to &lt;a href=&#34;http://lcolladotor.github.io/2018/03/07/blogdown-insert-image-addin/#.WqH1bJPwY0o&#34;&gt;insert external images&lt;/a&gt;, how to control the figure height and width for images generated by R, how to cite packages, and including the R reproducibility information by default.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;use-appropriate-post-categories&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Use appropriate post categories&lt;/h4&gt;
&lt;p&gt;Most of our blog posts will likely be about R. For those blog posts, select the &lt;code&gt;rstats&lt;/code&gt; category as shown below.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-09-contributing-to-the-libd-rstats-club_files/Screen%20Shot%202018-03-08%20at%206.42.33%20PM.png&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;If your blog post covers a topic that might be useful to new LIBD members use the &lt;code&gt;setup&lt;/code&gt; category. If it involves using the JHPCE cluster, use &lt;code&gt;jhpce&lt;/code&gt; as a category, etc. The &lt;em&gt;New Post&lt;/em&gt; &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; addin lets you see which categories and tags have been used before to classify posts. In general, we should aim to have a handful of categories while having as many tags as necessary. These will be useful for filtering our blog posts.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;hit-done-well-check-before&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Hit done! (well check before)&lt;/h4&gt;
&lt;p&gt;We are now basically set to start our new blog post. Just double check:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the categories,&lt;/li&gt;
&lt;li&gt;that the format is &lt;code&gt;.Rmd&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;that the archetype is &lt;code&gt;post&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;post title,&lt;/li&gt;
&lt;li&gt;post date,&lt;/li&gt;
&lt;li&gt;post author.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-09-contributing-to-the-libd-rstats-club_files/Screen Shot 2018-03-08 at 6.42.53 PM.png&#34; alt=&#34;&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;Aaaaand hit &lt;strong&gt;done&lt;/strong&gt;!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;edit-your-blog-post&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Edit your blog post&lt;/h3&gt;
&lt;p&gt;You can now write your blog post using the &lt;a href=&#34;https://rmarkdown.rstudio.com/lesson-2.html&#34;&gt;R Markdown syntax&lt;/a&gt;. Note that you won‚Äôt be using the &lt;code&gt;knit&lt;/code&gt; button from RStudio since the &lt;em&gt;Serve Site&lt;/em&gt; &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; addin should be doing all the work for you and updating your local website preview.&lt;/p&gt;
&lt;p&gt;When writing your blog post keep in mind our &lt;a href=&#34;http://research.libd.org/rstatsclub/#coc&#34;&gt;Code of Conduct&lt;/a&gt; and that your our blog posts have to comply with the confidentiality agreement we signed at LIBD.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;share-your-blog-post&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Share your blog post&lt;/h3&gt;
&lt;p&gt;Once you are happy with the final version of your blog post and have used the spell check from RStudio, add your blog post files to &lt;a href=&#34;https://github.com/LieberInstitute/rstatsclubsource&#34;&gt;github.com/LieberInstitute/rstatsclubsource&lt;/a&gt;. First, remember to &lt;code&gt;git pull&lt;/code&gt; in case that there are new files in the repository that you don‚Äôt have. Next check which files you modified by running &lt;code&gt;git status&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;cd ~/Desktop/rstatsclubsource
git status&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Typically, you should see that you have untracked files under &lt;code&gt;rstatsclubsource/content/post&lt;/code&gt; and maybe &lt;code&gt;rstatsclubsource/static/post/&lt;/code&gt;. If so, add them to the github repository with the following sequence of commands.&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;git add content/post/*
git add static/post/*
git commit -m &amp;quot;Short description of your new blog post&amp;quot;
git push&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You could also do this with a git GUI such as the git tools in RStudio, &lt;a href=&#34;https://www.sourcetreeapp.com/&#34;&gt;SourceTree&lt;/a&gt; (works for both Mac and Windows), the &lt;code&gt;gitk&lt;/code&gt; command, etc.&lt;/p&gt;
&lt;p&gt;After a quick review we will update the files at &lt;a href=&#34;https://github.com/LieberInstitute/rstatsclub&#34;&gt;github.com/LieberInstitute/rstatsclub&lt;/a&gt; and deploy the changes to GitHub.&lt;/p&gt;
&lt;p&gt;Good luck with your first of many &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; posts!!!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/3ornk7TgUdhjhTYgta/giphy.gif&#34;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://giphy.com/reactions/featured/good-luck&#34;&gt;Source&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;details&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Details&lt;/h3&gt;
&lt;p&gt;We are keeping both &lt;a href=&#34;https://github.com/LieberInstitute/rstatsclubsource&#34;&gt;github.com/LieberInstitute/rstatsclubsource&lt;/a&gt; and &lt;a href=&#34;https://github.com/LieberInstitute/rstatsclub&#34;&gt;github.com/LieberInstitute/rstatsclub&lt;/a&gt; as private repositories to enable contributors to write posts anonymously.&lt;/p&gt;
&lt;p&gt;The default license for our blog posts is (CC) BY-NC-SA 4.0 which you can read more about &lt;a href=&#34;https://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;here&lt;/a&gt;. If you write a blog post under a different license, please make it clear. Also please attribute the sources of the material you use.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;further-reading&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Further reading&lt;/h3&gt;
&lt;p&gt;If you want to learn even more, check the &lt;a href=&#34;https://bookdown.org/yihui/blogdown/&#34;&gt;blogdown book&lt;/a&gt; and the &lt;a href=&#34;https://github.com/gcushen/hugo-academic&#34;&gt;hugo-academic theme&lt;/a&gt;. Maybe you can help with &lt;a href=&#34;https://github.com/gcushen/hugo-academic/issues/467&#34;&gt;this currently unresolved issue&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you want to check a public version equivalent to the one described here, check:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/lcolladotor/hugoblog&#34;&gt;github.com/lcolladotor/hugoblog&lt;/a&gt; which is the equivalent of &lt;a href=&#34;https://github.com/LieberInstitute/rstatsclubsource&#34;&gt;github.com/LieberInstitute/rstatsclubsource&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/lcolladotor/lcolladotor.github.com&#34;&gt;github.com/lcolladotor/lcolladotor.github.com&lt;/a&gt; which is the equivalent of &lt;a href=&#34;https://github.com/LieberInstitute/rstatsclub&#34;&gt;github.com/LieberInstitute/rstatsclub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;hugoblog
    ## From https://github.com/lcolladotor/hugoblog
    content/
        post/
        ...
    static/
        post/
        img/
        ...
    themes/
        hugo-academic/
        ## From https://github.com/gcushen/hugo-academic
        ## linked as a git submodule
    public/
        ## https://github.com/lcolladotor/lcolladotor.github.com
        ## Hosts the files that make up the website
        ## http://lcolladotor.github.io/&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;acknowledgements&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This blog post was made possible thanks to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;http://bioconductor.org/packages/BiocStyle&#34;&gt;BiocStyle&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Oles_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/Bioconductor/BiocStyle&#39;&gt;Ole≈õ, Morgan, and Huber, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; (&lt;a href=&#39;https://github.com/rstudio/blogdown&#39;&gt;Xie, Hill, and Thomas, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=devtools&#34;&gt;devtools&lt;/a&gt;&lt;/em&gt; (&lt;a href=&#39;https://CRAN.R-project.org/package=devtools&#39;&gt;Wickham, Hester, and Chang, 2018&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;knitcitations&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Boettiger_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=knitcitations&#39;&gt;Boettiger, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Boettiger_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Boettiger_2017&#34;&gt;[1]&lt;/a&gt;&lt;cite&gt; C. Boettiger. &lt;em&gt;knitcitations: Citations for ‚ÄòKnitr‚Äô Markdown Files&lt;/em&gt;. R package version 1.0.8. 2017. URL: &lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;https://CRAN.R-project.org/package=knitcitations&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Oles_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Oles_2017&#34;&gt;[2]&lt;/a&gt;&lt;cite&gt; A. Ole≈õ, M. Morgan and W. Huber. &lt;em&gt;BiocStyle: Standard styles for vignettes and other Bioconductor documents&lt;/em&gt;. R package version 2.6.1. 2017. URL: &lt;a href=&#34;https://github.com/Bioconductor/BiocStyle&#34;&gt;https://github.com/Bioconductor/BiocStyle&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Wickham_2018&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Wickham_2018&#34;&gt;[3]&lt;/a&gt;&lt;cite&gt; H. Wickham, J. Hester and W. Chang. &lt;em&gt;devtools: Tools to Make Developing R Packages Easier&lt;/em&gt;. R package version 1.13.5. 2018. URL: &lt;a href=&#34;https://CRAN.R-project.org/package=devtools&#34;&gt;https://CRAN.R-project.org/package=devtools&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Xie_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Xie_2017&#34;&gt;[4]&lt;/a&gt;&lt;cite&gt; Y. Xie, A. P. Hill and A. Thomas. &lt;em&gt;blogdown: Creating Websites with R Markdown&lt;/em&gt;. ISBN 978-0815363729. Boca Raton, Florida: Chapman and Hall/CRC, 2017. URL: &lt;a href=&#34;https://github.com/rstudio/blogdown&#34;&gt;https://github.com/rstudio/blogdown&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;reproducibility&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Reproducibility&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;## Session info ----------------------------------------------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  setting  value                       
##  version  R version 3.4.3 (2017-11-30)
##  system   x86_64, darwin15.6.0        
##  ui       X11                         
##  language (EN)                        
##  collate  en_US.UTF-8                 
##  tz       America/New_York            
##  date     2018-03-10&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Packages --------------------------------------------------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  package       * version date       source                            
##  backports       1.1.2   2017-12-13 CRAN (R 3.4.3)                    
##  base          * 3.4.3   2017-12-07 local                             
##  bibtex          0.4.2   2017-06-30 CRAN (R 3.4.1)                    
##  BiocStyle     * 2.6.1   2017-11-30 Bioconductor                      
##  blogdown        0.5.9   2018-03-08 Github (rstudio/blogdown@dc1f41c) 
##  bookdown        0.7     2018-02-18 cran (@0.7)                       
##  colorout      * 1.2-0   2018-02-19 Github (jalvesaq/colorout@2f01173)
##  compiler        3.4.3   2017-12-07 local                             
##  datasets      * 3.4.3   2017-12-07 local                             
##  devtools      * 1.13.5  2018-02-18 CRAN (R 3.4.3)                    
##  digest          0.6.15  2018-01-28 CRAN (R 3.4.3)                    
##  evaluate        0.10.1  2017-06-24 CRAN (R 3.4.1)                    
##  graphics      * 3.4.3   2017-12-07 local                             
##  grDevices     * 3.4.3   2017-12-07 local                             
##  htmltools       0.3.6   2017-04-28 CRAN (R 3.4.0)                    
##  httr            1.3.1   2017-08-20 CRAN (R 3.4.1)                    
##  jsonlite        1.5     2017-06-01 CRAN (R 3.4.0)                    
##  knitcitations * 1.0.8   2017-07-04 CRAN (R 3.4.1)                    
##  knitr           1.20    2018-02-20 cran (@1.20)                      
##  lubridate       1.7.3   2018-02-27 CRAN (R 3.4.3)                    
##  magrittr        1.5     2014-11-22 CRAN (R 3.4.0)                    
##  memoise         1.1.0   2017-04-21 CRAN (R 3.4.0)                    
##  methods       * 3.4.3   2017-12-07 local                             
##  plyr            1.8.4   2016-06-08 CRAN (R 3.4.0)                    
##  R6              2.2.2   2017-06-17 CRAN (R 3.4.0)                    
##  Rcpp            0.12.15 2018-01-20 CRAN (R 3.4.3)                    
##  RefManageR      0.14.20 2017-08-17 CRAN (R 3.4.1)                    
##  rmarkdown       1.9     2018-03-01 cran (@1.9)                       
##  rprojroot       1.3-2   2018-01-03 CRAN (R 3.4.3)                    
##  stats         * 3.4.3   2017-12-07 local                             
##  stringi         1.1.6   2017-11-17 CRAN (R 3.4.2)                    
##  stringr         1.3.0   2018-02-19 cran (@1.3.0)                     
##  tools           3.4.3   2017-12-07 local                             
##  utils         * 3.4.3   2017-12-07 local                             
##  withr           2.1.1   2017-12-19 CRAN (R 3.4.3)                    
##  xfun            0.1     2018-01-22 CRAN (R 3.4.3)                    
##  xml2            1.2.0   2018-01-24 CRAN (R 3.4.3)                    
##  yaml            2.1.17  2018-02-27 cran (@2.1.17)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Welcome to the LIBD rstats club!</title>
      <link>/post/welcome-to-the-libd-rstats-club/</link>
      <pubDate>Fri, 09 Mar 2018 00:00:00 +0000</pubDate>
      <guid>/post/welcome-to-the-libd-rstats-club/</guid>
      <description>


&lt;p&gt;Welcome to the &lt;strong&gt;LIBD rstats club&lt;/strong&gt;!&lt;/p&gt;
&lt;p&gt;A few months ago &lt;a href=&#34;https://www.libd.org/team/Carrie-Wright/&#34;&gt;Carrie Wright&lt;/a&gt; and &lt;a href=&#34;https://www.libd.org/team/Leonardo-Collado-Torres/&#34;&gt;Leonardo Collado-Torres&lt;/a&gt; started an &lt;em&gt;R + Journal&lt;/em&gt; club where we have been meeting every other week to talk about &lt;a href=&#34;https://cran.r-project.org/&#34;&gt;R&lt;/a&gt; packages and discuss journal articles in our field. Some examples of what we covered are &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=tidyverse&#34;&gt;tidyverse&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Wickham_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=tidyverse&#39;&gt;Wickham, 2017&lt;/a&gt;), &lt;em&gt;&lt;a href=&#34;http://bioconductor.org/packages/BiocStyle&#34;&gt;BiocStyle&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Oles_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/Bioconductor/BiocStyle&#39;&gt;Ole≈õ, Morgan, and Huber, 2017&lt;/a&gt;) and &lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=rmarkdown&#34;&gt;rmarkdown&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Allaire_2018&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=rmarkdown&#39;&gt;Allaire, Xie, McPherson, Luraschi, et al., 2018&lt;/a&gt;) presentations. We are now taking the R portion of the club to the next level.&lt;/p&gt;
&lt;p&gt;Like we say in the about section, we are researchers at &lt;a href=&#34;https://www.libd.org/&#34;&gt;LIBD&lt;/a&gt; that frequently use &lt;a href=&#34;https://cran.r-project.org/&#34;&gt;R&lt;/a&gt; and other tools. The &lt;a href=&#34;https://twitter.com/search?q=%23rstats&#34;&gt;R community&lt;/a&gt; has been &lt;a href=&#34;https://stackoverflow.blog/2017/10/10/impressive-growth-r/&#34;&gt;growing a lot in recent years&lt;/a&gt; and it‚Äôs not easy to keep ourselves updated on all the recent developments. We also work in a dynamic environment where new people join LIBD frequently as students, post-docs and staff.&lt;/p&gt;
&lt;p&gt;In the &lt;strong&gt;LIBD rstats club&lt;/strong&gt; we plan to write blog posts about R packages we are interested in or are just learning how to use, &lt;em&gt;how to do&lt;/em&gt; guides, and occasionally our &lt;a href=&#34;http://github.com/LieberInstitute&#34;&gt;own open-source software&lt;/a&gt;. For our &lt;em&gt;how to do&lt;/em&gt; guides, the idea is that if two people asks us how to do &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt;, then it‚Äôs probably a good time to write a blog post. Similar to &lt;a href=&#34;https://twitter.com/drob&#34;&gt;David Robinson&lt;/a&gt;‚Äôs advice:&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;
&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;
When you‚Äôve written the same code 3 times, write a function&lt;br&gt;&lt;br&gt;When you‚Äôve given the same in-person advice 3 times, write a blog post
&lt;/p&gt;
‚Äî David Robinson (&lt;span class=&#34;citation&#34;&gt;@drob&lt;/span&gt;) &lt;a href=&#34;https://twitter.com/drob/status/928447584712253440?ref_src=twsrc%5Etfw&#34;&gt;November 9, 2017&lt;/a&gt;
&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;We are doing this to help each other at &lt;a href=&#34;https://www.libd.org/&#34;&gt;LIBD&lt;/a&gt;, to help future new colleagues and students, and the community at large. We also hope to receive feedback from the community (that complies with our &lt;a href=&#34;http://LieberInstitute.github.io/rstatsclub/#coc&#34;&gt;code of conduct&lt;/a&gt;) that will be beneficial to everyone reading the posts. Maybe you know of an alternative way to do the same task we describe.&lt;/p&gt;
&lt;p&gt;Thank you for tuning in! Follow us via &lt;a href=&#34;http://feeds.feedburner.com/LIBDrstatsclub&#34;&gt;RSS&lt;/a&gt; (allows email subscriptions) or &lt;a href=&#34;https://twitter.com/LIBDrstats&#34;&gt;Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Founding members: &lt;a href=&#34;https://www.libd.org/team/Leonardo-Collado-Torres/&#34;&gt;Leonardo Collado-Torres&lt;/a&gt;, &lt;a href=&#34;https://www.libd.org/team/Carrie-Wright/&#34;&gt;Carrie Wright&lt;/a&gt; and &lt;a href=&#34;https://www.libd.org/team/emily-e-burke/&#34;&gt;Emily E. Burke&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;PS This is not a course or boot camp site to get started using R, for that there are other resources available.&lt;/p&gt;
&lt;div id=&#34;details&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Details&lt;/h3&gt;
&lt;p&gt;Anyone at LIBD is welcome to participate and contribute blog posts: we will add you to the &lt;a href=&#34;http://LieberInstitute.github.io/rstatsclub/#members&#34;&gt;members&lt;/a&gt; section. Just remember that your blog posts have to comply with the confidentiality agreement we signed. We also welcome anonymous posts, though signing them &lt;em&gt;can&lt;/em&gt; be &lt;a href=&#34;http://varianceexplained.org/r/start-blog/&#34;&gt;useful for exposure and CV building&lt;/a&gt;, although not necessary.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;acknowledgements&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This blog post was made possible thanks to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;http://bioconductor.org/packages/BiocStyle&#34;&gt;BiocStyle&lt;/a&gt;&lt;/em&gt; (&lt;a href=&#39;https://github.com/Bioconductor/BiocStyle&#39;&gt;Ole≈õ, Morgan, and Huber, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Xie_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/rstudio/blogdown&#39;&gt;Xie, Hill, and Thomas, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=devtools&#34;&gt;devtools&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Wickham_2018&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=devtools&#39;&gt;Wickham, Hester, and Chang, 2018&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;knitcitations&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Boettiger_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=knitcitations&#39;&gt;Boettiger, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Allaire_2018&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Allaire_2018&#34;&gt;[1]&lt;/a&gt;&lt;cite&gt; J. Allaire, Y. Xie, J. McPherson, J. Luraschi, et al. &lt;em&gt;rmarkdown: Dynamic Documents for R&lt;/em&gt;. R package version 1.9. 2018. URL: &lt;a href=&#34;https://CRAN.R-project.org/package=rmarkdown&#34;&gt;https://CRAN.R-project.org/package=rmarkdown&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Boettiger_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Boettiger_2017&#34;&gt;[2]&lt;/a&gt;&lt;cite&gt; C. Boettiger. &lt;em&gt;knitcitations: Citations for ‚ÄòKnitr‚Äô Markdown Files&lt;/em&gt;. R package version 1.0.8. 2017. URL: &lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;https://CRAN.R-project.org/package=knitcitations&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Oles_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Oles_2017&#34;&gt;[3]&lt;/a&gt;&lt;cite&gt; A. Ole≈õ, M. Morgan and W. Huber. &lt;em&gt;BiocStyle: Standard styles for vignettes and other Bioconductor documents&lt;/em&gt;. R package version 2.6.1. 2017. URL: &lt;a href=&#34;https://github.com/Bioconductor/BiocStyle&#34;&gt;https://github.com/Bioconductor/BiocStyle&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Wickham_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Wickham_2017&#34;&gt;[4]&lt;/a&gt;&lt;cite&gt; H. Wickham. &lt;em&gt;tidyverse: Easily Install and Load the ‚ÄòTidyverse‚Äô&lt;/em&gt;. R package version 1.2.1. 2017. URL: &lt;a href=&#34;https://CRAN.R-project.org/package=tidyverse&#34;&gt;https://CRAN.R-project.org/package=tidyverse&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Wickham_2018&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Wickham_2018&#34;&gt;[5]&lt;/a&gt;&lt;cite&gt; H. Wickham, J. Hester and W. Chang. &lt;em&gt;devtools: Tools to Make Developing R Packages Easier&lt;/em&gt;. R package version 1.13.5. 2018. URL: &lt;a href=&#34;https://CRAN.R-project.org/package=devtools&#34;&gt;https://CRAN.R-project.org/package=devtools&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Xie_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Xie_2017&#34;&gt;[6]&lt;/a&gt;&lt;cite&gt; Y. Xie, A. P. Hill and A. Thomas. &lt;em&gt;blogdown: Creating Websites with R Markdown&lt;/em&gt;. ISBN 978-0815363729. Boca Raton, Florida: Chapman and Hall/CRC, 2017. URL: &lt;a href=&#34;https://github.com/rstudio/blogdown&#34;&gt;https://github.com/rstudio/blogdown&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;reproducibility&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Reproducibility&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;## Session info ----------------------------------------------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  setting  value                       
##  version  R version 3.4.3 (2017-11-30)
##  system   x86_64, darwin15.6.0        
##  ui       X11                         
##  language (EN)                        
##  collate  en_US.UTF-8                 
##  tz       America/New_York            
##  date     2018-03-08&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Packages --------------------------------------------------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  package       * version date       source                            
##  backports       1.1.2   2017-12-13 CRAN (R 3.4.3)                    
##  base          * 3.4.3   2017-12-07 local                             
##  bibtex          0.4.2   2017-06-30 CRAN (R 3.4.1)                    
##  BiocStyle     * 2.6.1   2017-11-30 Bioconductor                      
##  blogdown        0.5.9   2018-03-08 Github (rstudio/blogdown@dc1f41c) 
##  bookdown        0.7     2018-02-18 cran (@0.7)                       
##  colorout      * 1.2-0   2018-02-19 Github (jalvesaq/colorout@2f01173)
##  compiler        3.4.3   2017-12-07 local                             
##  datasets      * 3.4.3   2017-12-07 local                             
##  devtools      * 1.13.5  2018-02-18 CRAN (R 3.4.3)                    
##  digest          0.6.15  2018-01-28 CRAN (R 3.4.3)                    
##  evaluate        0.10.1  2017-06-24 CRAN (R 3.4.1)                    
##  graphics      * 3.4.3   2017-12-07 local                             
##  grDevices     * 3.4.3   2017-12-07 local                             
##  htmltools       0.3.6   2017-04-28 CRAN (R 3.4.0)                    
##  httr            1.3.1   2017-08-20 CRAN (R 3.4.1)                    
##  jsonlite        1.5     2017-06-01 CRAN (R 3.4.0)                    
##  knitcitations * 1.0.8   2017-07-04 CRAN (R 3.4.1)                    
##  knitr           1.20    2018-02-20 cran (@1.20)                      
##  lubridate       1.7.3   2018-02-27 CRAN (R 3.4.3)                    
##  magrittr        1.5     2014-11-22 CRAN (R 3.4.0)                    
##  memoise         1.1.0   2017-04-21 CRAN (R 3.4.0)                    
##  methods       * 3.4.3   2017-12-07 local                             
##  plyr            1.8.4   2016-06-08 CRAN (R 3.4.0)                    
##  R6              2.2.2   2017-06-17 CRAN (R 3.4.0)                    
##  Rcpp            0.12.15 2018-01-20 CRAN (R 3.4.3)                    
##  RefManageR      0.14.20 2017-08-17 CRAN (R 3.4.1)                    
##  rmarkdown       1.9     2018-03-01 cran (@1.9)                       
##  rprojroot       1.3-2   2018-01-03 CRAN (R 3.4.3)                    
##  stats         * 3.4.3   2017-12-07 local                             
##  stringi         1.1.6   2017-11-17 CRAN (R 3.4.2)                    
##  stringr         1.3.0   2018-02-19 cran (@1.3.0)                     
##  tools           3.4.3   2017-12-07 local                             
##  utils         * 3.4.3   2017-12-07 local                             
##  withr           2.1.1   2017-12-19 CRAN (R 3.4.3)                    
##  xfun            0.1     2018-01-22 CRAN (R 3.4.3)                    
##  xml2            1.2.0   2018-01-24 CRAN (R 3.4.3)                    
##  yaml            2.1.17  2018-02-27 cran (@2.1.17)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
