<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>terminal | Academic</title>
    <link>/tags/terminal/</link>
      <atom:link href="/tags/terminal/index.xml" rel="self" type="application/rss+xml" />
    <description>terminal</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Sun, 11 Mar 2018 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/img/icon-192.png</url>
      <title>terminal</title>
      <link>/tags/terminal/</link>
    </image>
    
    <item>
      <title>Edit your bashrc file for a nicer terminal experience</title>
      <link>/post/edit-your-bashrc-file-for-a-nicer-terminal-experience/</link>
      <pubDate>Sun, 11 Mar 2018 00:00:00 +0000</pubDate>
      <guid>/post/edit-your-bashrc-file-for-a-nicer-terminal-experience/</guid>
      <description>


&lt;p&gt;By &lt;a href=&#34;http://lcolladotor.github.io&#34;&gt;L. Collado-Torres&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are working at LIBD or with large data, it’s very likely that it won’t fit in your laptop and that you’ll be using the terminal to interact with a high performance computing cluster (like &lt;a href=&#34;http://www.jhpce.jhu.edu/&#34;&gt;JHPCE&lt;/a&gt;) or server. Some small edits to your bash configuration file can make your terminal experience much more enjoyable and hopefully boost your productivity. The edits described below work for any OS. On Windows, I’m assuming that you are using &lt;code&gt;git bash&lt;/code&gt; or a similar terminal program.&lt;/p&gt;
&lt;p&gt;The way we can control our terminal appearance and some behavior is through the &lt;code&gt;.bashrc&lt;/code&gt; file. That file typically gets read once when loading a new terminal window and that is where we can save some shortcuts we like to use, alter the colors of our terminal, change the behavior of the up and down arrow keys, etc.&lt;/p&gt;
&lt;div id=&#34;bashrc-file&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;code&gt;.bashrc&lt;/code&gt; file&lt;/h3&gt;
&lt;p&gt;First, we need to learn where to locate this file. On all OS (Mac, Windows, Linux) machines/servers, the &lt;code&gt;.bashrc&lt;/code&gt; file typically lives at &lt;code&gt;~/.bashrc&lt;/code&gt;. For my Mac for example that is &lt;code&gt;/home/lcollado/.bashrc&lt;/code&gt;. For my Windows machine, that’s &lt;code&gt;/c/Users/Leonardo/.bashrc&lt;/code&gt;. Now, the dot before the file makes it a &lt;em&gt;hidden file&lt;/em&gt;. &lt;a href=&#34;http://lmgtfy.com/?q=show+hidden+files&#34;&gt;A quick search can help you&lt;/a&gt; find the options for your computer that lets you see these hidden files. From a terminal window, I typically use this bash command to show all the hidden files (that’s from the &lt;code&gt;a&lt;/code&gt; option).&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;## List files in human readable format including hidden files
ls -lha&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;initial-files&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Initial files&lt;/h3&gt;
&lt;p&gt;You might have a &lt;code&gt;~/.bashrc&lt;/code&gt; and a &lt;code&gt;~/.bash_profile&lt;/code&gt; already. If not, lets create simple ones. You can use the &lt;code&gt;touch&lt;/code&gt; bash command for make a new file (&lt;code&gt;touch ~/.bashrc&lt;/code&gt;), or you could use this R code:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;file.create(&amp;#39;~/.bashrc&amp;#39;)
file.create(&amp;#39;~/.bash_profile&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next open them with your text editor (say Notepad++, TextMate 2, RStudio, among others) and paste the following contents.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;~/.bash_profile&lt;/code&gt; contents&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Get the aliases and functions
if [ -f ~/.bashrc ]; then
        . ~/.bashrc
fi

# In my Mac one I also have this:
if [ -f ~/.profile ]; then
        . ~/.profile
fi&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Minimal &lt;code&gt;~/.bashrc&lt;/code&gt; contents&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Source global definitions
if [ -f /etc/bashrc ]; then
    . /etc/bashrc
fi&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;control-your-bash-history&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Control your bash history&lt;/h3&gt;
&lt;p&gt;Lets start adding features to our terminal experience by editing the &lt;code&gt;~/.bashrc&lt;/code&gt; file. I typically include comments &lt;code&gt;#&lt;/code&gt; describing what the code is doing and where I learned how to do &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt;. The first part is controlling your bash history. I want to have a longer history than what is included by default and where duplicates are deleted.&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;# http://www.biostat.jhsph.edu/~afisher/ComputingClub/webfiles/KasperHansenPres/IntermediateUnix.pdf
# https://unix.stackexchange.com/questions/48713/how-can-i-remove-duplicates-in-my-bash-history-preserving-order
export HISTCONTROL=ignoreboth:erasedups
export HISTSIZE=10000
shopt -s histappend
shopt -s cmdhist&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;change-the-up-and-down-arrows&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Change the up and down arrows&lt;/h3&gt;
&lt;p&gt;The next change will save you a lot of time! Plus it goes nicely with the bash history changes we just made. Normally, the up and down arrow let you select previous commands from your bash history (up) or select one of your latest commands (down, after having used up). The following changes make it so that the up arrow searches only commands that start with exactly the letters you had already typed.&lt;/p&gt;
&lt;p&gt;Lets say that you just requested a compute node with &lt;code&gt;qrsh&lt;/code&gt; and you have an empty line.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-edit-your-bashrc-file-for-a-nicer-terminal-experience_files/Screen Shot 2018-03-11 at 7.38.34 PM.png&#34; alt=&#34;qrsh&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;If you use the &lt;code&gt;up&lt;/code&gt; arrow, you can navigate your command history. So far, this is the same as the default &lt;code&gt;up&lt;/code&gt; arrow behavior.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-edit-your-bashrc-file-for-a-nicer-terminal-experience_files/Screen Shot 2018-03-11 at 7.38.48 PM.png&#34; alt=&#34;empty up&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;Lets say that I want to change directory to one of my recent projects. So I type &lt;code&gt;cd /&lt;/code&gt; in the terminal window (without hitting enter).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-edit-your-bashrc-file-for-a-nicer-terminal-experience_files/Screen Shot 2018-03-11 at 7.39.16 PM.png&#34; alt=&#34;empty cd&#34; width=&#34;300&#34;/&gt;&lt;/p&gt;
&lt;p&gt;Next I use the &lt;code&gt;up&lt;/code&gt; arrow, and it only finds for me commands that start with &lt;code&gt;cd /&lt;/code&gt;, including this long one.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://LieberInstitute.github.io/rstatsclub/post/2018-03-11-edit-your-bashrc-file-for-a-nicer-terminal-experience_files/Screen Shot 2018-03-11 at 7.39.52 PM.png&#34; alt=&#34;cd and up&#34; width=&#34;500&#34;/&gt;&lt;/p&gt;
&lt;p&gt;Did you like this? Well, add the following code to your &lt;code&gt;~/.bashrc&lt;/code&gt; file&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;# Auto-complete command from history
# http://lindesk.com/2009/04/customize-terminal-configuration-setting-bash-cli-power-user/
export INPUTRC=~/.inputrc&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;where &lt;code&gt;~/.inputrc&lt;/code&gt; file has the following contents:&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;#Page up/page down
&amp;quot;\e[B&amp;quot;: history-search-forward
&amp;quot;\e[A&amp;quot;: history-search-backward

$include /etc/inputrc&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As an added benefit, the up and down arrows will now have this improved behavior when you run &lt;code&gt;R&lt;/code&gt; inside a terminal, although it’s limited to your current R history: actually, I guess that you could change your .Rprofile to load the previous R history.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;interactive-deleting-of-files&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Interactive deleting of files&lt;/h3&gt;
&lt;p&gt;In a terminal, you normally delete files with &lt;code&gt;rm&lt;/code&gt;, but you can make an alias (shortcut) so that when you are deleting files with &lt;code&gt;rmi&lt;/code&gt; you will get asked to confirm whether you want to delete the file or not. This can be useful if you are using some patterns for finding the files that you are trying to delete but want to make sure that the pattern didn’t catch other files you want to keep.&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;# http://superuser.com/questions/384769/alias-rm-rm-i-considered-harmful
alias rmi=&amp;#39;rm -i&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;change-the-command-prompt&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Change the command prompt&lt;/h3&gt;
&lt;p&gt;You can also control the command prompt. That is, the parts that are shown before you start typing in your terminal. I like keeping it short, so it only shows me the parent directory instead of the full path, plus a small version for the time (hh:mm) in a 12 hour clock. This is sometimes useful if I run some commands and later on want to get a quick idea if any of them took a while to run (specially if I was not looking at the terminal).&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;# Change command prompt
# http://www.cyberciti.biz/tips/howto-linux-unix-bash-shell-setup-prompt.html
# http://www.cyberciti.biz/faq/bash-shell-change-the-color-of-my-shell-prompt-under-linux-or-unix/
# https://bbs.archlinux.org/viewtopic.php?id=48910
# previous in enigma2: &amp;quot;[\u@\h \W]\$ &amp;quot;
# previously in mac: &amp;quot;\h:\W \u\$ &amp;quot;
export PS1=&amp;quot;\[\e[0;33m\]\A \W \$ \[\e[m\]&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;colors&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Colors&lt;/h3&gt;
&lt;p&gt;You can change the colors of your terminal. For example, do you want directories to be shown in blue and/or bold font while executable files are shown in red. This goes in hand with the &lt;code&gt;ls --color=auto&lt;/code&gt; shortcut to make sure that the colors are used (Mac: you might need &lt;code&gt;brew install coreutils&lt;/code&gt; as described &lt;a href=&#34;https://superuser.com/questions/183876/how-do-i-get-ls-color-auto-to-work-on-mac-os-x&#34;&gt;in this blog post&lt;/a&gt;). The following lines of my &lt;code&gt;~/.bashrc&lt;/code&gt; file include some old history of the colors and how I use to have other options.&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;# colors
# http://norbauer.com/notebooks/code/notes/ls-colors-and-terminal-app
# used BSD pattern ExGxFxDxBxEgEdxbxgxhxd on http://geoff.greer.fm/lscolors/
# that tool does not specify the colors, which I did by looking manually at
# http://blog.twistedcode.org/2008/04/lscolors-explained.html
# and the norbauer.com site previously mentioned
alias ls=&amp;quot;ls --color=auto&amp;quot;
#export LS_COLORS=&amp;quot;di=1;34;40:ln=1;36;40:so=1;35;40:pi=1;93;40:ex=1;31;40:bd=1;34;46:cd=1;34;43:su=0;41:sg=0;46:tw=0;47:ow=0;43&amp;quot;
## After switching to RStudio:
# https://askubuntu.com/questions/466198/how-do-i-change-the-color-for-directories-with-ls-in-the-console
export LS_COLORS=&amp;quot;di=0;32:ln=0;36:so=0;35:pi=0;93:ex=0;31:bd=0;34;46:cd=0;34;43:su=0;41:sg=0;46:tw=0;47:ow=0;43:fi=0;33&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Mac extra lines:&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;# Uncomment below for Mac and comment the two previous commands
#export CLICOLOR=1
#export LSCOLORS=&amp;quot;ExGxFxDxBxEgEdxbxgxhxd&amp;quot;
## Actually from https://superuser.com/questions/183876/how-do-i-get-ls-color-auto-to-work-on-mac-os-x
# brew install coreutils
# then change the aliast to use gls instead of ls
# that way I can use the same config file =)

alias ls=&amp;quot;gls --color=auto&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I use the same &lt;code&gt;LS_COLORS&lt;/code&gt; now on my Mac too, but you don’t need to.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;UPDATE&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We got this note from Mark Miller, admin of &lt;a href=&#34;http://www.jhpce.jhu.edu/&#34;&gt;JHPCE&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One quick note on your page. You mention setting colors for the ls output, which is great. One thing we (and others) have found is that, for a directory on a Lustre filesystem (/dcl01 or /dcl02), using “ls –colors=auto” or “ls -al” on a directory with lots (thousands+) of files in it can be super slow. With these options, the ls command needs to iterate through each file in the directory, and query the lustre server for each and every file to retrieve information about the file in order to determine what color to display. So, if you’re regularly using directories on Lustre that have lots of files in them, and your “ls” command it taking too long, we recommend using “ls –color=none”. &lt;a href=&#34;https://wikis.nyu.edu/display/NYUHPC/Lustre+FAQ&#34; class=&#34;uri&#34;&gt;https://wikis.nyu.edu/display/NYUHPC/Lustre+FAQ&lt;/a&gt; &lt;a href=&#34;https://groups.google.com/forum/#!topic/lustre-discuss-list/3afjd4j2Q-g&#34; class=&#34;uri&#34;&gt;https://groups.google.com/forum/#!topic/lustre-discuss-list/3afjd4j2Q-g&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;shortcuts-for-main-project-directories&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Shortcuts for main project directories&lt;/h3&gt;
&lt;p&gt;We’ve seen several aliases (shortcuts) already such as the one for &lt;code&gt;ls --color=auto&lt;/code&gt; which is the one I use the most. But I also use aliases for changing to the root directories that I use &lt;em&gt;the&lt;/em&gt; most.&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;alias labold=&amp;quot;cd /dcl01/lieber/ajaffe/lab&amp;quot;
alias lab=&amp;quot;cd /dcl01/ajaffe/data/lab&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Actually, we were supposed to just use the new disk here and I should have probably chosen better names to differentiate the two.&lt;/p&gt;
&lt;p&gt;The next terminal window you open after editing the &lt;code&gt;~/.bashrc&lt;/code&gt; file will have all your new features enabled.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/10UeedrT5MIfPG/giphy.gif&#34;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://giphy.com/reactions/search/yay&#34;&gt;Source&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;extra&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Extra&lt;/h3&gt;
&lt;p&gt;Sometimes you might need to export other environment variables, such as &lt;code&gt;RMATE_PORT&lt;/code&gt; described in the &lt;code&gt;rmate&lt;/code&gt; setup &lt;a href=&#34;http://research.libd.org/rstatsclub/2018/03/11/textmate-setup-mac-only/&#34;&gt;post&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;repeat-this-process&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Repeat this process&lt;/h3&gt;
&lt;p&gt;You can/should repeat this process for other &lt;code&gt;~/.bashrc&lt;/code&gt; files you interact with. In my case, that would be:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;~/.bashrc&lt;/code&gt; in my Mac laptop&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~/.bashrc&lt;/code&gt; at my JHPCE home&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~/.bashrc&lt;/code&gt; in my Windows laptop&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;acknowledgements&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This blog post was made possible thanks to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;http://bioconductor.org/packages/BiocStyle&#34;&gt;BiocStyle&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Oles_2018&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/Bioconductor/BiocStyle&#39;&gt;Oleś, Morgan, and Huber, 2018&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=blogdown&#34;&gt;blogdown&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Xie_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://github.com/rstudio/blogdown&#39;&gt;Xie, Hill, and Thomas, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=devtools&#34;&gt;devtools&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Wickham_2018&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=devtools&#39;&gt;Wickham, Hester, and Chang, 2018&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;knitcitations&lt;/a&gt;&lt;/em&gt; &lt;a id=&#39;cite-Boettiger_2017&#39;&gt;&lt;/a&gt;(&lt;a href=&#39;https://CRAN.R-project.org/package=knitcitations&#39;&gt;Boettiger, 2017&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Boettiger_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Boettiger_2017&#34;&gt;[1]&lt;/a&gt;&lt;cite&gt; C. Boettiger. &lt;em&gt;knitcitations: Citations for ‘Knitr’ Markdown Files&lt;/em&gt;. R package version 1.0.8. 2017. URL: &lt;a href=&#34;https://CRAN.R-project.org/package=knitcitations&#34;&gt;https://CRAN.R-project.org/package=knitcitations&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Oles_2018&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Oles_2018&#34;&gt;[2]&lt;/a&gt;&lt;cite&gt; A. Oleś, M. Morgan and W. Huber. &lt;em&gt;BiocStyle: Standard styles for vignettes and other Bioconductor documents&lt;/em&gt;. R package version 2.8.2. 2018. URL: &lt;a href=&#34;https://github.com/Bioconductor/BiocStyle&#34;&gt;https://github.com/Bioconductor/BiocStyle&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Wickham_2018&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Wickham_2018&#34;&gt;[3]&lt;/a&gt;&lt;cite&gt; H. Wickham, J. Hester and W. Chang. &lt;em&gt;devtools: Tools to Make Developing R Packages Easier&lt;/em&gt;. R package version 1.13.6. 2018. URL: &lt;a href=&#34;https://CRAN.R-project.org/package=devtools&#34;&gt;https://CRAN.R-project.org/package=devtools&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;bib-Xie_2017&#39;&gt;&lt;/a&gt;&lt;a href=&#34;#cite-Xie_2017&#34;&gt;[4]&lt;/a&gt;&lt;cite&gt; Y. Xie, A. P. Hill and A. Thomas. &lt;em&gt;blogdown: Creating Websites with R Markdown&lt;/em&gt;. ISBN 978-0815363729. Boca Raton, Florida: Chapman and Hall/CRC, 2017. URL: &lt;a href=&#34;https://github.com/rstudio/blogdown&#34;&gt;https://github.com/rstudio/blogdown&lt;/a&gt;.&lt;/cite&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;reproducibility&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Reproducibility&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;## Session info ----------------------------------------------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  setting  value                                      
##  version  R version 3.5.1 Patched (2018-10-14 r75439)
##  system   x86_64, darwin15.6.0                       
##  ui       X11                                        
##  language (EN)                                       
##  collate  en_US.UTF-8                                
##  tz       America/New_York                           
##  date     2018-10-26&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Packages --------------------------------------------------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  package       * version date       source                            
##  backports       1.1.2   2017-12-13 cran (@1.1.2)                     
##  base          * 3.5.1   2018-10-15 local                             
##  bibtex          0.4.2   2017-06-30 CRAN (R 3.5.0)                    
##  BiocStyle     * 2.8.2   2018-05-30 Bioconductor                      
##  blogdown        0.8     2018-07-15 CRAN (R 3.5.0)                    
##  bookdown        0.7     2018-02-18 CRAN (R 3.5.0)                    
##  colorout      * 1.2-0   2018-05-03 Github (jalvesaq/colorout@c42088d)
##  compiler        3.5.1   2018-10-15 local                             
##  datasets      * 3.5.1   2018-10-15 local                             
##  devtools      * 1.13.6  2018-06-27 cran (@1.13.6)                    
##  digest          0.6.18  2018-10-10 CRAN (R 3.5.0)                    
##  evaluate        0.12    2018-10-09 CRAN (R 3.5.0)                    
##  graphics      * 3.5.1   2018-10-15 local                             
##  grDevices     * 3.5.1   2018-10-15 local                             
##  htmltools       0.3.6   2017-04-28 cran (@0.3.6)                     
##  httr            1.3.1   2017-08-20 CRAN (R 3.5.0)                    
##  jsonlite        1.5     2017-06-01 CRAN (R 3.5.0)                    
##  knitcitations * 1.0.8   2017-07-04 CRAN (R 3.5.0)                    
##  knitr           1.20    2018-02-20 cran (@1.20)                      
##  lubridate       1.7.4   2018-04-11 CRAN (R 3.5.0)                    
##  magrittr        1.5     2014-11-22 cran (@1.5)                       
##  memoise         1.1.0   2017-04-21 CRAN (R 3.5.0)                    
##  methods       * 3.5.1   2018-10-15 local                             
##  plyr            1.8.4   2016-06-08 cran (@1.8.4)                     
##  R6              2.3.0   2018-10-04 CRAN (R 3.5.0)                    
##  Rcpp            0.12.19 2018-10-01 CRAN (R 3.5.1)                    
##  RefManageR      1.2.0   2018-04-25 CRAN (R 3.5.0)                    
##  rmarkdown       1.10    2018-06-11 CRAN (R 3.5.0)                    
##  rprojroot       1.3-2   2018-01-03 cran (@1.3-2)                     
##  stats         * 3.5.1   2018-10-15 local                             
##  stringi         1.2.4   2018-07-20 CRAN (R 3.5.0)                    
##  stringr         1.3.1   2018-05-10 CRAN (R 3.5.0)                    
##  tools           3.5.1   2018-10-15 local                             
##  utils         * 3.5.1   2018-10-15 local                             
##  withr           2.1.2   2018-03-15 CRAN (R 3.5.0)                    
##  xfun            0.3     2018-07-06 CRAN (R 3.5.0)                    
##  xml2            1.2.0   2018-01-24 CRAN (R 3.5.0)                    
##  yaml            2.2.0   2018-07-25 CRAN (R 3.5.0)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
